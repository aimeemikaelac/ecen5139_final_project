-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.1
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity queue is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    isPush : IN STD_LOGIC;
    inData_priority : IN STD_LOGIC_VECTOR (8 downto 0);
    inData_data : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of queue is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal size : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal queueData_priority_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal queueData_priority_ce0 : STD_LOGIC;
    signal queueData_priority_we0 : STD_LOGIC;
    signal queueData_priority_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal queueData_priority_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal queueData_priority_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal queueData_priority_ce1 : STD_LOGIC;
    signal queueData_priority_we1 : STD_LOGIC;
    signal queueData_priority_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal queueData_priority_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal queueData_data_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal queueData_data_ce0 : STD_LOGIC;
    signal queueData_data_we0 : STD_LOGIC;
    signal queueData_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal queueData_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal queueData_data_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal queueData_data_ce1 : STD_LOGIC;
    signal queueData_data_we1 : STD_LOGIC;
    signal queueData_data_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal queueData_data_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tempData_priority_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal tempData_priority_ce0 : STD_LOGIC;
    signal tempData_priority_we0 : STD_LOGIC;
    signal tempData_priority_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tempData_priority_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tempData_priority_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tempData_priority_ce1 : STD_LOGIC;
    signal tempData_priority_we1 : STD_LOGIC;
    signal tempData_priority_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tempData_priority_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tempData_data_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal tempData_data_ce0 : STD_LOGIC;
    signal tempData_data_we0 : STD_LOGIC;
    signal tempData_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tempData_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tempData_data_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tempData_data_ce1 : STD_LOGIC;
    signal tempData_data_we1 : STD_LOGIC;
    signal tempData_data_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tempData_data_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal isPush_read_read_fu_48_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inData_data_cast_fu_117_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal inData_data_cast_reg_195 : STD_LOGIC_VECTOR (31 downto 0);
    signal inData_priority_cast_fu_121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal inData_priority_cast_reg_200 : STD_LOGIC_VECTOR (31 downto 0);
    signal size_load_reg_205 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_211 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_215 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_push_fu_87_ap_start : STD_LOGIC;
    signal grp_push_fu_87_ap_done : STD_LOGIC;
    signal grp_push_fu_87_ap_idle : STD_LOGIC;
    signal grp_push_fu_87_ap_ready : STD_LOGIC;
    signal grp_push_fu_87_queueData_priority_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_fu_87_queueData_priority_ce0 : STD_LOGIC;
    signal grp_push_fu_87_queueData_priority_we0 : STD_LOGIC;
    signal grp_push_fu_87_queueData_priority_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_queueData_priority_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_queueData_priority_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_fu_87_queueData_priority_ce1 : STD_LOGIC;
    signal grp_push_fu_87_queueData_priority_we1 : STD_LOGIC;
    signal grp_push_fu_87_queueData_priority_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_queueData_priority_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_queueData_data_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_fu_87_queueData_data_ce0 : STD_LOGIC;
    signal grp_push_fu_87_queueData_data_we0 : STD_LOGIC;
    signal grp_push_fu_87_queueData_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_queueData_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_queueData_data_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_fu_87_queueData_data_ce1 : STD_LOGIC;
    signal grp_push_fu_87_queueData_data_we1 : STD_LOGIC;
    signal grp_push_fu_87_queueData_data_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_queueData_data_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_item_priority : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_fu_87_item_data : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_push_fu_87_tempData_priority_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_fu_87_tempData_priority_ce0 : STD_LOGIC;
    signal grp_push_fu_87_tempData_priority_we0 : STD_LOGIC;
    signal grp_push_fu_87_tempData_priority_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_tempData_priority_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_tempData_priority_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_fu_87_tempData_priority_ce1 : STD_LOGIC;
    signal grp_push_fu_87_tempData_priority_we1 : STD_LOGIC;
    signal grp_push_fu_87_tempData_priority_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_tempData_priority_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_tempData_data_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_fu_87_tempData_data_ce0 : STD_LOGIC;
    signal grp_push_fu_87_tempData_data_we0 : STD_LOGIC;
    signal grp_push_fu_87_tempData_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_tempData_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_tempData_data_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_push_fu_87_tempData_data_ce1 : STD_LOGIC;
    signal grp_push_fu_87_tempData_data_we1 : STD_LOGIC;
    signal grp_push_fu_87_tempData_data_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_tempData_data_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_ap_start : STD_LOGIC;
    signal grp_pop_fu_104_ap_done : STD_LOGIC;
    signal grp_pop_fu_104_ap_idle : STD_LOGIC;
    signal grp_pop_fu_104_ap_ready : STD_LOGIC;
    signal grp_pop_fu_104_size : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_tempData_priority_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_pop_fu_104_tempData_priority_ce0 : STD_LOGIC;
    signal grp_pop_fu_104_tempData_priority_we0 : STD_LOGIC;
    signal grp_pop_fu_104_tempData_priority_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_tempData_priority_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_tempData_priority_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_pop_fu_104_tempData_priority_ce1 : STD_LOGIC;
    signal grp_pop_fu_104_tempData_priority_we1 : STD_LOGIC;
    signal grp_pop_fu_104_tempData_priority_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_tempData_priority_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_tempData_data_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_pop_fu_104_tempData_data_ce0 : STD_LOGIC;
    signal grp_pop_fu_104_tempData_data_we0 : STD_LOGIC;
    signal grp_pop_fu_104_tempData_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_tempData_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_tempData_data_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_pop_fu_104_tempData_data_ce1 : STD_LOGIC;
    signal grp_pop_fu_104_tempData_data_we1 : STD_LOGIC;
    signal grp_pop_fu_104_tempData_data_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_tempData_data_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_queueData_priority_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_pop_fu_104_queueData_priority_ce0 : STD_LOGIC;
    signal grp_pop_fu_104_queueData_priority_we0 : STD_LOGIC;
    signal grp_pop_fu_104_queueData_priority_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_queueData_priority_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_queueData_priority_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_pop_fu_104_queueData_priority_ce1 : STD_LOGIC;
    signal grp_pop_fu_104_queueData_priority_we1 : STD_LOGIC;
    signal grp_pop_fu_104_queueData_priority_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_queueData_priority_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_queueData_data_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_pop_fu_104_queueData_data_ce0 : STD_LOGIC;
    signal grp_pop_fu_104_queueData_data_we0 : STD_LOGIC;
    signal grp_pop_fu_104_queueData_data_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_queueData_data_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_queueData_data_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_pop_fu_104_queueData_data_ce1 : STD_LOGIC;
    signal grp_pop_fu_104_queueData_data_we1 : STD_LOGIC;
    signal grp_pop_fu_104_queueData_data_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_queueData_data_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pop_fu_104_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal outData_priority_2_phi_fu_58_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal outData_priority_2_reg_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal outData_data_2_phi_fu_74_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal outData_data_2_reg_70 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_push_fu_87_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_pop_fu_104_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_return_0_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_214 : BOOLEAN;
    signal ap_sig_bdd_212 : BOOLEAN;
    signal ap_sig_bdd_221 : BOOLEAN;

    component push IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        queueData_priority_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        queueData_priority_ce0 : OUT STD_LOGIC;
        queueData_priority_we0 : OUT STD_LOGIC;
        queueData_priority_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        queueData_priority_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        queueData_priority_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        queueData_priority_ce1 : OUT STD_LOGIC;
        queueData_priority_we1 : OUT STD_LOGIC;
        queueData_priority_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        queueData_priority_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        queueData_data_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        queueData_data_ce0 : OUT STD_LOGIC;
        queueData_data_we0 : OUT STD_LOGIC;
        queueData_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        queueData_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        queueData_data_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        queueData_data_ce1 : OUT STD_LOGIC;
        queueData_data_we1 : OUT STD_LOGIC;
        queueData_data_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        queueData_data_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        size : IN STD_LOGIC_VECTOR (31 downto 0);
        item_priority : IN STD_LOGIC_VECTOR (8 downto 0);
        item_data : IN STD_LOGIC_VECTOR (7 downto 0);
        tempData_priority_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        tempData_priority_ce0 : OUT STD_LOGIC;
        tempData_priority_we0 : OUT STD_LOGIC;
        tempData_priority_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tempData_priority_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tempData_priority_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        tempData_priority_ce1 : OUT STD_LOGIC;
        tempData_priority_we1 : OUT STD_LOGIC;
        tempData_priority_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tempData_priority_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        tempData_data_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        tempData_data_ce0 : OUT STD_LOGIC;
        tempData_data_we0 : OUT STD_LOGIC;
        tempData_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tempData_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tempData_data_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        tempData_data_ce1 : OUT STD_LOGIC;
        tempData_data_we1 : OUT STD_LOGIC;
        tempData_data_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tempData_data_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        size : IN STD_LOGIC_VECTOR (31 downto 0);
        tempData_priority_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        tempData_priority_ce0 : OUT STD_LOGIC;
        tempData_priority_we0 : OUT STD_LOGIC;
        tempData_priority_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tempData_priority_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tempData_priority_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        tempData_priority_ce1 : OUT STD_LOGIC;
        tempData_priority_we1 : OUT STD_LOGIC;
        tempData_priority_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tempData_priority_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        tempData_data_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        tempData_data_ce0 : OUT STD_LOGIC;
        tempData_data_we0 : OUT STD_LOGIC;
        tempData_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tempData_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tempData_data_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        tempData_data_ce1 : OUT STD_LOGIC;
        tempData_data_we1 : OUT STD_LOGIC;
        tempData_data_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tempData_data_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        queueData_priority_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        queueData_priority_ce0 : OUT STD_LOGIC;
        queueData_priority_we0 : OUT STD_LOGIC;
        queueData_priority_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        queueData_priority_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        queueData_priority_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        queueData_priority_ce1 : OUT STD_LOGIC;
        queueData_priority_we1 : OUT STD_LOGIC;
        queueData_priority_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        queueData_priority_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        queueData_data_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        queueData_data_ce0 : OUT STD_LOGIC;
        queueData_data_we0 : OUT STD_LOGIC;
        queueData_data_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        queueData_data_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        queueData_data_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        queueData_data_ce1 : OUT STD_LOGIC;
        queueData_data_we1 : OUT STD_LOGIC;
        queueData_data_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        queueData_data_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component queue_queueData_priority IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    queueData_priority_U : component queue_queueData_priority
    generic map (
        DataWidth => 32,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => queueData_priority_address0,
        ce0 => queueData_priority_ce0,
        we0 => queueData_priority_we0,
        d0 => queueData_priority_d0,
        q0 => queueData_priority_q0,
        address1 => queueData_priority_address1,
        ce1 => queueData_priority_ce1,
        we1 => queueData_priority_we1,
        d1 => queueData_priority_d1,
        q1 => queueData_priority_q1);

    queueData_data_U : component queue_queueData_priority
    generic map (
        DataWidth => 32,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => queueData_data_address0,
        ce0 => queueData_data_ce0,
        we0 => queueData_data_we0,
        d0 => queueData_data_d0,
        q0 => queueData_data_q0,
        address1 => queueData_data_address1,
        ce1 => queueData_data_ce1,
        we1 => queueData_data_we1,
        d1 => queueData_data_d1,
        q1 => queueData_data_q1);

    tempData_priority_U : component queue_queueData_priority
    generic map (
        DataWidth => 32,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempData_priority_address0,
        ce0 => tempData_priority_ce0,
        we0 => tempData_priority_we0,
        d0 => tempData_priority_d0,
        q0 => tempData_priority_q0,
        address1 => tempData_priority_address1,
        ce1 => tempData_priority_ce1,
        we1 => tempData_priority_we1,
        d1 => tempData_priority_d1,
        q1 => tempData_priority_q1);

    tempData_data_U : component queue_queueData_priority
    generic map (
        DataWidth => 32,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempData_data_address0,
        ce0 => tempData_data_ce0,
        we0 => tempData_data_we0,
        d0 => tempData_data_d0,
        q0 => tempData_data_q0,
        address1 => tempData_data_address1,
        ce1 => tempData_data_ce1,
        we1 => tempData_data_we1,
        d1 => tempData_data_d1,
        q1 => tempData_data_q1);

    grp_push_fu_87 : component push
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_push_fu_87_ap_start,
        ap_done => grp_push_fu_87_ap_done,
        ap_idle => grp_push_fu_87_ap_idle,
        ap_ready => grp_push_fu_87_ap_ready,
        queueData_priority_address0 => grp_push_fu_87_queueData_priority_address0,
        queueData_priority_ce0 => grp_push_fu_87_queueData_priority_ce0,
        queueData_priority_we0 => grp_push_fu_87_queueData_priority_we0,
        queueData_priority_d0 => grp_push_fu_87_queueData_priority_d0,
        queueData_priority_q0 => grp_push_fu_87_queueData_priority_q0,
        queueData_priority_address1 => grp_push_fu_87_queueData_priority_address1,
        queueData_priority_ce1 => grp_push_fu_87_queueData_priority_ce1,
        queueData_priority_we1 => grp_push_fu_87_queueData_priority_we1,
        queueData_priority_d1 => grp_push_fu_87_queueData_priority_d1,
        queueData_priority_q1 => grp_push_fu_87_queueData_priority_q1,
        queueData_data_address0 => grp_push_fu_87_queueData_data_address0,
        queueData_data_ce0 => grp_push_fu_87_queueData_data_ce0,
        queueData_data_we0 => grp_push_fu_87_queueData_data_we0,
        queueData_data_d0 => grp_push_fu_87_queueData_data_d0,
        queueData_data_q0 => grp_push_fu_87_queueData_data_q0,
        queueData_data_address1 => grp_push_fu_87_queueData_data_address1,
        queueData_data_ce1 => grp_push_fu_87_queueData_data_ce1,
        queueData_data_we1 => grp_push_fu_87_queueData_data_we1,
        queueData_data_d1 => grp_push_fu_87_queueData_data_d1,
        queueData_data_q1 => grp_push_fu_87_queueData_data_q1,
        size => grp_push_fu_87_size,
        item_priority => grp_push_fu_87_item_priority,
        item_data => grp_push_fu_87_item_data,
        tempData_priority_address0 => grp_push_fu_87_tempData_priority_address0,
        tempData_priority_ce0 => grp_push_fu_87_tempData_priority_ce0,
        tempData_priority_we0 => grp_push_fu_87_tempData_priority_we0,
        tempData_priority_d0 => grp_push_fu_87_tempData_priority_d0,
        tempData_priority_q0 => grp_push_fu_87_tempData_priority_q0,
        tempData_priority_address1 => grp_push_fu_87_tempData_priority_address1,
        tempData_priority_ce1 => grp_push_fu_87_tempData_priority_ce1,
        tempData_priority_we1 => grp_push_fu_87_tempData_priority_we1,
        tempData_priority_d1 => grp_push_fu_87_tempData_priority_d1,
        tempData_priority_q1 => grp_push_fu_87_tempData_priority_q1,
        tempData_data_address0 => grp_push_fu_87_tempData_data_address0,
        tempData_data_ce0 => grp_push_fu_87_tempData_data_ce0,
        tempData_data_we0 => grp_push_fu_87_tempData_data_we0,
        tempData_data_d0 => grp_push_fu_87_tempData_data_d0,
        tempData_data_q0 => grp_push_fu_87_tempData_data_q0,
        tempData_data_address1 => grp_push_fu_87_tempData_data_address1,
        tempData_data_ce1 => grp_push_fu_87_tempData_data_ce1,
        tempData_data_we1 => grp_push_fu_87_tempData_data_we1,
        tempData_data_d1 => grp_push_fu_87_tempData_data_d1,
        tempData_data_q1 => grp_push_fu_87_tempData_data_q1,
        ap_return => grp_push_fu_87_ap_return);

    grp_pop_fu_104 : component pop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_pop_fu_104_ap_start,
        ap_done => grp_pop_fu_104_ap_done,
        ap_idle => grp_pop_fu_104_ap_idle,
        ap_ready => grp_pop_fu_104_ap_ready,
        size => grp_pop_fu_104_size,
        tempData_priority_address0 => grp_pop_fu_104_tempData_priority_address0,
        tempData_priority_ce0 => grp_pop_fu_104_tempData_priority_ce0,
        tempData_priority_we0 => grp_pop_fu_104_tempData_priority_we0,
        tempData_priority_d0 => grp_pop_fu_104_tempData_priority_d0,
        tempData_priority_q0 => grp_pop_fu_104_tempData_priority_q0,
        tempData_priority_address1 => grp_pop_fu_104_tempData_priority_address1,
        tempData_priority_ce1 => grp_pop_fu_104_tempData_priority_ce1,
        tempData_priority_we1 => grp_pop_fu_104_tempData_priority_we1,
        tempData_priority_d1 => grp_pop_fu_104_tempData_priority_d1,
        tempData_priority_q1 => grp_pop_fu_104_tempData_priority_q1,
        tempData_data_address0 => grp_pop_fu_104_tempData_data_address0,
        tempData_data_ce0 => grp_pop_fu_104_tempData_data_ce0,
        tempData_data_we0 => grp_pop_fu_104_tempData_data_we0,
        tempData_data_d0 => grp_pop_fu_104_tempData_data_d0,
        tempData_data_q0 => grp_pop_fu_104_tempData_data_q0,
        tempData_data_address1 => grp_pop_fu_104_tempData_data_address1,
        tempData_data_ce1 => grp_pop_fu_104_tempData_data_ce1,
        tempData_data_we1 => grp_pop_fu_104_tempData_data_we1,
        tempData_data_d1 => grp_pop_fu_104_tempData_data_d1,
        tempData_data_q1 => grp_pop_fu_104_tempData_data_q1,
        queueData_priority_address0 => grp_pop_fu_104_queueData_priority_address0,
        queueData_priority_ce0 => grp_pop_fu_104_queueData_priority_ce0,
        queueData_priority_we0 => grp_pop_fu_104_queueData_priority_we0,
        queueData_priority_d0 => grp_pop_fu_104_queueData_priority_d0,
        queueData_priority_q0 => grp_pop_fu_104_queueData_priority_q0,
        queueData_priority_address1 => grp_pop_fu_104_queueData_priority_address1,
        queueData_priority_ce1 => grp_pop_fu_104_queueData_priority_ce1,
        queueData_priority_we1 => grp_pop_fu_104_queueData_priority_we1,
        queueData_priority_d1 => grp_pop_fu_104_queueData_priority_d1,
        queueData_priority_q1 => grp_pop_fu_104_queueData_priority_q1,
        queueData_data_address0 => grp_pop_fu_104_queueData_data_address0,
        queueData_data_ce0 => grp_pop_fu_104_queueData_data_ce0,
        queueData_data_we0 => grp_pop_fu_104_queueData_data_we0,
        queueData_data_d0 => grp_pop_fu_104_queueData_data_d0,
        queueData_data_q0 => grp_pop_fu_104_queueData_data_q0,
        queueData_data_address1 => grp_pop_fu_104_queueData_data_address1,
        queueData_data_ce1 => grp_pop_fu_104_queueData_data_ce1,
        queueData_data_we1 => grp_pop_fu_104_queueData_data_we1,
        queueData_data_d1 => grp_pop_fu_104_queueData_data_d1,
        queueData_data_q1 => grp_pop_fu_104_queueData_data_q1,
        ap_return_0 => grp_pop_fu_104_ap_return_0,
        ap_return_1 => grp_pop_fu_104_ap_return_1,
        ap_return_2 => grp_pop_fu_104_ap_return_2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_return_0_preg assign process. --
    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv32_0;
            else
                if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_reg_211 = ap_const_lv1_0) and (ap_const_logic_0 = grp_pop_fu_104_ap_done)) or (not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_reg_215) and (ap_const_logic_0 = grp_push_fu_87_ap_done)))))) then 
                    ap_return_0_preg <= outData_priority_2_phi_fu_58_p8;
                end if; 
            end if;
        end if;
    end process;


    -- ap_return_1_preg assign process. --
    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv32_0;
            else
                if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_reg_211 = ap_const_lv1_0) and (ap_const_logic_0 = grp_pop_fu_104_ap_done)) or (not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_reg_215) and (ap_const_logic_0 = grp_push_fu_87_ap_done)))))) then 
                    ap_return_1_preg <= outData_data_2_phi_fu_74_p8;
                end if; 
            end if;
        end if;
    end process;


    -- grp_pop_fu_104_ap_start_ap_start_reg assign process. --
    grp_pop_fu_104_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_pop_fu_104_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)) and (isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_fu_131_p2 = ap_const_lv1_0))) then 
                    grp_pop_fu_104_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_pop_fu_104_ap_ready)) then 
                    grp_pop_fu_104_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_push_fu_87_ap_start_ap_start_reg assign process. --
    grp_push_fu_87_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_push_fu_87_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)) and not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_fu_137_p2))) then 
                    grp_push_fu_87_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_push_fu_87_ap_ready)) then 
                    grp_push_fu_87_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- outData_data_2_reg_70 assign process. --
    outData_data_2_reg_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)) and not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_fu_137_p2))) or ((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)) and (isPush_read_read_fu_48_p2 = ap_const_lv1_0) and not((tmp_s_fu_131_p2 = ap_const_lv1_0))))) then 
                outData_data_2_reg_70 <= ap_const_lv32_FFFFFFFF;
            elsif (((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (ap_ST_st2_fsm_1 = ap_CS_fsm) and (tmp_s_reg_211 = ap_const_lv1_0) and not((((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_reg_211 = ap_const_lv1_0) and (ap_const_logic_0 = grp_pop_fu_104_ap_done)) or (not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_reg_215) and (ap_const_logic_0 = grp_push_fu_87_ap_done)))))) then 
                outData_data_2_reg_70 <= grp_pop_fu_104_ap_return_2;
            elsif ((not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_reg_215) and not((((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_reg_211 = ap_const_lv1_0) and (ap_const_logic_0 = grp_pop_fu_104_ap_done)) or (not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_reg_215) and (ap_const_logic_0 = grp_push_fu_87_ap_done)))))) then 
                outData_data_2_reg_70 <= inData_data_cast_reg_195;
            end if; 
        end if;
    end process;

    -- outData_priority_2_reg_54 assign process. --
    outData_priority_2_reg_54_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)) and not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_fu_137_p2))) or ((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)) and (isPush_read_read_fu_48_p2 = ap_const_lv1_0) and not((tmp_s_fu_131_p2 = ap_const_lv1_0))))) then 
                outData_priority_2_reg_54 <= ap_const_lv32_7FFFFFFF;
            elsif (((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (ap_ST_st2_fsm_1 = ap_CS_fsm) and (tmp_s_reg_211 = ap_const_lv1_0) and not((((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_reg_211 = ap_const_lv1_0) and (ap_const_logic_0 = grp_pop_fu_104_ap_done)) or (not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_reg_215) and (ap_const_logic_0 = grp_push_fu_87_ap_done)))))) then 
                outData_priority_2_reg_54 <= grp_pop_fu_104_ap_return_1;
            elsif ((not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = tmp_reg_215) and not((((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_reg_211 = ap_const_lv1_0) and (ap_const_logic_0 = grp_pop_fu_104_ap_done)) or (not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_reg_215) and (ap_const_logic_0 = grp_push_fu_87_ap_done)))))) then 
                outData_priority_2_reg_54 <= inData_priority_cast_reg_200;
            end if; 
        end if;
    end process;

    -- size assign process. --
    size_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_221) then
                if (ap_sig_bdd_214) then 
                    size <= grp_push_fu_87_ap_return;
                elsif (ap_sig_bdd_212) then 
                    size <= grp_pop_fu_104_ap_return_0;
                end if;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then
                inData_data_cast_reg_195(0) <= inData_data_cast_fu_117_p1(0);
    inData_data_cast_reg_195(1) <= inData_data_cast_fu_117_p1(1);
    inData_data_cast_reg_195(2) <= inData_data_cast_fu_117_p1(2);
    inData_data_cast_reg_195(3) <= inData_data_cast_fu_117_p1(3);
    inData_data_cast_reg_195(4) <= inData_data_cast_fu_117_p1(4);
    inData_data_cast_reg_195(5) <= inData_data_cast_fu_117_p1(5);
    inData_data_cast_reg_195(6) <= inData_data_cast_fu_117_p1(6);
    inData_data_cast_reg_195(7) <= inData_data_cast_fu_117_p1(7);
                inData_priority_cast_reg_200(0) <= inData_priority_cast_fu_121_p1(0);
    inData_priority_cast_reg_200(1) <= inData_priority_cast_fu_121_p1(1);
    inData_priority_cast_reg_200(2) <= inData_priority_cast_fu_121_p1(2);
    inData_priority_cast_reg_200(3) <= inData_priority_cast_fu_121_p1(3);
    inData_priority_cast_reg_200(4) <= inData_priority_cast_fu_121_p1(4);
    inData_priority_cast_reg_200(5) <= inData_priority_cast_fu_121_p1(5);
    inData_priority_cast_reg_200(6) <= inData_priority_cast_fu_121_p1(6);
    inData_priority_cast_reg_200(7) <= inData_priority_cast_fu_121_p1(7);
    inData_priority_cast_reg_200(8) <= inData_priority_cast_fu_121_p1(8);
                size_load_reg_205 <= size;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)) and not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)))) then
                tmp_reg_215 <= tmp_fu_137_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)) and (isPush_read_read_fu_48_p2 = ap_const_lv1_0))) then
                tmp_s_reg_211 <= tmp_s_fu_131_p2;
            end if;
        end if;
    end process;
    inData_data_cast_reg_195(31 downto 8) <= "000000000000000000000000";
    inData_priority_cast_reg_200(31 downto 9) <= "00000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start , ap_CS_fsm , isPush_read_read_fu_48_p2 , tmp_s_reg_211 , tmp_reg_215 , grp_push_fu_87_ap_done , grp_pop_fu_104_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_reg_211 = ap_const_lv1_0) and (ap_const_logic_0 = grp_pop_fu_104_ap_done)) or (not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_reg_215) and (ap_const_logic_0 = grp_push_fu_87_ap_done))))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_CS_fsm, isPush_read_read_fu_48_p2, tmp_s_reg_211, tmp_reg_215, grp_push_fu_87_ap_done, grp_pop_fu_104_ap_done)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm)) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_reg_211 = ap_const_lv1_0) and (ap_const_logic_0 = grp_pop_fu_104_ap_done)) or (not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_reg_215) and (ap_const_logic_0 = grp_push_fu_87_ap_done))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, isPush_read_read_fu_48_p2, tmp_s_reg_211, tmp_reg_215, grp_push_fu_87_ap_done, grp_pop_fu_104_ap_done)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_reg_211 = ap_const_lv1_0) and (ap_const_logic_0 = grp_pop_fu_104_ap_done)) or (not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_reg_215) and (ap_const_logic_0 = grp_push_fu_87_ap_done)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_return_0 assign process. --
    ap_return_0_assign_proc : process(ap_CS_fsm, isPush_read_read_fu_48_p2, tmp_s_reg_211, tmp_reg_215, grp_push_fu_87_ap_done, grp_pop_fu_104_ap_done, outData_priority_2_phi_fu_58_p8, ap_return_0_preg)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_reg_211 = ap_const_lv1_0) and (ap_const_logic_0 = grp_pop_fu_104_ap_done)) or (not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_reg_215) and (ap_const_logic_0 = grp_push_fu_87_ap_done)))))) then 
            ap_return_0 <= outData_priority_2_phi_fu_58_p8;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    -- ap_return_1 assign process. --
    ap_return_1_assign_proc : process(ap_CS_fsm, isPush_read_read_fu_48_p2, tmp_s_reg_211, tmp_reg_215, grp_push_fu_87_ap_done, grp_pop_fu_104_ap_done, outData_data_2_phi_fu_74_p8, ap_return_1_preg)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_reg_211 = ap_const_lv1_0) and (ap_const_logic_0 = grp_pop_fu_104_ap_done)) or (not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_reg_215) and (ap_const_logic_0 = grp_push_fu_87_ap_done)))))) then 
            ap_return_1 <= outData_data_2_phi_fu_74_p8;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    -- ap_sig_bdd_212 assign process. --
    ap_sig_bdd_212_assign_proc : process(isPush_read_read_fu_48_p2, tmp_s_reg_211)
    begin
                ap_sig_bdd_212 <= ((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_reg_211 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_214 assign process. --
    ap_sig_bdd_214_assign_proc : process(isPush_read_read_fu_48_p2, tmp_reg_215)
    begin
                ap_sig_bdd_214 <= (not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_reg_215));
    end process;


    -- ap_sig_bdd_221 assign process. --
    ap_sig_bdd_221_assign_proc : process(ap_CS_fsm, isPush_read_read_fu_48_p2, tmp_s_reg_211, tmp_reg_215, grp_push_fu_87_ap_done, grp_pop_fu_104_ap_done)
    begin
                ap_sig_bdd_221 <= ((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((((isPush_read_read_fu_48_p2 = ap_const_lv1_0) and (tmp_s_reg_211 = ap_const_lv1_0) and (ap_const_logic_0 = grp_pop_fu_104_ap_done)) or (not((isPush_read_read_fu_48_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_reg_215) and (ap_const_logic_0 = grp_push_fu_87_ap_done)))));
    end process;

    grp_pop_fu_104_ap_start <= grp_pop_fu_104_ap_start_ap_start_reg;
    grp_pop_fu_104_queueData_data_q0 <= queueData_data_q0;
    grp_pop_fu_104_queueData_data_q1 <= queueData_data_q1;
    grp_pop_fu_104_queueData_priority_q0 <= queueData_priority_q0;
    grp_pop_fu_104_queueData_priority_q1 <= queueData_priority_q1;
    grp_pop_fu_104_size <= size_load_reg_205;
    grp_pop_fu_104_tempData_data_q0 <= tempData_data_q0;
    grp_pop_fu_104_tempData_data_q1 <= tempData_data_q1;
    grp_pop_fu_104_tempData_priority_q0 <= tempData_priority_q0;
    grp_pop_fu_104_tempData_priority_q1 <= tempData_priority_q1;
    grp_push_fu_87_ap_start <= grp_push_fu_87_ap_start_ap_start_reg;
    grp_push_fu_87_item_data <= inData_data;
    grp_push_fu_87_item_priority <= inData_priority;
    grp_push_fu_87_queueData_data_q0 <= queueData_data_q0;
    grp_push_fu_87_queueData_data_q1 <= queueData_data_q1;
    grp_push_fu_87_queueData_priority_q0 <= queueData_priority_q0;
    grp_push_fu_87_queueData_priority_q1 <= queueData_priority_q1;
    grp_push_fu_87_size <= size_load_reg_205;
    grp_push_fu_87_tempData_data_q0 <= tempData_data_q0;
    grp_push_fu_87_tempData_data_q1 <= tempData_data_q1;
    grp_push_fu_87_tempData_priority_q0 <= tempData_priority_q0;
    grp_push_fu_87_tempData_priority_q1 <= tempData_priority_q1;
    inData_data_cast_fu_117_p1 <= std_logic_vector(resize(unsigned(inData_data),32));
    inData_priority_cast_fu_121_p1 <= std_logic_vector(resize(unsigned(inData_priority),32));
    isPush_read_read_fu_48_p2 <= (0=>isPush, others=>'-');

    -- outData_data_2_phi_fu_74_p8 assign process. --
    outData_data_2_phi_fu_74_p8_assign_proc : process(ap_CS_fsm, inData_data_cast_reg_195, grp_pop_fu_104_ap_return_2, outData_data_2_reg_70, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                outData_data_2_phi_fu_74_p8 <= grp_pop_fu_104_ap_return_2;
            elsif (ap_sig_bdd_214) then 
                outData_data_2_phi_fu_74_p8 <= inData_data_cast_reg_195;
            else 
                outData_data_2_phi_fu_74_p8 <= outData_data_2_reg_70;
            end if;
        else 
            outData_data_2_phi_fu_74_p8 <= outData_data_2_reg_70;
        end if; 
    end process;


    -- outData_priority_2_phi_fu_58_p8 assign process. --
    outData_priority_2_phi_fu_58_p8_assign_proc : process(ap_CS_fsm, inData_priority_cast_reg_200, grp_pop_fu_104_ap_return_1, outData_priority_2_reg_54, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                outData_priority_2_phi_fu_58_p8 <= grp_pop_fu_104_ap_return_1;
            elsif (ap_sig_bdd_214) then 
                outData_priority_2_phi_fu_58_p8 <= inData_priority_cast_reg_200;
            else 
                outData_priority_2_phi_fu_58_p8 <= outData_priority_2_reg_54;
            end if;
        else 
            outData_priority_2_phi_fu_58_p8 <= outData_priority_2_reg_54;
        end if; 
    end process;


    -- queueData_data_address0 assign process. --
    queueData_data_address0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_data_address0, grp_pop_fu_104_queueData_data_address0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_data_address0 <= grp_pop_fu_104_queueData_data_address0;
            elsif (ap_sig_bdd_214) then 
                queueData_data_address0 <= grp_push_fu_87_queueData_data_address0;
            else 
                queueData_data_address0 <= "XXXXXXXXX";
            end if;
        else 
            queueData_data_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    -- queueData_data_address1 assign process. --
    queueData_data_address1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_data_address1, grp_pop_fu_104_queueData_data_address1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_data_address1 <= grp_pop_fu_104_queueData_data_address1;
            elsif (ap_sig_bdd_214) then 
                queueData_data_address1 <= grp_push_fu_87_queueData_data_address1;
            else 
                queueData_data_address1 <= "XXXXXXXXX";
            end if;
        else 
            queueData_data_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    -- queueData_data_ce0 assign process. --
    queueData_data_ce0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_data_ce0, grp_pop_fu_104_queueData_data_ce0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_data_ce0 <= grp_pop_fu_104_queueData_data_ce0;
            elsif (ap_sig_bdd_214) then 
                queueData_data_ce0 <= grp_push_fu_87_queueData_data_ce0;
            else 
                queueData_data_ce0 <= ap_const_logic_0;
            end if;
        else 
            queueData_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- queueData_data_ce1 assign process. --
    queueData_data_ce1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_data_ce1, grp_pop_fu_104_queueData_data_ce1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_data_ce1 <= grp_pop_fu_104_queueData_data_ce1;
            elsif (ap_sig_bdd_214) then 
                queueData_data_ce1 <= grp_push_fu_87_queueData_data_ce1;
            else 
                queueData_data_ce1 <= ap_const_logic_0;
            end if;
        else 
            queueData_data_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- queueData_data_d0 assign process. --
    queueData_data_d0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_data_d0, grp_pop_fu_104_queueData_data_d0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_data_d0 <= grp_pop_fu_104_queueData_data_d0;
            elsif (ap_sig_bdd_214) then 
                queueData_data_d0 <= grp_push_fu_87_queueData_data_d0;
            else 
                queueData_data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            queueData_data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- queueData_data_d1 assign process. --
    queueData_data_d1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_data_d1, grp_pop_fu_104_queueData_data_d1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_data_d1 <= grp_pop_fu_104_queueData_data_d1;
            elsif (ap_sig_bdd_214) then 
                queueData_data_d1 <= grp_push_fu_87_queueData_data_d1;
            else 
                queueData_data_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            queueData_data_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- queueData_data_we0 assign process. --
    queueData_data_we0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_data_we0, grp_pop_fu_104_queueData_data_we0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_data_we0 <= grp_pop_fu_104_queueData_data_we0;
            elsif (ap_sig_bdd_214) then 
                queueData_data_we0 <= grp_push_fu_87_queueData_data_we0;
            else 
                queueData_data_we0 <= ap_const_logic_0;
            end if;
        else 
            queueData_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- queueData_data_we1 assign process. --
    queueData_data_we1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_data_we1, grp_pop_fu_104_queueData_data_we1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_data_we1 <= grp_pop_fu_104_queueData_data_we1;
            elsif (ap_sig_bdd_214) then 
                queueData_data_we1 <= grp_push_fu_87_queueData_data_we1;
            else 
                queueData_data_we1 <= ap_const_logic_0;
            end if;
        else 
            queueData_data_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- queueData_priority_address0 assign process. --
    queueData_priority_address0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_priority_address0, grp_pop_fu_104_queueData_priority_address0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_priority_address0 <= grp_pop_fu_104_queueData_priority_address0;
            elsif (ap_sig_bdd_214) then 
                queueData_priority_address0 <= grp_push_fu_87_queueData_priority_address0;
            else 
                queueData_priority_address0 <= "XXXXXXXXX";
            end if;
        else 
            queueData_priority_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    -- queueData_priority_address1 assign process. --
    queueData_priority_address1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_priority_address1, grp_pop_fu_104_queueData_priority_address1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_priority_address1 <= grp_pop_fu_104_queueData_priority_address1;
            elsif (ap_sig_bdd_214) then 
                queueData_priority_address1 <= grp_push_fu_87_queueData_priority_address1;
            else 
                queueData_priority_address1 <= "XXXXXXXXX";
            end if;
        else 
            queueData_priority_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    -- queueData_priority_ce0 assign process. --
    queueData_priority_ce0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_priority_ce0, grp_pop_fu_104_queueData_priority_ce0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_priority_ce0 <= grp_pop_fu_104_queueData_priority_ce0;
            elsif (ap_sig_bdd_214) then 
                queueData_priority_ce0 <= grp_push_fu_87_queueData_priority_ce0;
            else 
                queueData_priority_ce0 <= ap_const_logic_0;
            end if;
        else 
            queueData_priority_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- queueData_priority_ce1 assign process. --
    queueData_priority_ce1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_priority_ce1, grp_pop_fu_104_queueData_priority_ce1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_priority_ce1 <= grp_pop_fu_104_queueData_priority_ce1;
            elsif (ap_sig_bdd_214) then 
                queueData_priority_ce1 <= grp_push_fu_87_queueData_priority_ce1;
            else 
                queueData_priority_ce1 <= ap_const_logic_0;
            end if;
        else 
            queueData_priority_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- queueData_priority_d0 assign process. --
    queueData_priority_d0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_priority_d0, grp_pop_fu_104_queueData_priority_d0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_priority_d0 <= grp_pop_fu_104_queueData_priority_d0;
            elsif (ap_sig_bdd_214) then 
                queueData_priority_d0 <= grp_push_fu_87_queueData_priority_d0;
            else 
                queueData_priority_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            queueData_priority_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- queueData_priority_d1 assign process. --
    queueData_priority_d1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_priority_d1, grp_pop_fu_104_queueData_priority_d1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_priority_d1 <= grp_pop_fu_104_queueData_priority_d1;
            elsif (ap_sig_bdd_214) then 
                queueData_priority_d1 <= grp_push_fu_87_queueData_priority_d1;
            else 
                queueData_priority_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            queueData_priority_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- queueData_priority_we0 assign process. --
    queueData_priority_we0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_priority_we0, grp_pop_fu_104_queueData_priority_we0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_priority_we0 <= grp_pop_fu_104_queueData_priority_we0;
            elsif (ap_sig_bdd_214) then 
                queueData_priority_we0 <= grp_push_fu_87_queueData_priority_we0;
            else 
                queueData_priority_we0 <= ap_const_logic_0;
            end if;
        else 
            queueData_priority_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- queueData_priority_we1 assign process. --
    queueData_priority_we1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_queueData_priority_we1, grp_pop_fu_104_queueData_priority_we1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                queueData_priority_we1 <= grp_pop_fu_104_queueData_priority_we1;
            elsif (ap_sig_bdd_214) then 
                queueData_priority_we1 <= grp_push_fu_87_queueData_priority_we1;
            else 
                queueData_priority_we1 <= ap_const_logic_0;
            end if;
        else 
            queueData_priority_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- tempData_data_address0 assign process. --
    tempData_data_address0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_data_address0, grp_pop_fu_104_tempData_data_address0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_data_address0 <= grp_pop_fu_104_tempData_data_address0;
            elsif (ap_sig_bdd_214) then 
                tempData_data_address0 <= grp_push_fu_87_tempData_data_address0;
            else 
                tempData_data_address0 <= "XXXXXXXXX";
            end if;
        else 
            tempData_data_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    -- tempData_data_address1 assign process. --
    tempData_data_address1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_data_address1, grp_pop_fu_104_tempData_data_address1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_data_address1 <= grp_pop_fu_104_tempData_data_address1;
            elsif (ap_sig_bdd_214) then 
                tempData_data_address1 <= grp_push_fu_87_tempData_data_address1;
            else 
                tempData_data_address1 <= "XXXXXXXXX";
            end if;
        else 
            tempData_data_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    -- tempData_data_ce0 assign process. --
    tempData_data_ce0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_data_ce0, grp_pop_fu_104_tempData_data_ce0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_data_ce0 <= grp_pop_fu_104_tempData_data_ce0;
            elsif (ap_sig_bdd_214) then 
                tempData_data_ce0 <= grp_push_fu_87_tempData_data_ce0;
            else 
                tempData_data_ce0 <= ap_const_logic_0;
            end if;
        else 
            tempData_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- tempData_data_ce1 assign process. --
    tempData_data_ce1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_data_ce1, grp_pop_fu_104_tempData_data_ce1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_data_ce1 <= grp_pop_fu_104_tempData_data_ce1;
            elsif (ap_sig_bdd_214) then 
                tempData_data_ce1 <= grp_push_fu_87_tempData_data_ce1;
            else 
                tempData_data_ce1 <= ap_const_logic_0;
            end if;
        else 
            tempData_data_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- tempData_data_d0 assign process. --
    tempData_data_d0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_data_d0, grp_pop_fu_104_tempData_data_d0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_data_d0 <= grp_pop_fu_104_tempData_data_d0;
            elsif (ap_sig_bdd_214) then 
                tempData_data_d0 <= grp_push_fu_87_tempData_data_d0;
            else 
                tempData_data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            tempData_data_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- tempData_data_d1 assign process. --
    tempData_data_d1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_data_d1, grp_pop_fu_104_tempData_data_d1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_data_d1 <= grp_pop_fu_104_tempData_data_d1;
            elsif (ap_sig_bdd_214) then 
                tempData_data_d1 <= grp_push_fu_87_tempData_data_d1;
            else 
                tempData_data_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            tempData_data_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- tempData_data_we0 assign process. --
    tempData_data_we0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_data_we0, grp_pop_fu_104_tempData_data_we0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_data_we0 <= grp_pop_fu_104_tempData_data_we0;
            elsif (ap_sig_bdd_214) then 
                tempData_data_we0 <= grp_push_fu_87_tempData_data_we0;
            else 
                tempData_data_we0 <= ap_const_logic_0;
            end if;
        else 
            tempData_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- tempData_data_we1 assign process. --
    tempData_data_we1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_data_we1, grp_pop_fu_104_tempData_data_we1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_data_we1 <= grp_pop_fu_104_tempData_data_we1;
            elsif (ap_sig_bdd_214) then 
                tempData_data_we1 <= grp_push_fu_87_tempData_data_we1;
            else 
                tempData_data_we1 <= ap_const_logic_0;
            end if;
        else 
            tempData_data_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- tempData_priority_address0 assign process. --
    tempData_priority_address0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_priority_address0, grp_pop_fu_104_tempData_priority_address0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_priority_address0 <= grp_pop_fu_104_tempData_priority_address0;
            elsif (ap_sig_bdd_214) then 
                tempData_priority_address0 <= grp_push_fu_87_tempData_priority_address0;
            else 
                tempData_priority_address0 <= "XXXXXXXXX";
            end if;
        else 
            tempData_priority_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    -- tempData_priority_address1 assign process. --
    tempData_priority_address1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_priority_address1, grp_pop_fu_104_tempData_priority_address1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_priority_address1 <= grp_pop_fu_104_tempData_priority_address1;
            elsif (ap_sig_bdd_214) then 
                tempData_priority_address1 <= grp_push_fu_87_tempData_priority_address1;
            else 
                tempData_priority_address1 <= "XXXXXXXXX";
            end if;
        else 
            tempData_priority_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    -- tempData_priority_ce0 assign process. --
    tempData_priority_ce0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_priority_ce0, grp_pop_fu_104_tempData_priority_ce0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_priority_ce0 <= grp_pop_fu_104_tempData_priority_ce0;
            elsif (ap_sig_bdd_214) then 
                tempData_priority_ce0 <= grp_push_fu_87_tempData_priority_ce0;
            else 
                tempData_priority_ce0 <= ap_const_logic_0;
            end if;
        else 
            tempData_priority_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- tempData_priority_ce1 assign process. --
    tempData_priority_ce1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_priority_ce1, grp_pop_fu_104_tempData_priority_ce1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_priority_ce1 <= grp_pop_fu_104_tempData_priority_ce1;
            elsif (ap_sig_bdd_214) then 
                tempData_priority_ce1 <= grp_push_fu_87_tempData_priority_ce1;
            else 
                tempData_priority_ce1 <= ap_const_logic_0;
            end if;
        else 
            tempData_priority_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- tempData_priority_d0 assign process. --
    tempData_priority_d0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_priority_d0, grp_pop_fu_104_tempData_priority_d0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_priority_d0 <= grp_pop_fu_104_tempData_priority_d0;
            elsif (ap_sig_bdd_214) then 
                tempData_priority_d0 <= grp_push_fu_87_tempData_priority_d0;
            else 
                tempData_priority_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            tempData_priority_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- tempData_priority_d1 assign process. --
    tempData_priority_d1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_priority_d1, grp_pop_fu_104_tempData_priority_d1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_priority_d1 <= grp_pop_fu_104_tempData_priority_d1;
            elsif (ap_sig_bdd_214) then 
                tempData_priority_d1 <= grp_push_fu_87_tempData_priority_d1;
            else 
                tempData_priority_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            tempData_priority_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- tempData_priority_we0 assign process. --
    tempData_priority_we0_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_priority_we0, grp_pop_fu_104_tempData_priority_we0, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_priority_we0 <= grp_pop_fu_104_tempData_priority_we0;
            elsif (ap_sig_bdd_214) then 
                tempData_priority_we0 <= grp_push_fu_87_tempData_priority_we0;
            else 
                tempData_priority_we0 <= ap_const_logic_0;
            end if;
        else 
            tempData_priority_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- tempData_priority_we1 assign process. --
    tempData_priority_we1_assign_proc : process(ap_CS_fsm, grp_push_fu_87_tempData_priority_we1, grp_pop_fu_104_tempData_priority_we1, ap_sig_bdd_214, ap_sig_bdd_212)
    begin
        if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
            if (ap_sig_bdd_212) then 
                tempData_priority_we1 <= grp_pop_fu_104_tempData_priority_we1;
            elsif (ap_sig_bdd_214) then 
                tempData_priority_we1 <= grp_push_fu_87_tempData_priority_we1;
            else 
                tempData_priority_we1 <= ap_const_logic_0;
            end if;
        else 
            tempData_priority_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_137_p2 <= "1" when (size = ap_const_lv32_C8) else "0";
    tmp_s_fu_131_p2 <= "1" when (size = ap_const_lv32_0) else "0";
end behav;
