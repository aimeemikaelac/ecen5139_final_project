-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.1
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity runTest is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of runTest is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_C8 : STD_LOGIC_VECTOR (7 downto 0) := "11001000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_C7 : STD_LOGIC_VECTOR (7 downto 0) := "11000111";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal random_priorities_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal random_priorities_ce0 : STD_LOGIC;
    signal random_priorities_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_fu_210_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_376 : STD_LOGIC_VECTOR (7 downto 0);
    signal current_data_fu_216_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal current_data_reg_381 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond4_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal current_priority_cast6_cast_fu_223_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal current_priority_cast6_cast_reg_386 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_1_cast5_fu_228_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_cast5_reg_391 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_6_fu_238_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_6_reg_399 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_404 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_queue_fu_174_ap_done : STD_LOGIC;
    signal result_s_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_fu_282_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_5_reg_417 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond2_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal current_data_1_fu_293_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal current_data_1_reg_427 : STD_LOGIC_VECTOR (7 downto 0);
    signal current_priority_1_reg_432 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_7_fu_306_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_8_fu_323_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_8_reg_448 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_priority_2_reg_453 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_data_1_reg_458 : STD_LOGIC_VECTOR (31 downto 0);
    signal slt_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal slt_reg_464 : STD_LOGIC_VECTOR (0 downto 0);
    signal dequeuedItems_addr_1_reg_469 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_474 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_4_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dequeuedItems_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dequeuedItems_ce0 : STD_LOGIC;
    signal dequeuedItems_we0 : STD_LOGIC;
    signal dequeuedItems_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dequeuedItems_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_queue_fu_174_ap_start : STD_LOGIC;
    signal grp_queue_fu_174_ap_idle : STD_LOGIC;
    signal grp_queue_fu_174_ap_ready : STD_LOGIC;
    signal grp_queue_fu_174_isPush : STD_LOGIC;
    signal grp_queue_fu_174_inData_priority : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_queue_fu_174_inData_data : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_queue_fu_174_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_queue_fu_174_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_priority_reg_81 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_reg_92 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_reg_104 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_2_reg_116 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond3_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_reg_128 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond1_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_reg_139 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_reg_151 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_reg_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_queue_fu_174_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal exitcond_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_288_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_312_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_335_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_queue_fu_174_ap_return_1_temp: signed (32-1 downto 0);
    signal tmp_3_fu_249_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_cast_fu_255_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component queue IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        isPush : IN STD_LOGIC;
        inData_priority : IN STD_LOGIC_VECTOR (8 downto 0);
        inData_data : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component runTest_random_priorities IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component runTest_dequeuedItems IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    random_priorities_U : component runTest_random_priorities
    generic map (
        DataWidth => 9,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => random_priorities_address0,
        ce0 => random_priorities_ce0,
        q0 => random_priorities_q0);

    dequeuedItems_U : component runTest_dequeuedItems
    generic map (
        DataWidth => 32,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dequeuedItems_address0,
        ce0 => dequeuedItems_ce0,
        we0 => dequeuedItems_we0,
        d0 => dequeuedItems_d0,
        q0 => dequeuedItems_q0);

    grp_queue_fu_174 : component queue
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_queue_fu_174_ap_start,
        ap_done => grp_queue_fu_174_ap_done,
        ap_idle => grp_queue_fu_174_ap_idle,
        ap_ready => grp_queue_fu_174_ap_ready,
        isPush => grp_queue_fu_174_isPush,
        inData_priority => grp_queue_fu_174_inData_priority,
        inData_data => grp_queue_fu_174_inData_data,
        ap_return_0 => grp_queue_fu_174_ap_return_0,
        ap_return_1 => grp_queue_fu_174_ap_return_1);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_return_preg assign process. --
    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv1_0;
            else
                if (((ap_ST_st11_fsm_10 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond_fu_317_p2)))) then 
                    ap_return_preg <= result_2_reg_151;
                end if; 
            end if;
        end if;
    end process;


    -- grp_queue_fu_174_ap_start_ap_start_reg assign process. --
    grp_queue_fu_174_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_queue_fu_174_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_ST_st2_fsm_1 = ap_CS_fsm) and (exitcond4_fu_204_p2 = ap_const_lv1_0)) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or ((ap_ST_st4_fsm_3 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond3_fu_232_p2)) or ((ap_ST_st11_fsm_10 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_fu_317_p2)))) then 
                    grp_queue_fu_174_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_queue_fu_174_ap_ready)) then 
                    grp_queue_fu_174_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- current_priority_reg_81 assign process. --
    current_priority_reg_81_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_logic_0 = grp_queue_fu_174_ap_done)) and (ap_ST_st3_fsm_2 = ap_CS_fsm))) then 
                current_priority_reg_81 <= i_reg_376;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                current_priority_reg_81 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    -- i_1_reg_104 assign process. --
    i_1_reg_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((exitcond4_fu_204_p2 = ap_const_lv1_0)))) then 
                i_1_reg_104 <= ap_const_lv8_0;
            elsif ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
                i_1_reg_104 <= i_6_reg_399;
            end if; 
        end if;
    end process;

    -- i_2_reg_116 assign process. --
    i_2_reg_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st4_fsm_3 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond3_fu_232_p2)))) then 
                i_2_reg_116 <= ap_const_lv8_0;
            elsif ((not((ap_const_logic_0 = grp_queue_fu_174_ap_done)) and (ap_ST_st9_fsm_8 = ap_CS_fsm))) then 
                i_2_reg_116 <= i_5_reg_417;
            end if; 
        end if;
    end process;

    -- i_3_reg_128 assign process. --
    i_3_reg_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st7_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond2_fu_276_p2)))) then 
                i_3_reg_128 <= ap_const_lv8_0;
            elsif (((ap_ST_st10_fsm_9 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_300_p2))) then 
                i_3_reg_128 <= i_7_fu_306_p2;
            end if; 
        end if;
    end process;

    -- i_4_reg_162 assign process. --
    i_4_reg_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st10_fsm_9 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond1_fu_300_p2)))) then 
                i_4_reg_162 <= ap_const_lv8_0;
            elsif ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then 
                i_4_reg_162 <= i_8_reg_448;
            end if; 
        end if;
    end process;

    -- last_reg_139 assign process. --
    last_reg_139_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st10_fsm_9 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond1_fu_300_p2)))) then 
                last_reg_139 <= ap_const_lv32_0;
            elsif ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then 
                last_reg_139 <= out_priority_2_reg_453;
            end if; 
        end if;
    end process;

    -- result_2_reg_151 assign process. --
    result_2_reg_151_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st10_fsm_9 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond1_fu_300_p2)))) then 
                result_2_reg_151 <= result_reg_92;
            elsif ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then 
                result_2_reg_151 <= result_4_fu_368_p2;
            end if; 
        end if;
    end process;

    -- result_reg_92 assign process. --
    result_reg_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((exitcond4_fu_204_p2 = ap_const_lv1_0)))) then 
                result_reg_92 <= ap_const_lv1_1;
            elsif ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
                result_reg_92 <= result_s_fu_271_p2;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then
                current_data_1_reg_427 <= current_data_1_fu_293_p2;
                current_priority_1_reg_432 <= random_priorities_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (exitcond4_fu_204_p2 = ap_const_lv1_0))) then
                current_data_reg_381 <= current_data_fu_216_p2;
                current_priority_cast6_cast_reg_386(0) <= current_priority_cast6_cast_fu_223_p1(0);
    current_priority_cast6_cast_reg_386(1) <= current_priority_cast6_cast_fu_223_p1(1);
    current_priority_cast6_cast_reg_386(2) <= current_priority_cast6_cast_fu_223_p1(2);
    current_priority_cast6_cast_reg_386(3) <= current_priority_cast6_cast_fu_223_p1(3);
    current_priority_cast6_cast_reg_386(4) <= current_priority_cast6_cast_fu_223_p1(4);
    current_priority_cast6_cast_reg_386(5) <= current_priority_cast6_cast_fu_223_p1(5);
    current_priority_cast6_cast_reg_386(6) <= current_priority_cast6_cast_fu_223_p1(6);
    current_priority_cast6_cast_reg_386(7) <= current_priority_cast6_cast_fu_223_p1(7);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_logic_0 = grp_queue_fu_174_ap_done)) and (ap_ST_st12_fsm_11 = ap_CS_fsm))) then
                dequeuedItems_addr_1_reg_469 <= tmp_1_fu_335_p1(8 - 1 downto 0);
                out_data_1_reg_458 <= grp_queue_fu_174_ap_return_1;
                out_priority_2_reg_453 <= grp_queue_fu_174_ap_return_0;
                slt_reg_464 <= slt_fu_329_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then
                i_1_cast5_reg_391(0) <= i_1_cast5_fu_228_p1(0);
    i_1_cast5_reg_391(1) <= i_1_cast5_fu_228_p1(1);
    i_1_cast5_reg_391(2) <= i_1_cast5_fu_228_p1(2);
    i_1_cast5_reg_391(3) <= i_1_cast5_fu_228_p1(3);
    i_1_cast5_reg_391(4) <= i_1_cast5_fu_228_p1(4);
    i_1_cast5_reg_391(5) <= i_1_cast5_fu_228_p1(5);
    i_1_cast5_reg_391(6) <= i_1_cast5_fu_228_p1(6);
    i_1_cast5_reg_391(7) <= i_1_cast5_fu_228_p1(7);
                i_6_reg_399 <= i_6_fu_238_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then
                i_5_reg_417 <= i_5_fu_282_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st11_fsm_10 = ap_CS_fsm)) then
                i_8_reg_448 <= i_8_fu_323_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
                i_reg_376 <= i_fu_210_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st5_fsm_4 = ap_CS_fsm) and not((ap_const_logic_0 = grp_queue_fu_174_ap_done)))) then
                tmp_2_reg_404 <= tmp_2_fu_265_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then
                tmp_7_reg_474 <= tmp_7_fu_362_p2;
            end if;
        end if;
    end process;
    current_priority_cast6_cast_reg_386(8) <= '0';
    i_1_cast5_reg_391(31 downto 8) <= "000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start , ap_CS_fsm , exitcond4_fu_204_p2 , grp_queue_fu_174_ap_done , exitcond2_fu_276_p2 , exitcond3_fu_232_p2 , exitcond1_fu_300_p2 , exitcond_fu_317_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond4_fu_204_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_logic_0 = grp_queue_fu_174_ap_done))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_lv1_0 = exitcond3_fu_232_p2))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_logic_0 = grp_queue_fu_174_ap_done))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_lv1_0 = exitcond2_fu_276_p2))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                if (not((ap_const_logic_0 = grp_queue_fu_174_ap_done))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st10_fsm_9 => 
                if ((ap_const_lv1_0 = exitcond1_fu_300_p2)) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st11_fsm_10 => 
                if (not((ap_const_lv1_0 = exitcond_fu_317_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st12_fsm_11 => 
                if (not((ap_const_logic_0 = grp_queue_fu_174_ap_done))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_CS_fsm, exitcond_fu_317_p2)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm)) or ((ap_ST_st11_fsm_10 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond_fu_317_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, exitcond_fu_317_p2)
    begin
        if (((ap_ST_st11_fsm_10 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond_fu_317_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_return assign process. --
    ap_return_assign_proc : process(ap_CS_fsm, result_2_reg_151, exitcond_fu_317_p2, ap_return_preg)
    begin
        if (((ap_ST_st11_fsm_10 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond_fu_317_p2)))) then 
            ap_return <= result_2_reg_151;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    current_data_1_fu_293_p2 <= std_logic_vector(unsigned(ap_const_lv8_C7) - unsigned(i_2_reg_116));
    current_data_fu_216_p2 <= std_logic_vector(unsigned(ap_const_lv8_C7) - unsigned(current_priority_reg_81));
    current_priority_cast6_cast_fu_223_p1 <= std_logic_vector(resize(unsigned(current_priority_reg_81),9));

    -- dequeuedItems_address0 assign process. --
    dequeuedItems_address0_assign_proc : process(ap_CS_fsm, dequeuedItems_addr_1_reg_469, tmp_9_fu_312_p1, tmp_1_fu_335_p1)
    begin
        if ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then 
            dequeuedItems_address0 <= dequeuedItems_addr_1_reg_469;
        elsif ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then 
            dequeuedItems_address0 <= tmp_9_fu_312_p1(8 - 1 downto 0);
        elsif ((ap_ST_st12_fsm_11 = ap_CS_fsm)) then 
            dequeuedItems_address0 <= tmp_1_fu_335_p1(8 - 1 downto 0);
        else 
            dequeuedItems_address0 <= "XXXXXXXX";
        end if; 
    end process;


    -- dequeuedItems_ce0 assign process. --
    dequeuedItems_ce0_assign_proc : process(ap_CS_fsm, grp_queue_fu_174_ap_done)
    begin
        if (((ap_ST_st10_fsm_9 = ap_CS_fsm) or (not((ap_const_logic_0 = grp_queue_fu_174_ap_done)) and (ap_ST_st12_fsm_11 = ap_CS_fsm)) or (ap_ST_st13_fsm_12 = ap_CS_fsm))) then 
            dequeuedItems_ce0 <= ap_const_logic_1;
        else 
            dequeuedItems_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- dequeuedItems_d0 assign process. --
    dequeuedItems_d0_assign_proc : process(ap_CS_fsm, out_data_1_reg_458)
    begin
        if ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then 
            dequeuedItems_d0 <= out_data_1_reg_458;
        elsif ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then 
            dequeuedItems_d0 <= ap_const_lv32_FFFFFFFF;
        else 
            dequeuedItems_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- dequeuedItems_we0 assign process. --
    dequeuedItems_we0_assign_proc : process(ap_CS_fsm, exitcond1_fu_300_p2)
    begin
        if (((ap_ST_st13_fsm_12 = ap_CS_fsm) or ((ap_ST_st10_fsm_9 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_300_p2)))) then 
            dequeuedItems_we0 <= ap_const_logic_1;
        else 
            dequeuedItems_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_300_p2 <= "1" when (i_3_reg_128 = ap_const_lv8_C8) else "0";
    exitcond2_fu_276_p2 <= "1" when (i_2_reg_116 = ap_const_lv8_C8) else "0";
    exitcond3_fu_232_p2 <= "1" when (i_1_reg_104 = ap_const_lv8_C8) else "0";
    exitcond4_fu_204_p2 <= "1" when (current_priority_reg_81 = ap_const_lv8_C8) else "0";
    exitcond_fu_317_p2 <= "1" when (i_4_reg_162 = ap_const_lv8_C8) else "0";
    grp_queue_fu_174_ap_start <= grp_queue_fu_174_ap_start_ap_start_reg;

    -- grp_queue_fu_174_inData_data assign process. --
    grp_queue_fu_174_inData_data_assign_proc : process(ap_CS_fsm, current_data_reg_381, current_data_1_reg_427)
    begin
        if ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then 
            grp_queue_fu_174_inData_data <= current_data_1_reg_427;
        elsif (((ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm))) then 
            grp_queue_fu_174_inData_data <= ap_const_lv8_0;
        elsif ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then 
            grp_queue_fu_174_inData_data <= current_data_reg_381;
        else 
            grp_queue_fu_174_inData_data <= "XXXXXXXX";
        end if; 
    end process;


    -- grp_queue_fu_174_inData_priority assign process. --
    grp_queue_fu_174_inData_priority_assign_proc : process(ap_CS_fsm, current_priority_cast6_cast_reg_386, current_priority_1_reg_432)
    begin
        if ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then 
            grp_queue_fu_174_inData_priority <= current_priority_1_reg_432;
        elsif (((ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm))) then 
            grp_queue_fu_174_inData_priority <= ap_const_lv9_0;
        elsif ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then 
            grp_queue_fu_174_inData_priority <= current_priority_cast6_cast_reg_386;
        else 
            grp_queue_fu_174_inData_priority <= "XXXXXXXXX";
        end if; 
    end process;


    -- grp_queue_fu_174_isPush assign process. --
    grp_queue_fu_174_isPush_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm))) then 
            grp_queue_fu_174_isPush <= ap_const_logic_0;
        elsif (((ap_ST_st3_fsm_2 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm))) then 
            grp_queue_fu_174_isPush <= ap_const_logic_1;
        else 
            grp_queue_fu_174_isPush <= 'X';
        end if; 
    end process;

    i_1_cast5_fu_228_p1 <= std_logic_vector(resize(unsigned(i_1_reg_104),32));
    i_5_fu_282_p2 <= std_logic_vector(unsigned(i_2_reg_116) + unsigned(ap_const_lv8_1));
    i_6_fu_238_p2 <= std_logic_vector(unsigned(i_1_reg_104) + unsigned(ap_const_lv8_1));
    i_7_fu_306_p2 <= std_logic_vector(unsigned(i_3_reg_128) + unsigned(ap_const_lv8_1));
    i_8_fu_323_p2 <= std_logic_vector(unsigned(i_4_reg_162) + unsigned(ap_const_lv8_1));
    i_fu_210_p2 <= std_logic_vector(unsigned(current_priority_reg_81) + unsigned(ap_const_lv8_1));
    notlhs_fu_345_p2 <= "1" when (signed(out_data_1_reg_458) < signed(ap_const_lv32_C8)) else "0";
    notrhs_fu_350_p2 <= "1" when (signed(dequeuedItems_q0) < signed(ap_const_lv32_1)) else "0";
    random_priorities_address0 <= tmp_6_fu_288_p1(8 - 1 downto 0);

    -- random_priorities_ce0 assign process. --
    random_priorities_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then 
            random_priorities_ce0 <= ap_const_logic_1;
        else 
            random_priorities_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    result_4_fu_368_p2 <= (result_2_reg_151 and tmp_7_reg_474);
    result_s_fu_271_p2 <= (result_reg_92 and tmp_2_reg_404);
    rev1_fu_340_p2 <= (slt_reg_464 xor ap_const_lv1_1);
    slt_fu_329_p2 <= "1" when (signed(grp_queue_fu_174_ap_return_0) < signed(last_reg_139)) else "0";
    tmp2_fu_356_p2 <= (notlhs_fu_345_p2 and notrhs_fu_350_p2);
    
    grp_queue_fu_174_ap_return_1_temp <= signed(grp_queue_fu_174_ap_return_1);
    tmp_1_fu_335_p1 <= std_logic_vector(resize(grp_queue_fu_174_ap_return_1_temp,64));

    tmp_2_fu_265_p2 <= (tmp_4_fu_259_p2 and tmp_fu_244_p2);
    tmp_3_cast_fu_255_p1 <= std_logic_vector(resize(unsigned(tmp_3_fu_249_p2),32));
    tmp_3_fu_249_p2 <= std_logic_vector(unsigned(ap_const_lv8_C7) - unsigned(i_1_reg_104));
    tmp_4_fu_259_p2 <= "1" when (grp_queue_fu_174_ap_return_1 = tmp_3_cast_fu_255_p1) else "0";
    tmp_6_fu_288_p1 <= std_logic_vector(resize(unsigned(i_2_reg_116),64));
    tmp_7_fu_362_p2 <= (tmp2_fu_356_p2 and rev1_fu_340_p2);
    tmp_9_fu_312_p1 <= std_logic_vector(resize(unsigned(i_3_reg_128),64));
    tmp_fu_244_p2 <= "1" when (grp_queue_fu_174_ap_return_0 = i_1_cast5_reg_391) else "0";
end behav;
