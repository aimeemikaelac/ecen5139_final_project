

================================================================
== Vivado HLS Report for 'runQueue'
================================================================
* Date:           Sat Dec  5 17:25:29 2015

* Version:        2014.1 (build date: Fri Apr 04 13:20:25 PM 2014)
* Project:        CAV_MidtermPriorityQueue_Verilog_Runner
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      6.78|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- P1      |    ?|    ?|         ?|          -|          -|     1|    no    |
        | + P1.1   |    ?|    ?|         1|          -|          -|     ?|    no    |
        | + P1.2   |    ?|    ?|         1|          -|          -|     ?|    no    |
        | + P1.3   |    ?|    ?|         2|          -|          -|     ?|    no    |
        | + P1.4   |    ?|    ?|         1|          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 26
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!j & !full_assign_load)
	10  / (!j & full_assign_load & !empty_assign_load)
	16  / (!j & full_assign_load & empty_assign_load)
3 --> 
	3  / (!full_assign_load_2)
	4  / (full_assign_load_2 & !empty_assign_load_2)
	5  / (full_assign_load_2 & empty_assign_load_2)
4 --> 
	11  / true
5 --> 
	6  / (!full_assign_load_3)
	7  / (full_assign_load_3)
6 --> 
	12  / true
7 --> 
	8  / (!empty_assign_load_3)
	9  / (empty_assign_load_3)
8 --> 
	20  / true
9 --> 
	26  / true
10 --> 
	4  / true
11 --> 
	11  / (!empty_assign_load_4)
	12  / (empty_assign_load_4 & !full_assign_load_4)
	13  / (empty_assign_load_4 & full_assign_load_4)
12 --> 
	18  / true
13 --> 
	14  / (!empty_assign_load_5)
	15  / (empty_assign_load_5)
14 --> 
	20  / true
15 --> 
	26  / true
16 --> 
	17  / (!full_assign_load_1)
	22  / (full_assign_load_1)
17 --> 
	12  / true
18 --> 
	19  / (!full_assign_load_5)
	20  / (full_assign_load_5 & !empty_assign_load_6)
	21  / (full_assign_load_5 & empty_assign_load_6)
19 --> 
	18  / true
20 --> 
	24  / true
21 --> 
	26  / true
22 --> 
	23  / (!empty_assign_load_1)
	25  / (empty_assign_load_1)
23 --> 
	20  / true
24 --> 
	24  / (!empty_assign_load_7)
	26  / (empty_assign_load_7)
25 --> 
	26  / true
26 --> 
	2  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: result [1/1] 0.00ns
:0  %result = alloca i1, align 1

ST_1: last [1/1] 0.00ns
:1  %last = alloca i32, align 4

ST_1: stg_29 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i4* %priorityOut_V), !map !7

ST_1: stg_30 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i4 %priorityIn_V), !map !11

ST_1: stg_31 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i2* %cmdOut_V), !map !17

ST_1: stg_32 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i1 %empty), !map !21

ST_1: stg_33 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i1 %full), !map !25

ST_1: stg_34 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i4* %currentPriority_V), !map !29

ST_1: stg_35 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i1 false) nounwind, !map !33

ST_1: stg_36 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @str) nounwind

ST_1: full_read [1/1] 0.00ns
:10  %full_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %full)

ST_1: empty_read [1/1] 0.00ns
:11  %empty_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %empty)

ST_1: priorityIn_V_read [1/1] 0.00ns
:12  %priorityIn_V_read = call i4 @_ssdm_op_Read.ap_none.i4(i4 %priorityIn_V)

ST_1: empty_assign [1/1] 0.00ns
:13  %empty_assign = alloca i1, align 1

ST_1: full_assign [1/1] 0.00ns
:14  %full_assign = alloca i1, align 1

ST_1: stg_42 [1/1] 0.00ns
:15  store volatile i1 %empty_read, i1* %empty_assign, align 1

ST_1: stg_43 [1/1] 0.00ns
:16  store volatile i1 %full_read, i1* %full_assign, align 1

ST_1: stg_44 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecWire(i4* %currentPriority_V, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_45 [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecWire(i1 %full, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_46 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecWire(i1 %empty, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_47 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecWire(i2* %cmdOut_V, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_48 [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecWire(i4 %priorityIn_V, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_49 [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecWire(i4* %priorityOut_V, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_50 [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecWire(i32 0, [11 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_51 [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecIFCore(i32 0, [1 x i8]* @p_str1, [10 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: last_1 [1/1] 0.00ns
:25  %last_1 = zext i4 %priorityIn_V_read to i32

ST_1: stg_53 [1/1] 1.57ns
:26  store i32 0, i32* %last, align 4

ST_1: stg_54 [1/1] 1.41ns
:27  store i1 true, i1* %result, align 1

ST_1: stg_55 [1/1] 1.30ns
:28  br label %1


 <State 2>: 1.57ns
ST_2: j [1/1] 0.00ns
:0  %j = phi i1 [ false, %0 ], [ true, %35 ]

ST_2: result_load [1/1] 0.00ns
:1  %result_load = load i1* %result, align 1

ST_2: last_load [1/1] 0.00ns
:2  %last_load = load i32* %last, align 4

ST_2: empty_2 [1/1] 0.00ns
:3  %empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_2: stg_60 [1/1] 0.00ns
:4  br i1 %j, label %36, label %2

ST_2: stg_61 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([3 x i8]* @p_str4) nounwind

ST_2: tmp_4 [1/1] 0.00ns
:1  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([3 x i8]* @p_str4)

ST_2: stg_63 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str1) nounwind

ST_2: full_assign_load [1/1] 0.00ns
:3  %full_assign_load = load volatile i1* %full_assign, align 1

ST_2: stg_65 [1/1] 0.00ns
:4  br i1 %full_assign_load, label %6, label %3

ST_2: stg_66 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 1)

ST_2: stg_67 [1/1] 0.00ns
:1  call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %priorityOut_V, i4 0)

ST_2: stg_68 [1/1] 1.57ns
:2  br label %5

ST_2: stg_69 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_2: empty_assign_load [1/1] 0.00ns
:1  %empty_assign_load = load volatile i1* %empty_assign, align 1

ST_2: stg_71 [1/1] 0.00ns
:2  br i1 %empty_assign_load, label %13, label %9

ST_2: stg_72 [1/1] 0.00ns
:0  ret i1 %result_load


 <State 3>: 2.44ns
ST_3: i_reg2mem [1/1] 0.00ns
:0  %i_reg2mem = phi i32 [ 1, %3 ], [ %i8, %4 ]

ST_3: tmp_reg2mem [1/1] 0.00ns
:1  %tmp_reg2mem = phi i4 [ 0, %3 ], [ %tmp, %4 ]

ST_3: stg_75 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_3: stg_76 [1/1] 0.00ns
:3  call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %currentPriority_V, i4 %tmp_reg2mem)

ST_3: stg_77 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecIFCore(i4* %currentPriority_V, [1 x i8]* @p_str1, [10 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_3: full_assign_load_2 [1/1] 0.00ns
:5  %full_assign_load_2 = load volatile i1* %full_assign, align 1

ST_3: i8 [1/1] 2.44ns
:6  %i8 = add nsw i32 %i_reg2mem, 1

ST_3: stg_80 [1/1] 0.00ns
:7  br i1 %full_assign_load_2, label %7, label %4

ST_3: stg_81 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 1)

ST_3: tmp [1/1] 0.00ns
:1  %tmp = trunc i32 %i_reg2mem to i4

ST_3: stg_83 [1/1] 0.00ns
:2  call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %priorityOut_V, i4 %tmp)

ST_3: stg_84 [1/1] 0.00ns
:3  br label %5

ST_3: stg_85 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_3: empty_assign_load_2 [1/1] 0.00ns
:1  %empty_assign_load_2 = load volatile i1* %empty_assign, align 1

ST_3: stg_87 [1/1] 0.00ns
:2  br i1 %empty_assign_load_2, label %14, label %10


 <State 4>: 1.57ns
ST_4: stg_88 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 -2)

ST_4: stg_89 [1/1] 0.00ns
:1  br label %.preheader133

ST_4: stg_90 [1/1] 1.57ns
.preheader133:0  br label %11


 <State 5>: 0.00ns
ST_5: stg_91 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_5: full_assign_load_3 [1/1] 0.00ns
:1  %full_assign_load_3 = load volatile i1* %full_assign, align 1

ST_5: stg_93 [1/1] 0.00ns
:2  br i1 %full_assign_load_3, label %23, label %18


 <State 6>: 0.00ns
ST_6: stg_94 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 1)

ST_6: stg_95 [1/1] 0.00ns
:1  call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %priorityOut_V, i4 5)

ST_6: stg_96 [1/1] 0.00ns
:2  br label %.preheader132


 <State 7>: 0.00ns
ST_7: stg_97 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_7: empty_assign_load_3 [1/1] 0.00ns
:1  %empty_assign_load_3 = load volatile i1* %empty_assign, align 1

ST_7: stg_99 [1/1] 0.00ns
:2  br i1 %empty_assign_load_3, label %34, label %28


 <State 8>: 6.78ns
ST_8: stg_100 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 -2)

ST_8: ult2 [1/1] 2.52ns
:1  %ult2 = icmp ult i32 %last_1, %last_load

ST_8: rev2 [1/1] 1.37ns
:2  %rev2 = xor i1 %ult2, true

ST_8: p_result_1 [1/1] 1.37ns
:3  %p_result_1 = and i1 %rev2, %result_load

ST_8: stg_104 [1/1] 1.52ns
:4  br label %.preheader


 <State 9>: 0.00ns
ST_9: stg_105 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_9: stg_106 [1/1] 0.00ns
:1  br label %35


 <State 10>: 0.00ns
ST_10: stg_107 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 -2)

ST_10: stg_108 [1/1] 0.00ns
:1  br label %.preheader133


 <State 11>: 5.30ns
ST_11: op2_assign_reg2mem [1/1] 0.00ns
:0  %op2_assign_reg2mem = phi i32 [ %i_1_reg2mem, %8 ], [ 0, %.preheader133 ]

ST_11: i_1_reg2mem [1/1] 0.00ns
:1  %i_1_reg2mem = phi i32 [ %i_s, %8 ], [ 1, %.preheader133 ]

ST_11: result_load_1 [1/1] 0.00ns
:2  %result_load_1 = load i1* %result, align 1

ST_11: stg_112 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_11: tmp_3 [1/1] 2.52ns
:4  %tmp_3 = icmp eq i32 %last_1, %op2_assign_reg2mem

ST_11: result_1_s [1/1] 1.37ns
:5  %result_1_s = and i1 %tmp_3, %result_load_1

ST_11: stg_115 [1/1] 0.00ns
:6  call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %currentPriority_V, i4 %priorityIn_V_read)

ST_11: empty_assign_load_4 [1/1] 0.00ns
:7  %empty_assign_load_4 = load volatile i1* %empty_assign, align 1

ST_11: i_s [1/1] 2.44ns
:8  %i_s = add nsw i32 %i_1_reg2mem, 1

ST_11: stg_118 [1/1] 0.00ns
:9  br i1 %empty_assign_load_4, label %12, label %8

ST_11: stg_119 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 -2)

ST_11: stg_120 [1/1] 1.41ns
:1  store i1 %result_1_s, i1* %result, align 1

ST_11: stg_121 [1/1] 0.00ns
:2  br label %11

ST_11: stg_122 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_11: full_assign_load_4 [1/1] 0.00ns
:1  %full_assign_load_4 = load volatile i1* %full_assign, align 1

ST_11: stg_124 [1/1] 0.00ns
:2  br i1 %full_assign_load_4, label %21, label %16

ST_11: stg_125 [1/1] 1.41ns
:2  store i1 %result_1_s, i1* %result, align 1


 <State 12>: 1.57ns
ST_12: stg_126 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 1)

ST_12: stg_127 [1/1] 0.00ns
:1  call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %priorityOut_V, i4 5)

ST_12: stg_128 [1/1] 0.00ns
:3  br label %.preheader132

ST_12: result_load_2 [1/1] 0.00ns
.preheader132:0  %result_load_2 = load i1* %result, align 1

ST_12: stg_130 [1/1] 1.57ns
.preheader132:1  br label %19


 <State 13>: 0.00ns
ST_13: stg_131 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_13: empty_assign_load_5 [1/1] 0.00ns
:1  %empty_assign_load_5 = load volatile i1* %empty_assign, align 1

ST_13: stg_133 [1/1] 0.00ns
:2  br i1 %empty_assign_load_5, label %32, label %26


 <State 14>: 6.78ns
ST_14: stg_134 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 -2)

ST_14: ult3 [1/1] 2.52ns
:1  %ult3 = icmp ult i32 %last_1, %last_load

ST_14: rev3 [1/1] 1.37ns
:2  %rev3 = xor i1 %ult3, true

ST_14: p_result_2 [1/1] 1.37ns
:3  %p_result_2 = and i1 %rev3, %result_1_s

ST_14: stg_138 [1/1] 1.52ns
:4  br label %.preheader


 <State 15>: 1.41ns
ST_15: stg_139 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_15: stg_140 [1/1] 1.41ns
:1  store i1 %result_1_s, i1* %result, align 1

ST_15: stg_141 [1/1] 0.00ns
:2  br label %35


 <State 16>: 0.00ns
ST_16: stg_142 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_16: full_assign_load_1 [1/1] 0.00ns
:1  %full_assign_load_1 = load volatile i1* %full_assign, align 1

ST_16: stg_144 [1/1] 0.00ns
:2  br i1 %full_assign_load_1, label %22, label %17


 <State 17>: 0.00ns
ST_17: stg_145 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 1)

ST_17: stg_146 [1/1] 0.00ns
:1  call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %priorityOut_V, i4 5)

ST_17: stg_147 [1/1] 0.00ns
:2  br label %.preheader132


 <State 18>: 5.26ns
ST_18: i_3_reg2mem [1/1] 0.00ns
:0  %i_3_reg2mem = phi i32 [ %i_1, %15 ], [ 1, %.preheader132 ]

ST_18: tmp_6_reg2mem [1/1] 0.00ns
:1  %tmp_6_reg2mem = phi i4 [ %tmp_1, %15 ], [ 5, %.preheader132 ]

ST_18: stg_150 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_18: stg_151 [1/1] 0.00ns
:3  call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %currentPriority_V, i4 %tmp_6_reg2mem)

ST_18: full_assign_load_5 [1/1] 0.00ns
:4  %full_assign_load_5 = load volatile i1* %full_assign, align 1

ST_18: i_1 [1/1] 2.44ns
:5  %i_1 = add nsw i32 %i_3_reg2mem, 1

ST_18: stg_154 [1/1] 0.00ns
:6  br i1 %full_assign_load_5, label %20, label %15

ST_18: tmp_s [1/1] 0.00ns
:1  %tmp_s = sext i32 %i_3_reg2mem to i64

ST_18: random_priorities_addr [1/1] 0.00ns
:2  %random_priorities_addr = getelementptr [200 x i9]* @random_priorities, i64 0, i64 %tmp_s

ST_18: random_priorities_load [2/2] 2.39ns
:3  %random_priorities_load = load i9* %random_priorities_addr, align 2

ST_18: stg_158 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_18: empty_assign_load_6 [1/1] 0.00ns
:1  %empty_assign_load_6 = load volatile i1* %empty_assign, align 1

ST_18: stg_160 [1/1] 0.00ns
:2  br i1 %empty_assign_load_6, label %31, label %25

ST_18: ult [1/1] 2.52ns
:1  %ult = icmp ult i32 %last_1, %last_load

ST_18: rev [1/1] 1.37ns
:2  %rev = xor i1 %ult, true

ST_18: p_result_3 [1/1] 1.37ns
:3  %p_result_3 = and i1 %rev, %result_load_2


 <State 19>: 2.39ns
ST_19: stg_164 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 1)

ST_19: random_priorities_load [1/2] 2.39ns
:3  %random_priorities_load = load i9* %random_priorities_addr, align 2

ST_19: tmp_1 [1/1] 0.00ns
:4  %tmp_1 = trunc i9 %random_priorities_load to i4

ST_19: stg_167 [1/1] 0.00ns
:5  call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %priorityOut_V, i4 %tmp_1)

ST_19: stg_168 [1/1] 0.00ns
:6  br label %19


 <State 20>: 1.52ns
ST_20: stg_169 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 -2)

ST_20: stg_170 [1/1] 1.52ns
:4  br label %.preheader

ST_20: p_result_3_reg2mem_0_ph [1/1] 0.00ns
.preheader:0  %p_result_3_reg2mem_0_ph = phi i1 [ %p_result_1, %28 ], [ %p_result_s, %27 ], [ %p_result_2, %26 ], [ %p_result_3, %25 ]

ST_20: stg_172 [1/1] 0.00ns
.preheader:1  br label %29


 <State 21>: 0.00ns
ST_21: stg_173 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_21: stg_174 [1/1] 0.00ns
:1  br label %35


 <State 22>: 0.00ns
ST_22: stg_175 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_22: empty_assign_load_1 [1/1] 0.00ns
:1  %empty_assign_load_1 = load volatile i1* %empty_assign, align 1

ST_22: stg_177 [1/1] 0.00ns
:2  br i1 %empty_assign_load_1, label %33, label %27


 <State 23>: 6.78ns
ST_23: stg_178 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 -2)

ST_23: ult1 [1/1] 2.52ns
:1  %ult1 = icmp ult i32 %last_1, %last_load

ST_23: rev1 [1/1] 1.37ns
:2  %rev1 = xor i1 %ult1, true

ST_23: p_result_s [1/1] 1.37ns
:3  %p_result_s = and i1 %rev1, %result_load

ST_23: stg_182 [1/1] 1.52ns
:4  br label %.preheader


 <State 24>: 1.57ns
ST_24: stg_183 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_24: stg_184 [1/1] 0.00ns
:1  call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %currentPriority_V, i4 %priorityIn_V_read)

ST_24: empty_assign_load_7 [1/1] 0.00ns
:2  %empty_assign_load_7 = load volatile i1* %empty_assign, align 1

ST_24: stg_186 [1/1] 0.00ns
:3  br i1 %empty_assign_load_7, label %30, label %24

ST_24: stg_187 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 -2)

ST_24: stg_188 [1/1] 0.00ns
:1  br label %29

ST_24: stg_189 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_24: stg_190 [1/1] 1.57ns
:1  store i32 %last_1, i32* %last, align 4

ST_24: stg_191 [1/1] 1.41ns
:2  store i1 %p_result_3_reg2mem_0_ph, i1* %result, align 1

ST_24: stg_192 [1/1] 0.00ns
:3  br label %35


 <State 25>: 0.00ns
ST_25: stg_193 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_25: stg_194 [1/1] 0.00ns
:1  br label %35


 <State 26>: 0.00ns
ST_26: empty_3 [1/1] 0.00ns
:0  %empty_3 = call i32 (...)* @_ssdm_op_SpecRegionEnd([3 x i8]* @p_str4, i32 %tmp_4)

ST_26: stg_196 [1/1] 0.00ns
:1  br label %1



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
