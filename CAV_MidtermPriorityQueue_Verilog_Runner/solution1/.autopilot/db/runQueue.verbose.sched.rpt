

================================================================
== Vivado HLS Report for 'runQueue'
================================================================
* Date:           Sun Dec  6 00:33:42 2015

* Version:        2014.1 (build date: Fri Apr 04 13:20:25 PM 2014)
* Project:        CAV_MidtermPriorityQueue_Verilog_Runner
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      5.46|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 1.1  |    ?|    ?|         1|          -|          -|     ?|    no    |
        | + Loop 1.2  |    ?|    ?|         1|          -|          -|     ?|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 9
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	8  / (!tmp)
	3  / (tmp)
3 --> 
	4  / (!localFull_load)
	5  / (localFull_load)
4 --> 
	4  / (!localFull_load_1)
	5  / (localFull_load_1)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	7  / (!localEmpty_load & !localEmpty_load_1)
	8  / (localEmpty_load) | (localEmpty_load_1)
8 --> 
	9  / (!tmp) | (!tmp6)
	3  / (tmp & tmp6)
9 --> 
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: iterations_read [1/1] 0.00ns
:11  %iterations_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %iterations)

ST_1: localFull [1/1] 0.00ns
:12  %localFull = alloca i1, align 1

ST_1: localEmpty [1/1] 0.00ns
:13  %localEmpty = alloca i1, align 1


 <State 2>: 4.09ns
ST_2: stg_13 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i4* %priorityOut_V), !map !14

ST_2: stg_14 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i4* %priorityIn_V), !map !18

ST_2: stg_15 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i2* %cmdOut_V), !map !22

ST_2: stg_16 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i1* %empty), !map !26

ST_2: stg_17 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %full), !map !30

ST_2: stg_18 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i1* %fullOut), !map !34

ST_2: stg_19 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32 %iterations), !map !38

ST_2: stg_20 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i1* %finished), !map !44

ST_2: stg_21 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i32* %currentIteration), !map !48

ST_2: stg_22 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !52

ST_2: stg_23 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @str) nounwind

ST_2: stg_24 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecWire(i32* %currentIteration, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_25 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecWire(i1* %finished, [8 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_26 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecIFCore(i32 %iterations, [1 x i8]* @p_str1, [10 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_2: stg_27 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecWire(i32 %iterations, [7 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_28 [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecWire(i1* %fullOut, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_29 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecWire(i1* %full, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_30 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecWire(i1* %empty, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_31 [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecWire(i2* %cmdOut_V, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_32 [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecWire(i4* %priorityIn_V, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_33 [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecWire(i4* %priorityOut_V, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_34 [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecWire(i32 0, [11 x i8]* @p_str5, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_35 [1/1] 0.00ns
:25  call void (...)* @_ssdm_op_SpecIFCore(i32 0, [1 x i8]* @p_str1, [10 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_2: tmp_2 [1/1] 0.00ns
:26  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([3 x i8]* @p_str6)

ST_2: stg_37 [1/1] 0.00ns
:27  call void (...)* @_ssdm_op_SpecProtocol(i32 1, [1 x i8]* @p_str1) nounwind

ST_2: stg_38 [1/1] 0.00ns
:28  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_2: tmp [1/1] 2.52ns
:29  %tmp = icmp sgt i32 %iterations_read, 0

ST_2: stg_40 [1/1] 1.57ns
:30  br i1 %tmp, label %1, label %.loopexit39

ST_2: result_reg2mem_0 [1/1] 0.00ns
:0  %result_reg2mem_0 = alloca i32, align 4

ST_2: stg_42 [1/1] 0.00ns
:1  call void @_ssdm_op_Write.ap_none.i32P(i32* %currentIteration, i32 0)

ST_2: stg_43 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecIFCore(i32* %currentIteration, [1 x i8]* @p_str1, [10 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_2: full_read [1/1] 0.00ns
:3  %full_read = call i1 @_ssdm_op_Read.ap_none.volatile.i1P(i1* %full)

ST_2: stg_45 [1/1] 1.41ns
:4  store volatile i1 %full_read, i1* %localFull, align 1

ST_2: stg_46 [1/1] 0.00ns
:5  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_2: stg_47 [1/1] 1.57ns
:6  store i32 0, i32* %result_reg2mem_0, align 4

ST_2: stg_48 [1/1] 1.57ns
:7  br label %3


 <State 3>: 1.57ns
ST_3: j_1_reg2mem [1/1] 0.00ns
:0  %j_1_reg2mem = phi i32 [ 1, %1 ], [ %j_s, %2 ]

ST_3: stg_50 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_3: stg_51 [1/1] 0.00ns
:2  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 1)

ST_3: localFull_load [1/1] 0.00ns
:3  %localFull_load = load volatile i1* %localFull, align 1

ST_3: stg_53 [1/1] 1.57ns
:4  br i1 %localFull_load, label %.loopexit38, label %.preheader37


 <State 4>: 2.44ns
ST_4: val_assign_reg2mem [1/1] 0.00ns
.preheader37:0  %val_assign_reg2mem = phi i32 [ %i_reg2mem, %.preheader37 ], [ 0, %3 ]

ST_4: i_reg2mem [1/1] 0.00ns
.preheader37:1  %i_reg2mem = phi i32 [ %i, %.preheader37 ], [ 1, %3 ]

ST_4: stg_56 [1/1] 0.00ns
.preheader37:2  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_4: tmp_1 [1/1] 0.00ns
.preheader37:3  %tmp_1 = trunc i32 %val_assign_reg2mem to i4

ST_4: stg_58 [1/1] 0.00ns
.preheader37:4  call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %priorityOut_V, i4 %tmp_1)

ST_4: full_read_1 [1/1] 0.00ns
.preheader37:5  %full_read_1 = call i1 @_ssdm_op_Read.ap_none.volatile.i1P(i1* %full)

ST_4: stg_60 [1/1] 0.00ns
.preheader37:6  call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %fullOut, i1 %full_read_1)

ST_4: stg_61 [1/1] 0.00ns
.preheader37:7  call void (...)* @_ssdm_op_SpecIFCore(i1* %fullOut, [1 x i8]* @p_str1, [10 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_4: localFull_1 [1/1] 0.00ns
.preheader37:8  %localFull_1 = call i1 @_ssdm_op_Read.ap_none.volatile.i1P(i1* %full)

ST_4: stg_63 [1/1] 1.41ns
.preheader37:9  store volatile i1 %localFull_1, i1* %localFull, align 1

ST_4: localFull_load_1 [1/1] 0.00ns
.preheader37:10  %localFull_load_1 = load volatile i1* %localFull, align 1

ST_4: i [1/1] 2.44ns
.preheader37:11  %i = add nsw i32 %i_reg2mem, 1

ST_4: stg_66 [1/1] 0.00ns
.preheader37:12  br i1 %localFull_load_1, label %.loopexit38, label %.preheader37


 <State 5>: 1.30ns
ST_5: stg_67 [1/1] 0.00ns
.loopexit38:0  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_5: stg_68 [1/1] 0.00ns
.loopexit38:1  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_5: localEmpty_1 [1/1] 0.00ns
.loopexit38:2  %localEmpty_1 = call i1 @_ssdm_op_Read.ap_none.volatile.i1P(i1* %empty)

ST_5: stg_70 [1/1] 1.30ns
.loopexit38:3  store volatile i1 %localEmpty_1, i1* %localEmpty, align 1


 <State 6>: 1.57ns
ST_6: stg_71 [1/1] 0.00ns
.loopexit38:4  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_6: stg_72 [1/1] 0.00ns
.loopexit38:5  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 -2)

ST_6: localEmpty_load [1/1] 0.00ns
.loopexit38:6  %localEmpty_load = load volatile i1* %localEmpty, align 1

ST_6: stg_74 [1/1] 1.57ns
.loopexit38:7  br i1 %localEmpty_load, label %4, label %.preheader


 <State 7>: 5.46ns
ST_7: op2_assign_reg2mem [1/1] 0.00ns
.preheader:0  %op2_assign_reg2mem = phi i32 [ %i_1_reg2mem, %.pre ], [ 0, %.loopexit38 ]

ST_7: i_1_reg2mem [1/1] 0.00ns
.preheader:1  %i_1_reg2mem = phi i32 [ %i_s, %.pre ], [ 1, %.loopexit38 ]

ST_7: result_reg2mem_0_load_1 [1/1] 0.00ns
.preheader:2  %result_reg2mem_0_load_1 = load i32* %result_reg2mem_0, align 4

ST_7: stg_78 [1/1] 0.00ns
.preheader:3  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_7: priorityIn_V_read [1/1] 0.00ns
.preheader:4  %priorityIn_V_read = call i4 @_ssdm_op_Read.ap_none.volatile.i4P(i4* %priorityIn_V)

ST_7: tmp_4 [1/1] 0.00ns
.preheader:5  %tmp_4 = zext i4 %priorityIn_V_read to i32

ST_7: tmp_5 [1/1] 2.52ns
.preheader:6  %tmp_5 = icmp eq i32 %tmp_4, %op2_assign_reg2mem

ST_7: result [1/1] 2.44ns
.preheader:7  %result = add nsw i32 %result_reg2mem_0_load_1, 1

ST_7: result_1_s [1/1] 1.37ns
.preheader:8  %result_1_s = select i1 %tmp_5, i32 %result_reg2mem_0_load_1, i32 %result

ST_7: localEmpty_2 [1/1] 0.00ns
.preheader:9  %localEmpty_2 = call i1 @_ssdm_op_Read.ap_none.volatile.i1P(i1* %empty)

ST_7: stg_85 [1/1] 1.30ns
.preheader:10  store volatile i1 %localEmpty_2, i1* %localEmpty, align 1

ST_7: localEmpty_load_1 [1/1] 0.00ns
.preheader:11  %localEmpty_load_1 = load volatile i1* %localEmpty, align 1

ST_7: i_s [1/1] 2.44ns
.preheader:12  %i_s = add nsw i32 %i_1_reg2mem, 1

ST_7: stg_88 [1/1] 0.00ns
.preheader:13  br i1 %localEmpty_load_1, label %.loopexit, label %.pre

ST_7: stg_89 [1/1] 1.57ns
.pre:0  store i32 %result_1_s, i32* %result_reg2mem_0, align 4

ST_7: stg_90 [1/1] 0.00ns
.pre:1  br label %.preheader

ST_7: stg_91 [1/1] 1.57ns
.loopexit:0  store i32 %result_1_s, i32* %result_reg2mem_0, align 4

ST_7: stg_92 [1/1] 0.00ns
.loopexit:1  br label %4

ST_7: result_reg2mem_0_load [1/1] 0.00ns
:0  %result_reg2mem_0_load = load i32* %result_reg2mem_0, align 4


 <State 8>: 4.09ns
ST_8: stg_94 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_Wait(i32 1) nounwind

ST_8: stg_95 [1/1] 0.00ns
:2  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_8: tmp6 [1/1] 2.52ns
:3  %tmp6 = icmp slt i32 %j_1_reg2mem, %iterations_read

ST_8: j_s [1/1] 2.44ns
:4  %j_s = add nsw i32 %j_1_reg2mem, 1

ST_8: stg_98 [1/1] 1.57ns
:5  br i1 %tmp6, label %2, label %.loopexit39

ST_8: stg_99 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.i32P(i32* %currentIteration, i32 %j_1_reg2mem)

ST_8: stg_100 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecIFCore(i32* %currentIteration, [1 x i8]* @p_str1, [10 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_8: full_read_3 [1/1] 0.00ns
:2  %full_read_3 = call i1 @_ssdm_op_Read.ap_none.volatile.i1P(i1* %full)

ST_8: stg_102 [1/1] 1.41ns
:3  store volatile i1 %full_read_3, i1* %localFull, align 1

ST_8: stg_103 [1/1] 0.00ns
:4  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_8: stg_104 [1/1] 0.00ns
:5  br label %3

ST_8: result_reg2mem_1 [1/1] 0.00ns
.loopexit39:0  %result_reg2mem_1 = phi i32 [ 0, %0 ], [ %result_reg2mem_0_load, %4 ]

ST_8: empty_2 [1/1] 0.00ns
.loopexit39:1  %empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([3 x i8]* @p_str6, i32 %tmp_2)


 <State 9>: 0.00ns
ST_9: stg_107 [1/1] 0.00ns
.loopexit39:2  call void @_ssdm_op_Write.ap_ovld.i1P(i1* %finished, i1 true)

ST_9: stg_108 [1/1] 0.00ns
.loopexit39:3  call void (...)* @_ssdm_op_SpecIFCore(i1* %finished, [1 x i8]* @p_str1, [10 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_9: stg_109 [1/1] 0.00ns
.loopexit39:4  ret i32 %result_reg2mem_1



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
