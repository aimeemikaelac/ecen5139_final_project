

================================================================
== Vivado HLS Report for 'runQueue'
================================================================
* Date:           Wed Dec  2 11:52:13 2015

* Version:        2014.1 (build date: Fri Apr 04 13:20:25 PM 2014)
* Project:        CAV_MidtermPriorityQueue_Verilog_Runner
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      5.26|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+-------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  |  Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count | Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+-------+----------+
        |- Loop 1     |    ?|    ?|         ?|          -|          -|  10000|    no    |
        | + Loop 1.1  |    ?|    ?|         2|          -|          -|      ?|    no    |
        | + Loop 1.2  |    ?|    ?|         2|          -|          -|      ?|    no    |
        | + Loop 1.3  |    ?|    ?|         2|          -|          -|      ?|    no    |
        | + Loop 1.4  |    ?|    ?|         2|          -|          -|      ?|    no    |
        +-------------+-----+-----+----------+-----------+-----------+-------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 10
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond)
3 --> 
	4  / (!full_assign_load)
	5  / (full_assign_load)
4 --> 
	3  / true
5 --> 
	6  / (!empty_assign_load)
	7  / (empty_assign_load)
6 --> 
	5  / true
7 --> 
	8  / (!full_assign_load_1)
	9  / (full_assign_load_1)
8 --> 
	7  / true
9 --> 
	2  / (empty_assign_load_1)
	10  / (!empty_assign_load_1)
10 --> 
	9  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: last [1/1] 0.00ns
:0  %last = alloca i32, align 4

ST_1: stg_12 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i4* %priorityOut_V), !map !7

ST_1: stg_13 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i4 %priorityIn_V), !map !11

ST_1: stg_14 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i2* %cmdOut_V), !map !17

ST_1: stg_15 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i1 %empty), !map !21

ST_1: stg_16 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i1 %full), !map !25

ST_1: stg_17 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i1 false) nounwind, !map !29

ST_1: stg_18 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @str) nounwind

ST_1: full_read [1/1] 0.00ns
:8  %full_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %full)

ST_1: empty_read [1/1] 0.00ns
:9  %empty_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %empty)

ST_1: priorityIn_V_read [1/1] 0.00ns
:10  %priorityIn_V_read = call i4 @_ssdm_op_Read.ap_none.i4(i4 %priorityIn_V)

ST_1: empty_assign [1/1] 0.00ns
:11  %empty_assign = alloca i1, align 1

ST_1: full_assign [1/1] 0.00ns
:12  %full_assign = alloca i1, align 1

ST_1: stg_24 [1/1] 0.00ns
:13  store volatile i1 %empty_read, i1* %empty_assign, align 1

ST_1: stg_25 [1/1] 0.00ns
:14  store volatile i1 %full_read, i1* %full_assign, align 1

ST_1: stg_26 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecWire(i1 %full, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_27 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecWire(i1 %empty, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_28 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecWire(i2* %cmdOut_V, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_29 [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecWire(i4 %priorityIn_V, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_30 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecWire(i4* %priorityOut_V, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_31 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecWire(i32 0, [11 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_32 [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecIFCore(i32 0, [1 x i8]* @p_str1, [10 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: last_1 [1/1] 0.00ns
:22  %last_1 = zext i4 %priorityIn_V_read to i32

ST_1: stg_34 [1/1] 1.57ns
:23  store i32 0, i32* %last, align 4

ST_1: stg_35 [1/1] 1.39ns
:24  br label %.loopexit


 <State 2>: 3.79ns
ST_2: j [1/1] 0.00ns
.loopexit:0  %j = phi i14 [ 0, %0 ], [ %j_1, %.preheader ]

ST_2: result [1/1] 0.00ns
.loopexit:1  %result = phi i1 [ true, %0 ], [ %result_3, %.preheader ]

ST_2: exitcond [1/1] 2.21ns
.loopexit:2  %exitcond = icmp eq i14 %j, -6384

ST_2: empty_2 [1/1] 0.00ns
.loopexit:3  %empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10000, i64 10000, i64 10000)

ST_2: j_1 [1/1] 1.96ns
.loopexit:4  %j_1 = add i14 %j, 1

ST_2: stg_41 [1/1] 1.57ns
.loopexit:5  br i1 %exitcond, label %5, label %.preheader124

ST_2: stg_42 [1/1] 0.00ns
:0  ret i1 %result


 <State 3>: 2.44ns
ST_3: val_assign [1/1] 0.00ns
.preheader124:0  %val_assign = phi i32 [ %i, %1 ], [ 0, %.loopexit ]

ST_3: full_assign_load [1/1] 0.00ns
.preheader124:1  %full_assign_load = load volatile i1* %full_assign, align 1

ST_3: i [1/1] 2.44ns
.preheader124:2  %i = add nsw i32 %val_assign, 1

ST_3: stg_46 [1/1] 1.57ns
.preheader124:3  br i1 %full_assign_load, label %.preheader123, label %1

ST_3: stg_47 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 1)

ST_3: tmp [1/1] 0.00ns
:1  %tmp = trunc i32 %val_assign to i4

ST_3: stg_49 [1/1] 0.00ns
:2  call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %priorityOut_V, i4 %tmp)


 <State 4>: 0.00ns
ST_4: stg_50 [1/1] 0.00ns
:3  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_4: stg_51 [1/1] 0.00ns
:4  br label %.preheader124


 <State 5>: 3.89ns
ST_5: op2_assign [1/1] 0.00ns
.preheader123:0  %op2_assign = phi i32 [ %i_1, %2 ], [ 0, %.preheader124 ]

ST_5: result_1 [1/1] 0.00ns
.preheader123:1  %result_1 = phi i1 [ %result_1_s, %2 ], [ %result, %.preheader124 ]

ST_5: empty_assign_load [1/1] 0.00ns
.preheader123:2  %empty_assign_load = load volatile i1* %empty_assign, align 1

ST_5: i_1 [1/1] 2.44ns
.preheader123:3  %i_1 = add nsw i32 %op2_assign, 1

ST_5: stg_56 [1/1] 1.57ns
.preheader123:4  br i1 %empty_assign_load, label %.preheader122, label %2

ST_5: stg_57 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 -2)

ST_5: tmp_3 [1/1] 2.52ns
:1  %tmp_3 = icmp eq i32 %last_1, %op2_assign

ST_5: result_1_s [1/1] 1.37ns
:2  %result_1_s = and i1 %tmp_3, %result_1


 <State 6>: 0.00ns
ST_6: stg_60 [1/1] 0.00ns
:3  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_6: stg_61 [1/1] 0.00ns
:4  br label %.preheader123


 <State 7>: 2.44ns
ST_7: i_2 [1/1] 0.00ns
.preheader122:0  %i_2 = phi i32 [ %i_3, %3 ], [ 0, %.preheader123 ]

ST_7: full_assign_load_1 [1/1] 0.00ns
.preheader122:1  %full_assign_load_1 = load volatile i1* %full_assign, align 1

ST_7: i_3 [1/1] 2.44ns
.preheader122:2  %i_3 = add nsw i32 %i_2, 1

ST_7: stg_65 [1/1] 1.30ns
.preheader122:3  br i1 %full_assign_load_1, label %.preheader, label %3

ST_7: stg_66 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 1)

ST_7: tmp_5 [1/1] 0.00ns
:1  %tmp_5 = sext i32 %i_2 to i64

ST_7: random_priorities_addr [1/1] 0.00ns
:2  %random_priorities_addr = getelementptr [200 x i9]* @random_priorities, i64 0, i64 %tmp_5

ST_7: random_priorities_load [2/2] 2.39ns
:3  %random_priorities_load = load i9* %random_priorities_addr, align 2


 <State 8>: 2.39ns
ST_8: random_priorities_load [1/2] 2.39ns
:3  %random_priorities_load = load i9* %random_priorities_addr, align 2

ST_8: tmp_1 [1/1] 0.00ns
:4  %tmp_1 = trunc i9 %random_priorities_load to i4

ST_8: stg_72 [1/1] 0.00ns
:5  call void @_ssdm_op_Write.ap_none.volatile.i4P(i4* %priorityOut_V, i4 %tmp_1)

ST_8: stg_73 [1/1] 0.00ns
:6  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_8: stg_74 [1/1] 0.00ns
:7  br label %.preheader122


 <State 9>: 5.26ns
ST_9: result_3 [1/1] 0.00ns
.preheader:0  %result_3 = phi i1 [ %p_result_3, %4 ], [ %result_1, %.preheader122 ]

ST_9: empty_assign_load_1 [1/1] 0.00ns
.preheader:1  %empty_assign_load_1 = load volatile i1* %empty_assign, align 1

ST_9: stg_77 [1/1] 0.00ns
.preheader:2  br i1 %empty_assign_load_1, label %.loopexit, label %4

ST_9: last_load [1/1] 0.00ns
:0  %last_load = load i32* %last, align 4

ST_9: stg_79 [1/1] 0.00ns
:1  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 -2)

ST_9: ult [1/1] 2.52ns
:2  %ult = icmp ult i32 %last_1, %last_load

ST_9: rev4 [1/1] 1.37ns
:3  %rev4 = xor i1 %ult, true

ST_9: p_result_3 [1/1] 1.37ns
:4  %p_result_3 = and i1 %rev4, %result_3

ST_9: stg_83 [1/1] 1.57ns
:6  store i32 %last_1, i32* %last, align 4


 <State 10>: 0.00ns
ST_10: stg_84 [1/1] 0.00ns
:5  call void @_ssdm_op_Write.ap_none.volatile.i2P(i2* %cmdOut_V, i2 0)

ST_10: stg_85 [1/1] 0.00ns
:7  br label %.preheader



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
