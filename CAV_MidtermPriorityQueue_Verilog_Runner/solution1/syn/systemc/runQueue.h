// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _runQueue_HH_
#define _runQueue_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "runQueue_random_priorities.h"

namespace ap_rtl {

struct runQueue : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > priorityOut_V;
    sc_in< sc_lv<4> > priorityIn_V;
    sc_out< sc_lv<2> > cmdOut_V;
    sc_in< sc_logic > empty;
    sc_in< sc_logic > full;
    sc_out< sc_lv<4> > currentPriority_V;
    sc_out< sc_logic > fullOut;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    runQueue(sc_module_name name);
    SC_HAS_PROCESS(runQueue);

    ~runQueue();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    runQueue_random_priorities* random_priorities_U;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_lv<8> > random_priorities_address0;
    sc_signal< sc_logic > random_priorities_ce0;
    sc_signal< sc_lv<9> > random_priorities_q0;
    sc_signal< sc_lv<32> > last_1_fu_320_p1;
    sc_signal< sc_lv<32> > last_1_reg_446;
    sc_signal< sc_lv<1> > result_load_reg_453;
    sc_signal< sc_lv<32> > last_load_reg_458;
    sc_signal< sc_lv<1> > grp_load_fu_277_p1;
    sc_signal< sc_lv<1> > localFull_load_reg_463;
    sc_signal< sc_lv<32> > i8_fu_337_p2;
    sc_signal< sc_lv<4> > tmp_fu_343_p1;
    sc_signal< sc_lv<1> > grp_load_fu_288_p1;
    sc_signal< sc_lv<1> > localEmpty_load_2_reg_480;
    sc_signal< sc_lv<1> > localFull_load_3_reg_484;
    sc_signal< sc_lv<1> > grp_fu_301_p2;
    sc_signal< sc_lv<1> > localEmpty_load_reg_496;
    sc_signal< sc_lv<1> > result_1_s_fu_353_p2;
    sc_signal< sc_lv<1> > result_1_s_reg_500;
    sc_signal< sc_lv<32> > i_s_fu_360_p2;
    sc_signal< sc_lv<1> > localFull_load_4_reg_514;
    sc_signal< sc_lv<1> > p_result_2_fu_366_p2;
    sc_signal< sc_lv<1> > localFull_load_1_reg_526;
    sc_signal< sc_lv<1> > result_load_2_reg_530;
    sc_signal< sc_lv<32> > i_1_fu_371_p2;
    sc_signal< sc_lv<32> > i_1_reg_538;
    sc_signal< sc_lv<4> > tmp_1_fu_382_p1;
    sc_signal< sc_lv<1> > j_phi_fu_172_p4;
    sc_signal< sc_lv<1> > j_reg_167;
    sc_signal< sc_lv<32> > i_reg2mem_reg_180;
    sc_signal< sc_lv<4> > tmp_reg2mem_reg_191;
    sc_signal< sc_lv<32> > op2_assign_reg2mem_reg_203;
    sc_signal< sc_lv<32> > i_1_reg2mem_reg_214;
    sc_signal< sc_lv<32> > i_3_reg2mem_reg_227;
    sc_signal< sc_lv<4> > tmp_6_reg2mem_reg_238;
    sc_signal< sc_lv<1> > p_result_3_reg2mem_0_ph_reg_250;
    sc_signal< sc_lv<1> > p_result_3_fu_387_p2;
    sc_signal< sc_lv<64> > tmp_s_fu_377_p1;
    sc_signal< sc_lv<1> > result_fu_80;
    sc_signal< sc_lv<32> > last_fu_84;
    sc_signal< sc_lv<1> > empty_assign_fu_88;
    sc_signal< sc_lv<1> > empty_read_read_fu_110_p2;
    sc_signal< sc_lv<1> > full_assign_fu_92;
    sc_signal< sc_lv<1> > full_read_read_fu_104_p2;
    sc_signal< sc_lv<1> > localFull_fu_96;
    sc_signal< sc_lv<1> > localEmpty_fu_100;
    sc_signal< sc_lv<2> > cmdOut_V_preg;
    sc_signal< sc_lv<4> > priorityOut_V_preg;
    sc_signal< sc_logic > fullOut_preg;
    sc_signal< sc_lv<4> > currentPriority_V_preg;
    sc_signal< sc_lv<1> > grp_fu_291_p2;
    sc_signal< sc_lv<1> > grp_fu_295_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_348_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<5> ap_ST_st6_fsm_5;
    static const sc_lv<5> ap_ST_st7_fsm_6;
    static const sc_lv<5> ap_ST_st8_fsm_7;
    static const sc_lv<5> ap_ST_st9_fsm_8;
    static const sc_lv<5> ap_ST_st10_fsm_9;
    static const sc_lv<5> ap_ST_st11_fsm_10;
    static const sc_lv<5> ap_ST_st12_fsm_11;
    static const sc_lv<5> ap_ST_st13_fsm_12;
    static const sc_lv<5> ap_ST_st14_fsm_13;
    static const sc_lv<5> ap_ST_st15_fsm_14;
    static const sc_lv<5> ap_ST_st16_fsm_15;
    static const sc_lv<5> ap_ST_st17_fsm_16;
    static const sc_lv<5> ap_ST_st18_fsm_17;
    static const sc_lv<5> ap_ST_st19_fsm_18;
    static const sc_lv<5> ap_ST_st20_fsm_19;
    static const sc_lv<5> ap_ST_st21_fsm_20;
    static const sc_lv<5> ap_ST_st22_fsm_21;
    static const sc_lv<5> ap_ST_st23_fsm_22;
    static const sc_lv<5> ap_ST_st24_fsm_23;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_cmdOut_V();
    void thread_currentPriority_V();
    void thread_empty_read_read_fu_110_p2();
    void thread_fullOut();
    void thread_full_read_read_fu_104_p2();
    void thread_grp_fu_291_p2();
    void thread_grp_fu_295_p2();
    void thread_grp_fu_301_p2();
    void thread_grp_load_fu_277_p1();
    void thread_grp_load_fu_288_p1();
    void thread_i8_fu_337_p2();
    void thread_i_1_fu_371_p2();
    void thread_i_s_fu_360_p2();
    void thread_j_phi_fu_172_p4();
    void thread_last_1_fu_320_p1();
    void thread_p_result_2_fu_366_p2();
    void thread_p_result_3_fu_387_p2();
    void thread_priorityOut_V();
    void thread_random_priorities_address0();
    void thread_random_priorities_ce0();
    void thread_result_1_s_fu_353_p2();
    void thread_tmp_1_fu_382_p1();
    void thread_tmp_3_fu_348_p2();
    void thread_tmp_fu_343_p1();
    void thread_tmp_s_fu_377_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
