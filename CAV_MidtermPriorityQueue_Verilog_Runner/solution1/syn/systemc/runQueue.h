// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _runQueue_HH_
#define _runQueue_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "runQueue_random_priorities.h"

namespace ap_rtl {

struct runQueue : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > priorityOut_V;
    sc_in< sc_lv<4> > priorityIn_V;
    sc_out< sc_lv<2> > cmdOut_V;
    sc_in< sc_logic > empty;
    sc_in< sc_logic > full;
    sc_out< sc_logic > fullOut;
    sc_in< sc_lv<32> > iterations;
    sc_in< sc_logic > iterations_ap_vld;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    runQueue(sc_module_name name);
    SC_HAS_PROCESS(runQueue);

    ~runQueue();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    runQueue_random_priorities* random_priorities_U;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_lv<32> > iterations_in_sig;
    sc_signal< sc_lv<32> > iterations_preg;
    sc_signal< sc_logic > iterations_ap_vld_in_sig;
    sc_signal< sc_logic > iterations_ap_vld_preg;
    sc_signal< sc_lv<8> > random_priorities_address0;
    sc_signal< sc_logic > random_priorities_ce0;
    sc_signal< sc_lv<9> > random_priorities_q0;
    sc_signal< sc_lv<32> > reg_374;
    sc_signal< bool > ap_sig_bdd_72;
    sc_signal< sc_lv<1> > grp_load_fu_360_p1;
    sc_signal< sc_lv<1> > localFull_load_reg_517;
    sc_signal< sc_lv<1> > grp_load_fu_371_p1;
    sc_signal< sc_lv<1> > localEmpty_load_reg_528;
    sc_signal< sc_lv<1> > result_1_s_fu_400_p2;
    sc_signal< sc_lv<32> > i_s_fu_406_p2;
    sc_signal< sc_lv<1> > localFull_load_3_reg_546;
    sc_signal< sc_lv<32> > i_1_fu_412_p2;
    sc_signal< sc_lv<32> > i_1_reg_553;
    sc_signal< sc_lv<1> > localEmpty_load_2_reg_563;
    sc_signal< sc_lv<1> > p_result_s_fu_444_p2;
    sc_signal< sc_lv<4> > priorityIn_V_read_2_reg_572;
    sc_signal< sc_lv<1> > p_result_1_fu_464_p2;
    sc_signal< sc_lv<1> > tmp4_fu_475_p2;
    sc_signal< sc_lv<1> > tmp4_reg_586;
    sc_signal< sc_lv<32> > j_s_fu_480_p2;
    sc_signal< sc_lv<32> > j_s_reg_590;
    sc_signal< sc_lv<32> > i_fu_486_p2;
    sc_signal< sc_lv<32> > last_1_reg_155;
    sc_signal< sc_lv<32> > last_reg2mem_0_ph_reg_291;
    sc_signal< sc_lv<1> > result_reg2mem_1_ph_reg_166;
    sc_signal< sc_lv<1> > result_reg2mem_0_ph_reg_304;
    sc_signal< sc_lv<32> > j_1_reg2mem_1_ph_reg_178;
    sc_signal< sc_lv<32> > j_1_reg2mem_0_ph_reg_318;
    sc_signal< sc_lv<1> > result_3_reg2mem_reg_278;
    sc_signal< sc_lv<1> > result_reg2mem_1_reg_190;
    sc_signal< sc_lv<32> > j_1_reg2mem_1_reg_201;
    sc_signal< sc_lv<32> > op2_assign_reg2mem_reg_212;
    sc_signal< sc_lv<1> > result_1_reg2mem_reg_223;
    sc_signal< sc_lv<32> > i_1_reg2mem_reg_233;
    sc_signal< sc_lv<1> > result_1_reg2mem_1_reg_246;
    sc_signal< sc_lv<32> > i_3_reg2mem_reg_257;
    sc_signal< sc_lv<1> > p_result_3_reg2mem_reg_268;
    sc_signal< sc_lv<32> > i_reg2mem_reg_331;
    sc_signal< sc_lv<1> > result_reg2mem_2_reg_342;
    sc_signal< sc_lv<1> > tmp6_fu_379_p2;
    sc_signal< sc_lv<64> > tmp_s_fu_418_p1;
    sc_signal< sc_lv<1> > localFull_fu_80;
    sc_signal< sc_lv<1> > grp_read_fu_98_p2;
    sc_signal< sc_lv<1> > localEmpty_fu_84;
    sc_signal< sc_lv<1> > grp_read_fu_121_p2;
    sc_signal< sc_lv<32> > last_fu_88;
    sc_signal< sc_lv<32> > last_2_fu_450_p1;
    sc_signal< sc_lv<2> > cmdOut_V_preg;
    sc_signal< sc_lv<4> > priorityOut_V_preg;
    sc_signal< sc_lv<4> > tmp_1_fu_423_p1;
    sc_signal< sc_lv<4> > tmp_fu_492_p1;
    sc_signal< sc_logic > fullOut_preg;
    sc_signal< sc_lv<32> > tmp_3_fu_390_p1;
    sc_signal< sc_lv<1> > tmp_4_fu_394_p2;
    sc_signal< sc_lv<32> > tmp_2_cast_fu_428_p1;
    sc_signal< sc_lv<1> > ult_fu_432_p2;
    sc_signal< sc_lv<1> > rev1_fu_438_p2;
    sc_signal< sc_lv<1> > ult1_fu_453_p2;
    sc_signal< sc_lv<1> > rev_fu_458_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_86;
    sc_signal< bool > ap_sig_bdd_216;
    sc_signal< bool > ap_sig_bdd_236;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<5> ap_ST_st6_fsm_5;
    static const sc_lv<5> ap_ST_st7_fsm_6;
    static const sc_lv<5> ap_ST_st8_fsm_7;
    static const sc_lv<5> ap_ST_st9_fsm_8;
    static const sc_lv<5> ap_ST_st10_fsm_9;
    static const sc_lv<5> ap_ST_st11_fsm_10;
    static const sc_lv<5> ap_ST_st12_fsm_11;
    static const sc_lv<5> ap_ST_st13_fsm_12;
    static const sc_lv<5> ap_ST_st14_fsm_13;
    static const sc_lv<5> ap_ST_st15_fsm_14;
    static const sc_lv<5> ap_ST_st16_fsm_15;
    static const sc_lv<5> ap_ST_st17_fsm_16;
    static const sc_lv<5> ap_ST_st18_fsm_17;
    static const sc_lv<5> ap_ST_st19_fsm_18;
    static const sc_lv<5> ap_ST_st20_fsm_19;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_5;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_bdd_216();
    void thread_ap_sig_bdd_236();
    void thread_ap_sig_bdd_72();
    void thread_ap_sig_bdd_86();
    void thread_cmdOut_V();
    void thread_fullOut();
    void thread_grp_load_fu_360_p1();
    void thread_grp_load_fu_371_p1();
    void thread_grp_read_fu_121_p2();
    void thread_grp_read_fu_98_p2();
    void thread_i_1_fu_412_p2();
    void thread_i_fu_486_p2();
    void thread_i_s_fu_406_p2();
    void thread_iterations_ap_vld_in_sig();
    void thread_iterations_in_sig();
    void thread_j_s_fu_480_p2();
    void thread_last_2_fu_450_p1();
    void thread_p_result_1_fu_464_p2();
    void thread_p_result_s_fu_444_p2();
    void thread_priorityOut_V();
    void thread_random_priorities_address0();
    void thread_random_priorities_ce0();
    void thread_result_1_s_fu_400_p2();
    void thread_rev1_fu_438_p2();
    void thread_rev_fu_458_p2();
    void thread_tmp4_fu_475_p2();
    void thread_tmp6_fu_379_p2();
    void thread_tmp_1_fu_423_p1();
    void thread_tmp_2_cast_fu_428_p1();
    void thread_tmp_3_fu_390_p1();
    void thread_tmp_4_fu_394_p2();
    void thread_tmp_fu_492_p1();
    void thread_tmp_s_fu_418_p1();
    void thread_ult1_fu_453_p2();
    void thread_ult_fu_432_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
