// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _runQueue_HH_
#define _runQueue_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct runQueue : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > priorityOut_V;
    sc_in< sc_lv<4> > priorityIn_V;
    sc_out< sc_lv<2> > cmdOut_V;
    sc_in< sc_logic > empty;
    sc_in< sc_logic > full;
    sc_out< sc_logic > fullOut;
    sc_in< sc_lv<32> > iterations;
    sc_in< sc_logic > iterations_ap_vld;
    sc_out< sc_logic > finished;
    sc_out< sc_logic > finished_ap_vld;
    sc_out< sc_lv<32> > currentIteration;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    runQueue(sc_module_name name);
    SC_HAS_PROCESS(runQueue);

    ~runQueue();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_lv<32> > iterations_in_sig;
    sc_signal< sc_lv<32> > iterations_preg;
    sc_signal< sc_logic > iterations_ap_vld_in_sig;
    sc_signal< sc_logic > iterations_ap_vld_preg;
    sc_signal< bool > ap_sig_bdd_52;
    sc_signal< sc_lv<1> > tmp_fu_253_p2;
    sc_signal< sc_lv<1> > tmp_reg_332;
    sc_signal< sc_lv<32> > i_fu_268_p2;
    sc_signal< sc_lv<1> > grp_load_fu_246_p1;
    sc_signal< sc_lv<1> > localEmpty_load_reg_355;
    sc_signal< sc_lv<32> > i_s_fu_294_p2;
    sc_signal< sc_lv<1> > result_reg2mem_0_load_reg_367;
    sc_signal< sc_lv<32> > j_s_fu_308_p2;
    sc_signal< sc_lv<32> > j_1_reg2mem_reg_159;
    sc_signal< sc_lv<1> > tmp6_fu_303_p2;
    sc_signal< sc_lv<32> > val_assign_reg2mem_reg_172;
    sc_signal< sc_lv<1> > grp_load_fu_238_p1;
    sc_signal< sc_lv<32> > i_reg2mem_reg_183;
    sc_signal< sc_lv<32> > op2_assign_reg2mem_reg_196;
    sc_signal< sc_lv<32> > i_1_reg2mem_reg_207;
    sc_signal< sc_lv<1> > result_reg2mem_1_reg_220;
    sc_signal< sc_lv<1> > localFull_fu_82;
    sc_signal< sc_lv<1> > grp_read_fu_116_p2;
    sc_signal< sc_lv<1> > localEmpty_fu_86;
    sc_signal< sc_lv<1> > grp_read_fu_138_p2;
    sc_signal< sc_lv<1> > result_reg2mem_0_fu_90;
    sc_signal< sc_lv<1> > result_1_s_fu_287_p2;
    sc_signal< sc_lv<2> > cmdOut_V_preg;
    sc_signal< sc_lv<32> > currentIteration_preg;
    sc_signal< sc_lv<4> > tmp_1_fu_263_p1;
    sc_signal< sc_lv<4> > priorityOut_V_preg;
    sc_signal< sc_logic > fullOut_preg;
    sc_signal< sc_lv<32> > tmp_4_fu_277_p1;
    sc_signal< sc_lv<1> > tmp_5_fu_281_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_70;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_st3_fsm_2;
    static const sc_lv<4> ap_ST_st4_fsm_3;
    static const sc_lv<4> ap_ST_st5_fsm_4;
    static const sc_lv<4> ap_ST_st6_fsm_5;
    static const sc_lv<4> ap_ST_st7_fsm_6;
    static const sc_lv<4> ap_ST_st8_fsm_7;
    static const sc_lv<4> ap_ST_st9_fsm_8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<4> ap_const_lv4_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_bdd_52();
    void thread_ap_sig_bdd_70();
    void thread_cmdOut_V();
    void thread_currentIteration();
    void thread_finished();
    void thread_finished_ap_vld();
    void thread_fullOut();
    void thread_grp_load_fu_238_p1();
    void thread_grp_load_fu_246_p1();
    void thread_grp_read_fu_116_p2();
    void thread_grp_read_fu_138_p2();
    void thread_i_fu_268_p2();
    void thread_i_s_fu_294_p2();
    void thread_iterations_ap_vld_in_sig();
    void thread_iterations_in_sig();
    void thread_j_s_fu_308_p2();
    void thread_priorityOut_V();
    void thread_result_1_s_fu_287_p2();
    void thread_tmp6_fu_303_p2();
    void thread_tmp_1_fu_263_p1();
    void thread_tmp_4_fu_277_p1();
    void thread_tmp_5_fu_281_p2();
    void thread_tmp_fu_253_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
