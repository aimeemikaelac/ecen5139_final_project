// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _runQueue_HH_
#define _runQueue_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "runQueue_random_priorities.h"

namespace ap_rtl {

struct runQueue : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > priorityOut_V;
    sc_in< sc_lv<4> > priorityIn_V;
    sc_out< sc_lv<2> > cmdOut_V;
    sc_in< sc_logic > empty;
    sc_in< sc_logic > full;
    sc_out< sc_lv<4> > currentPriority_V;
    sc_out< sc_logic > fullOut;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    runQueue(sc_module_name name);
    SC_HAS_PROCESS(runQueue);

    ~runQueue();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    runQueue_random_priorities* random_priorities_U;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_lv<8> > random_priorities_address0;
    sc_signal< sc_logic > random_priorities_ce0;
    sc_signal< sc_lv<9> > random_priorities_q0;
    sc_signal< sc_lv<32> > last_1_fu_298_p1;
    sc_signal< sc_lv<32> > last_1_reg_403;
    sc_signal< sc_lv<1> > grp_load_fu_274_p1;
    sc_signal< sc_lv<1> > localFull_load_reg_410;
    sc_signal< sc_lv<32> > i_fu_302_p2;
    sc_signal< sc_lv<4> > tmp_fu_308_p1;
    sc_signal< sc_lv<32> > last_load_reg_434;
    sc_signal< sc_lv<1> > grp_load_fu_285_p1;
    sc_signal< sc_lv<1> > localEmpty_load_reg_439;
    sc_signal< sc_lv<1> > result_1_s_fu_326_p2;
    sc_signal< sc_lv<32> > i_s_fu_332_p2;
    sc_signal< sc_lv<1> > localFull_load_2_reg_457;
    sc_signal< sc_lv<32> > i_1_fu_338_p2;
    sc_signal< sc_lv<32> > i_1_reg_464;
    sc_signal< sc_lv<4> > tmp_1_fu_349_p1;
    sc_signal< sc_lv<1> > localEmpty_load_2_reg_479;
    sc_signal< sc_lv<1> > p_result_s_fu_364_p2;
    sc_signal< sc_lv<1> > p_result_s_reg_483;
    sc_signal< sc_lv<32> > i_reg2mem_reg_161;
    sc_signal< sc_lv<4> > tmp_reg2mem_reg_172;
    sc_signal< sc_lv<32> > op2_assign_reg2mem_reg_184;
    sc_signal< sc_lv<1> > result_1_reg2mem_reg_195;
    sc_signal< sc_lv<32> > i_1_reg2mem_reg_206;
    sc_signal< sc_lv<1> > result_1_reg2mem_1_reg_219;
    sc_signal< sc_lv<32> > i_3_reg2mem_reg_231;
    sc_signal< sc_lv<4> > tmp_6_reg2mem_reg_242;
    sc_signal< sc_lv<1> > result_3_reg2mem_phi_fu_257_p4;
    sc_signal< sc_lv<1> > result_3_reg2mem_reg_254;
    sc_signal< sc_lv<64> > tmp_s_fu_344_p1;
    sc_signal< sc_lv<1> > empty_assign_fu_78;
    sc_signal< sc_lv<1> > empty_read_read_fu_104_p2;
    sc_signal< sc_lv<1> > full_assign_fu_82;
    sc_signal< sc_lv<1> > full_read_read_fu_98_p2;
    sc_signal< sc_lv<1> > localFull_fu_86;
    sc_signal< sc_lv<1> > localEmpty_fu_90;
    sc_signal< sc_lv<32> > last_fu_94;
    sc_signal< sc_lv<2> > cmdOut_V_preg;
    sc_signal< sc_lv<4> > priorityOut_V_preg;
    sc_signal< sc_logic > fullOut_preg;
    sc_signal< sc_lv<4> > currentPriority_V_preg;
    sc_signal< sc_lv<1> > tmp_3_fu_321_p2;
    sc_signal< sc_lv<1> > ult_fu_354_p2;
    sc_signal< sc_lv<1> > rev_fu_358_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_75;
    sc_signal< bool > ap_sig_bdd_60;
    sc_signal< bool > ap_sig_bdd_195;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_st3_fsm_2;
    static const sc_lv<4> ap_ST_st4_fsm_3;
    static const sc_lv<4> ap_ST_st5_fsm_4;
    static const sc_lv<4> ap_ST_st6_fsm_5;
    static const sc_lv<4> ap_ST_st7_fsm_6;
    static const sc_lv<4> ap_ST_st8_fsm_7;
    static const sc_lv<4> ap_ST_st9_fsm_8;
    static const sc_lv<4> ap_ST_st10_fsm_9;
    static const sc_lv<4> ap_ST_st11_fsm_10;
    static const sc_lv<4> ap_ST_st12_fsm_11;
    static const sc_lv<4> ap_ST_st13_fsm_12;
    static const sc_lv<4> ap_ST_st14_fsm_13;
    static const sc_lv<4> ap_ST_st15_fsm_14;
    static const sc_lv<4> ap_ST_st16_fsm_15;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_bdd_195();
    void thread_ap_sig_bdd_60();
    void thread_ap_sig_bdd_75();
    void thread_cmdOut_V();
    void thread_currentPriority_V();
    void thread_empty_read_read_fu_104_p2();
    void thread_fullOut();
    void thread_full_read_read_fu_98_p2();
    void thread_grp_load_fu_274_p1();
    void thread_grp_load_fu_285_p1();
    void thread_i_1_fu_338_p2();
    void thread_i_fu_302_p2();
    void thread_i_s_fu_332_p2();
    void thread_last_1_fu_298_p1();
    void thread_p_result_s_fu_364_p2();
    void thread_priorityOut_V();
    void thread_random_priorities_address0();
    void thread_random_priorities_ce0();
    void thread_result_1_s_fu_326_p2();
    void thread_result_3_reg2mem_phi_fu_257_p4();
    void thread_rev_fu_358_p2();
    void thread_tmp_1_fu_349_p1();
    void thread_tmp_3_fu_321_p2();
    void thread_tmp_fu_308_p1();
    void thread_tmp_s_fu_344_p1();
    void thread_ult_fu_354_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
