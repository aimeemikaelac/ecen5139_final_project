// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "runQueue.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic runQueue::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic runQueue::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> runQueue::ap_ST_st1_fsm_0 = "00000";
const sc_lv<5> runQueue::ap_ST_st2_fsm_1 = "1";
const sc_lv<5> runQueue::ap_ST_st3_fsm_2 = "10";
const sc_lv<5> runQueue::ap_ST_st4_fsm_3 = "11";
const sc_lv<5> runQueue::ap_ST_st5_fsm_4 = "100";
const sc_lv<5> runQueue::ap_ST_st6_fsm_5 = "101";
const sc_lv<5> runQueue::ap_ST_st7_fsm_6 = "110";
const sc_lv<5> runQueue::ap_ST_st8_fsm_7 = "111";
const sc_lv<5> runQueue::ap_ST_st9_fsm_8 = "1000";
const sc_lv<5> runQueue::ap_ST_st10_fsm_9 = "1001";
const sc_lv<5> runQueue::ap_ST_st11_fsm_10 = "1010";
const sc_lv<5> runQueue::ap_ST_st12_fsm_11 = "1011";
const sc_lv<5> runQueue::ap_ST_st13_fsm_12 = "1100";
const sc_lv<5> runQueue::ap_ST_st14_fsm_13 = "1101";
const sc_lv<5> runQueue::ap_ST_st15_fsm_14 = "1110";
const sc_lv<5> runQueue::ap_ST_st16_fsm_15 = "1111";
const sc_lv<5> runQueue::ap_ST_st17_fsm_16 = "10000";
const sc_lv<5> runQueue::ap_ST_st18_fsm_17 = "10001";
const sc_lv<5> runQueue::ap_ST_st19_fsm_18 = "10010";
const sc_lv<5> runQueue::ap_ST_st20_fsm_19 = "10011";
const int runQueue::C_DATA_WIDTH = "100000";
const sc_lv<1> runQueue::ap_const_lv1_0 = "0";
const sc_lv<32> runQueue::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> runQueue::ap_const_lv1_1 = "1";
const sc_lv<14> runQueue::ap_const_lv14_1 = "1";
const sc_lv<32> runQueue::ap_const_lv32_1 = "1";
const sc_lv<4> runQueue::ap_const_lv4_5 = "101";
const sc_lv<4> runQueue::ap_const_lv4_0 = "0000";
const sc_lv<2> runQueue::ap_const_lv2_1 = "1";
const sc_lv<2> runQueue::ap_const_lv2_0 = "00";
const sc_lv<2> runQueue::ap_const_lv2_2 = "10";
const sc_lv<14> runQueue::ap_const_lv14_2710 = "10011100010000";

runQueue::runQueue(sc_module_name name) : sc_module(name), mVcdFile(0) {
    random_priorities_U = new runQueue_random_priorities("random_priorities_U");
    random_priorities_U->clk(ap_clk);
    random_priorities_U->reset(ap_rst_n);
    random_priorities_U->address0(random_priorities_address0);
    random_priorities_U->ce0(random_priorities_ce0);
    random_priorities_U->q0(random_priorities_q0);
    runQueue_AXILiteS_s_axi_U = new runQueue_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("runQueue_AXILiteS_s_axi_U");
    runQueue_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    runQueue_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    runQueue_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    runQueue_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    runQueue_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    runQueue_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    runQueue_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    runQueue_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    runQueue_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    runQueue_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    runQueue_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    runQueue_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    runQueue_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    runQueue_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    runQueue_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    runQueue_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    runQueue_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    runQueue_AXILiteS_s_axi_U->ACLK(ap_clk);
    runQueue_AXILiteS_s_axi_U->ARESETN(ap_rst_n);
    runQueue_AXILiteS_s_axi_U->currentPriority_V(currentPriority_V);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond3_fu_489_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond3_fu_489_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm );
    sensitive << ( result_3_reg2mem_reg_298 );
    sensitive << ( exitcond3_fu_489_p2 );

    SC_METHOD(thread_ap_sig_bdd_104);
    sensitive << ( ap_CS_fsm );
    sensitive << ( localEmpty_load_reg_535 );

    SC_METHOD(thread_ap_sig_bdd_231);
    sensitive << ( ap_CS_fsm );
    sensitive << ( localFull_load_reg_524 );

    SC_METHOD(thread_cmdOut_V);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_fu_380_p1 );
    sensitive << ( localFull_load_reg_524 );
    sensitive << ( grp_load_fu_391_p1 );
    sensitive << ( localEmpty_load_reg_535 );
    sensitive << ( localFull_load_3_reg_558 );
    sensitive << ( cmdOut_V_preg );

    SC_METHOD(thread_currentPriority_V);
    sensitive << ( ap_CS_fsm );
    sensitive << ( priorityIn_V );
    sensitive << ( localEmpty_load_reg_535 );
    sensitive << ( localFull_load_3_reg_558 );
    sensitive << ( tmp_6_reg2mem_reg_276 );
    sensitive << ( tmp_reg2mem_reg_362 );
    sensitive << ( currentPriority_V_preg );

    SC_METHOD(thread_exitcond3_fu_489_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( j_1_reg2mem_1_reg_209 );

    SC_METHOD(thread_fullOut);
    sensitive << ( ap_CS_fsm );
    sensitive << ( full );
    sensitive << ( fullOut_preg );

    SC_METHOD(thread_grp_load_fu_380_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( localFull_load_reg_524 );
    sensitive << ( localFull_load_3_reg_558 );
    sensitive << ( localFull_fu_86 );

    SC_METHOD(thread_grp_load_fu_391_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( localEmpty_load_reg_535 );
    sensitive << ( localEmpty_fu_90 );

    SC_METHOD(thread_grp_read_fu_121_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( empty );
    sensitive << ( grp_load_fu_380_p1 );
    sensitive << ( localFull_load_3_reg_558 );

    SC_METHOD(thread_grp_read_fu_98_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( full );
    sensitive << ( grp_load_fu_391_p1 );
    sensitive << ( localEmpty_load_reg_535 );
    sensitive << ( exitcond3_fu_489_p2 );

    SC_METHOD(thread_i_1_fu_425_p2);
    sensitive << ( i_3_reg2mem_reg_265 );

    SC_METHOD(thread_i_fu_501_p2);
    sensitive << ( i_reg2mem_reg_351 );

    SC_METHOD(thread_i_s_fu_419_p2);
    sensitive << ( i_1_reg2mem_reg_241 );

    SC_METHOD(thread_j_s_fu_495_p2);
    sensitive << ( j_1_reg2mem_1_reg_209 );

    SC_METHOD(thread_last_2_fu_463_p1);
    sensitive << ( priorityIn_V );

    SC_METHOD(thread_p_result_1_fu_483_p2);
    sensitive << ( p_result_3_reg2mem_reg_288 );
    sensitive << ( rev_fu_477_p2 );

    SC_METHOD(thread_p_result_s_fu_457_p2);
    sensitive << ( result_1_reg2mem_1_reg_254 );
    sensitive << ( rev1_fu_451_p2 );

    SC_METHOD(thread_priorityOut_V);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_fu_380_p1 );
    sensitive << ( localFull_load_reg_524 );
    sensitive << ( tmp_1_fu_436_p1 );
    sensitive << ( tmp_fu_507_p1 );
    sensitive << ( priorityOut_V_preg );

    SC_METHOD(thread_random_priorities_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_fu_431_p1 );

    SC_METHOD(thread_random_priorities_ce0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_result_1_s_fu_414_p2);
    sensitive << ( tmp_3_reg_539 );
    sensitive << ( result_1_reg2mem_reg_231 );

    SC_METHOD(thread_rev1_fu_451_p2);
    sensitive << ( ult_fu_445_p2 );

    SC_METHOD(thread_rev_fu_477_p2);
    sensitive << ( ult1_fu_472_p2 );

    SC_METHOD(thread_tmp_1_cast_fu_441_p1);
    sensitive << ( priorityIn_V );

    SC_METHOD(thread_tmp_1_fu_436_p1);
    sensitive << ( random_priorities_q0 );

    SC_METHOD(thread_tmp_2_fu_404_p1);
    sensitive << ( priorityIn_V );

    SC_METHOD(thread_tmp_3_fu_408_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( op2_assign_reg2mem_reg_220 );
    sensitive << ( tmp_2_fu_404_p1 );

    SC_METHOD(thread_tmp_fu_507_p1);
    sensitive << ( i_reg2mem_reg_351 );

    SC_METHOD(thread_tmp_s_fu_431_p1);
    sensitive << ( i_3_reg2mem_reg_265 );

    SC_METHOD(thread_ult1_fu_472_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( priorityIn_V );
    sensitive << ( priorityIn_V_read_4_reg_588 );

    SC_METHOD(thread_ult_fu_445_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_394 );
    sensitive << ( grp_load_fu_391_p1 );
    sensitive << ( tmp_1_cast_fu_441_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_load_fu_380_p1 );
    sensitive << ( localFull_load_reg_524 );
    sensitive << ( grp_load_fu_391_p1 );
    sensitive << ( localEmpty_load_reg_535 );
    sensitive << ( localFull_load_3_reg_558 );
    sensitive << ( exitcond3_fu_489_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000";
    cmdOut_V_preg = "00";
    priorityOut_V_preg = "0000";
    currentPriority_V_preg = "0000";
    fullOut_preg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "runQueue_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, priorityOut_V, "(port)priorityOut_V");
    sc_trace(mVcdFile, priorityIn_V, "(port)priorityIn_V");
    sc_trace(mVcdFile, cmdOut_V, "(port)cmdOut_V");
    sc_trace(mVcdFile, empty, "(port)empty");
    sc_trace(mVcdFile, full, "(port)full");
    sc_trace(mVcdFile, fullOut, "(port)fullOut");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, currentPriority_V, "currentPriority_V");
    sc_trace(mVcdFile, random_priorities_address0, "random_priorities_address0");
    sc_trace(mVcdFile, random_priorities_ce0, "random_priorities_ce0");
    sc_trace(mVcdFile, random_priorities_q0, "random_priorities_q0");
    sc_trace(mVcdFile, reg_394, "reg_394");
    sc_trace(mVcdFile, grp_load_fu_380_p1, "grp_load_fu_380_p1");
    sc_trace(mVcdFile, localFull_load_reg_524, "localFull_load_reg_524");
    sc_trace(mVcdFile, grp_load_fu_391_p1, "grp_load_fu_391_p1");
    sc_trace(mVcdFile, localEmpty_load_reg_535, "localEmpty_load_reg_535");
    sc_trace(mVcdFile, tmp_3_fu_408_p2, "tmp_3_fu_408_p2");
    sc_trace(mVcdFile, tmp_3_reg_539, "tmp_3_reg_539");
    sc_trace(mVcdFile, result_1_s_fu_414_p2, "result_1_s_fu_414_p2");
    sc_trace(mVcdFile, i_s_fu_419_p2, "i_s_fu_419_p2");
    sc_trace(mVcdFile, localFull_load_3_reg_558, "localFull_load_3_reg_558");
    sc_trace(mVcdFile, i_1_fu_425_p2, "i_1_fu_425_p2");
    sc_trace(mVcdFile, i_1_reg_565, "i_1_reg_565");
    sc_trace(mVcdFile, tmp_1_fu_436_p1, "tmp_1_fu_436_p1");
    sc_trace(mVcdFile, p_result_s_fu_457_p2, "p_result_s_fu_457_p2");
    sc_trace(mVcdFile, priorityIn_V_read_4_reg_588, "priorityIn_V_read_4_reg_588");
    sc_trace(mVcdFile, p_result_1_fu_483_p2, "p_result_1_fu_483_p2");
    sc_trace(mVcdFile, j_s_fu_495_p2, "j_s_fu_495_p2");
    sc_trace(mVcdFile, j_s_reg_604, "j_s_reg_604");
    sc_trace(mVcdFile, i_fu_501_p2, "i_fu_501_p2");
    sc_trace(mVcdFile, tmp_fu_507_p1, "tmp_fu_507_p1");
    sc_trace(mVcdFile, last_1_reg_163, "last_1_reg_163");
    sc_trace(mVcdFile, last_reg2mem_0_ph_reg_311, "last_reg2mem_0_ph_reg_311");
    sc_trace(mVcdFile, result_reg2mem_1_ph_reg_174, "result_reg2mem_1_ph_reg_174");
    sc_trace(mVcdFile, result_reg2mem_0_ph_reg_324, "result_reg2mem_0_ph_reg_324");
    sc_trace(mVcdFile, j_1_reg2mem_1_ph_reg_186, "j_1_reg2mem_1_ph_reg_186");
    sc_trace(mVcdFile, j_1_reg2mem_0_ph_reg_338, "j_1_reg2mem_0_ph_reg_338");
    sc_trace(mVcdFile, result_3_reg2mem_reg_298, "result_3_reg2mem_reg_298");
    sc_trace(mVcdFile, result_reg2mem_1_reg_198, "result_reg2mem_1_reg_198");
    sc_trace(mVcdFile, j_1_reg2mem_1_reg_209, "j_1_reg2mem_1_reg_209");
    sc_trace(mVcdFile, op2_assign_reg2mem_reg_220, "op2_assign_reg2mem_reg_220");
    sc_trace(mVcdFile, result_1_reg2mem_reg_231, "result_1_reg2mem_reg_231");
    sc_trace(mVcdFile, i_1_reg2mem_reg_241, "i_1_reg2mem_reg_241");
    sc_trace(mVcdFile, result_1_reg2mem_1_reg_254, "result_1_reg2mem_1_reg_254");
    sc_trace(mVcdFile, i_3_reg2mem_reg_265, "i_3_reg2mem_reg_265");
    sc_trace(mVcdFile, tmp_6_reg2mem_reg_276, "tmp_6_reg2mem_reg_276");
    sc_trace(mVcdFile, p_result_3_reg2mem_reg_288, "p_result_3_reg2mem_reg_288");
    sc_trace(mVcdFile, i_reg2mem_reg_351, "i_reg2mem_reg_351");
    sc_trace(mVcdFile, tmp_reg2mem_reg_362, "tmp_reg2mem_reg_362");
    sc_trace(mVcdFile, tmp_s_fu_431_p1, "tmp_s_fu_431_p1");
    sc_trace(mVcdFile, localFull_fu_86, "localFull_fu_86");
    sc_trace(mVcdFile, grp_read_fu_98_p2, "grp_read_fu_98_p2");
    sc_trace(mVcdFile, exitcond3_fu_489_p2, "exitcond3_fu_489_p2");
    sc_trace(mVcdFile, localEmpty_fu_90, "localEmpty_fu_90");
    sc_trace(mVcdFile, grp_read_fu_121_p2, "grp_read_fu_121_p2");
    sc_trace(mVcdFile, last_fu_94, "last_fu_94");
    sc_trace(mVcdFile, last_2_fu_463_p1, "last_2_fu_463_p1");
    sc_trace(mVcdFile, cmdOut_V_preg, "cmdOut_V_preg");
    sc_trace(mVcdFile, priorityOut_V_preg, "priorityOut_V_preg");
    sc_trace(mVcdFile, currentPriority_V_preg, "currentPriority_V_preg");
    sc_trace(mVcdFile, fullOut_preg, "fullOut_preg");
    sc_trace(mVcdFile, tmp_2_fu_404_p1, "tmp_2_fu_404_p1");
    sc_trace(mVcdFile, tmp_1_cast_fu_441_p1, "tmp_1_cast_fu_441_p1");
    sc_trace(mVcdFile, ult_fu_445_p2, "ult_fu_445_p2");
    sc_trace(mVcdFile, rev1_fu_451_p2, "rev1_fu_451_p2");
    sc_trace(mVcdFile, ult1_fu_472_p2, "ult1_fu_472_p2");
    sc_trace(mVcdFile, rev_fu_477_p2, "rev_fu_477_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_bdd_104, "ap_sig_bdd_104");
    sc_trace(mVcdFile, ap_sig_bdd_231, "ap_sig_bdd_231");
#endif

    }
    mHdltvinHandle.open("runQueue.hdltvin.dat");
    mHdltvoutHandle.open("runQueue.hdltvout.dat");
}

runQueue::~runQueue() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete random_priorities_U;
    delete runQueue_AXILiteS_s_axi_U;
}

void runQueue::thread_ap_clk_no_reset_() {
    if ( ap_rst_n.read() == ap_const_logic_0) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n.read() == ap_const_logic_0) {
        cmdOut_V_preg = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()) && 
              esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)) || 
             esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
             (esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
              esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)) || 
             (esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) && 
              esl_seteq<1,1,1>(localEmpty_load_reg_535.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)))) {
            cmdOut_V_preg = ap_const_lv2_2;
        } else if ((esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                    (esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) && 
                     (!esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0) || 
                      !esl_seteq<1,1,1>(localEmpty_load_reg_535.read(), ap_const_lv1_0))) || 
                    esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                    (esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
                     (!esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) || 
                      !esl_seteq<1,1,1>(ap_const_lv1_0, localFull_load_3_reg_558.read()))))) {
            cmdOut_V_preg = ap_const_lv2_0;
        } else if ((esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
                    (esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) && 
                     esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) || 
                    (esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) && 
                     esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)) || 
                    (esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) && 
                     esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
                     !esl_seteq<1,1,1>(localFull_load_reg_524.read(), ap_const_lv1_0)) || 
                    (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                     esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)))) {
            cmdOut_V_preg = ap_const_lv2_1;
        }
    }
    if ( ap_rst_n.read() == ap_const_logic_0) {
        currentPriority_V_preg = ap_const_lv4_0;
    } else {
        if (esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
            currentPriority_V_preg = tmp_reg2mem_reg_362.read();
        } else if ((esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, localFull_load_3_reg_558.read()))) {
            currentPriority_V_preg = tmp_6_reg2mem_reg_276.read();
        } else if (((esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) && 
                     esl_seteq<1,1,1>(localEmpty_load_reg_535.read(), ap_const_lv1_0)) || 
                    esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()))) {
            currentPriority_V_preg = priorityIn_V.read();
        }
    }
    if ( ap_rst_n.read() == ap_const_logic_0) {
        fullOut_preg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read())) {
            fullOut_preg =  (sc_logic) (grp_read_fu_98_p2.read()[0]);
        }
    }
    if (esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)) {
        if (ap_sig_bdd_104.read()) {
            i_1_reg2mem_reg_241 = i_s_fu_419_p2.read();
        } else if (esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
            i_1_reg2mem_reg_241 = ap_const_lv32_1;
        }
    }
    if (esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read())) {
        i_3_reg2mem_reg_265 = i_1_reg_565.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0))) {
        i_3_reg2mem_reg_265 = ap_const_lv32_1;
    }
    if ((esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
         (esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) || 
          esl_seteq<1,1,1>(localFull_load_reg_524.read(), ap_const_lv1_0)))) {
        i_reg2mem_reg_351 = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) && 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()))) {
        i_reg2mem_reg_351 = i_fu_501_p2.read();
    }
    if (esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
            j_1_reg2mem_0_ph_reg_338 = ap_const_lv14_1;
        } else if (ap_sig_bdd_231.read()) {
            j_1_reg2mem_0_ph_reg_338 = j_s_reg_604.read();
        }
    }
    if (!esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
            j_1_reg2mem_1_ph_reg_186 = j_1_reg2mem_0_ph_reg_338.read();
        } else if (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
            j_1_reg2mem_1_ph_reg_186 = ap_const_lv14_1;
        }
    }
    if (esl_seteq<1,5,5>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        j_1_reg2mem_1_reg_209 = j_1_reg2mem_1_ph_reg_186.read();
    } else if ((!esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) && 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(localFull_load_reg_524.read(), ap_const_lv1_0))) {
        j_1_reg2mem_1_reg_209 = j_s_reg_604.read();
    }
    if (!esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
            last_1_reg_163 = last_reg2mem_0_ph_reg_311.read();
        } else if (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
            last_1_reg_163 = ap_const_lv32_0;
        }
    }
    if ((esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0))) {
        last_fu_94 = last_2_fu_463_p1.read();
    } else if (esl_seteq<1,5,5>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        last_fu_94 = last_1_reg_163.read();
    }
    if (esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
            last_reg2mem_0_ph_reg_311 = ap_const_lv32_0;
        } else if (ap_sig_bdd_231.read()) {
            last_reg2mem_0_ph_reg_311 = reg_394.read();
        }
    }
    if (esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)) {
        if (ap_sig_bdd_104.read()) {
            op2_assign_reg2mem_reg_220 = i_1_reg2mem_reg_241.read();
        } else if (esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
            op2_assign_reg2mem_reg_220 = ap_const_lv32_0;
        }
    }
    if (esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read())) {
        p_result_3_reg2mem_reg_288 = p_result_1_fu_483_p2.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0))) {
        p_result_3_reg2mem_reg_288 = p_result_s_fu_457_p2.read();
    }
    if ( ap_rst_n.read() == ap_const_logic_0) {
        priorityOut_V_preg = ap_const_lv4_0;
    } else {
        if ((esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) && 
             esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()))) {
            priorityOut_V_preg = tmp_fu_507_p1.read();
        } else if (esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read())) {
            priorityOut_V_preg = tmp_1_fu_436_p1.read();
        } else if ((esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) && 
                    esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0))) {
            priorityOut_V_preg = ap_const_lv4_5;
        } else if (((esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) && 
                     esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
                     !esl_seteq<1,1,1>(localFull_load_reg_524.read(), ap_const_lv1_0)) || 
                    (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                     esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)))) {
            priorityOut_V_preg = ap_const_lv4_0;
        }
    }
    if (!esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)) {
        if (ap_sig_bdd_104.read()) {
            result_1_reg2mem_1_reg_254 = result_1_s_fu_414_p2.read();
        } else if (esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
            result_1_reg2mem_1_reg_254 = result_reg2mem_1_reg_198.read();
        }
    }
    if (esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)) {
        if (ap_sig_bdd_104.read()) {
            result_1_reg2mem_reg_231 = result_1_s_fu_414_p2.read();
        } else if (esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
            result_1_reg2mem_reg_231 = result_reg2mem_1_reg_198.read();
        }
    }
    if (!esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read())) {
            result_3_reg2mem_reg_298 = p_result_3_reg2mem_reg_288.read();
        } else if (esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read())) {
            result_3_reg2mem_reg_298 = result_1_reg2mem_1_reg_254.read();
        }
    }
    if (esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
            result_reg2mem_0_ph_reg_324 = ap_const_lv1_1;
        } else if (ap_sig_bdd_231.read()) {
            result_reg2mem_0_ph_reg_324 = result_3_reg2mem_reg_298.read();
        }
    }
    if (!esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
            result_reg2mem_1_ph_reg_174 = result_reg2mem_0_ph_reg_324.read();
        } else if (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
            result_reg2mem_1_ph_reg_174 = ap_const_lv1_1;
        }
    }
    if (esl_seteq<1,5,5>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        result_reg2mem_1_reg_198 = result_reg2mem_1_ph_reg_174.read();
    } else if ((!esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) && 
                esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(localFull_load_reg_524.read(), ap_const_lv1_0))) {
        result_reg2mem_1_reg_198 = result_3_reg2mem_reg_298.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read())) {
        tmp_6_reg2mem_reg_276 = tmp_1_fu_436_p1.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0))) {
        tmp_6_reg2mem_reg_276 = ap_const_lv4_5;
    }
    if ((esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
         (esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) || 
          esl_seteq<1,1,1>(localFull_load_reg_524.read(), ap_const_lv1_0)))) {
        tmp_reg2mem_reg_362 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) && 
                esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()))) {
        tmp_reg2mem_reg_362 = tmp_fu_507_p1.read();
    }
    if ((esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, localFull_load_3_reg_558.read()))) {
        i_1_reg_565 = i_1_fu_425_p2.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read())) {
        j_s_reg_604 = j_s_fu_495_p2.read();
    }
    if ((esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || (esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
  (!esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) || 
   !esl_seteq<1,1,1>(ap_const_lv1_0, localFull_load_3_reg_558.read()))) || esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()))) {
        localEmpty_fu_90 = grp_read_fu_121_p2.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
        localEmpty_load_reg_535 = localEmpty_fu_90.read();
    }
    if (((esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
  !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || (esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) && 
  (!esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0) || 
   !esl_seteq<1,1,1>(localEmpty_load_reg_535.read(), ap_const_lv1_0))) || esl_seteq<1,5,5>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || (esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_489_p2.read())) || esl_seteq<1,5,5>(ap_ST_st19_fsm_18, ap_CS_fsm.read()))) {
        localFull_fu_86 = grp_read_fu_98_p2.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        localFull_load_3_reg_558 = localFull_fu_86.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        localFull_load_reg_524 = localFull_fu_86.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read())) {
        priorityIn_V_read_4_reg_588 = priorityIn_V.read();
    }
    if ((esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()))) {
        reg_394 = last_fu_94.read();
    }
    if (esl_seteq<1,5,5>(ap_ST_st6_fsm_5, ap_CS_fsm.read())) {
        tmp_3_reg_539 = tmp_3_fu_408_p2.read();
    }
}

void runQueue::thread_ap_done() {
    if ((esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_489_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void runQueue::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void runQueue::thread_ap_ready() {
    if ((esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_489_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void runQueue::thread_ap_return() {
    ap_return = result_3_reg2mem_reg_298.read();
}

void runQueue::thread_ap_sig_bdd_104() {
    ap_sig_bdd_104 = (esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) && esl_seteq<1,1,1>(localEmpty_load_reg_535.read(), ap_const_lv1_0));
}

void runQueue::thread_ap_sig_bdd_231() {
    ap_sig_bdd_231 = (esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(localFull_load_reg_524.read(), ap_const_lv1_0));
}

void runQueue::thread_cmdOut_V() {
    if (((esl_seteq<1,5,5>(ap_ST_st12_fsm_11, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)) || 
         esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || 
         (esl_seteq<1,5,5>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(localEmpty_load_reg_535.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)))) {
        cmdOut_V = ap_const_lv2_2;
    } else if ((esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                (esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) && 
                 (!esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0) || 
                  !esl_seteq<1,1,1>(localEmpty_load_reg_535.read(), ap_const_lv1_0))) || 
                esl_seteq<1,5,5>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                (esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
                 (!esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) || 
                  !esl_seteq<1,1,1>(ap_const_lv1_0, localFull_load_3_reg_558.read()))))) {
        cmdOut_V = ap_const_lv2_0;
    } else if ((esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
                (esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) && 
                 esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) || 
                (esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)) || 
                (esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) && 
                 esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
                 !esl_seteq<1,1,1>(localFull_load_reg_524.read(), ap_const_lv1_0)) || 
                (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)))) {
        cmdOut_V = ap_const_lv2_1;
    } else {
        cmdOut_V = cmdOut_V_preg.read();
    }
}

void runQueue::thread_currentPriority_V() {
    if (esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
        currentPriority_V = tmp_reg2mem_reg_362.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, localFull_load_3_reg_558.read()))) {
        currentPriority_V = tmp_6_reg2mem_reg_276.read();
    } else if (((esl_seteq<1,5,5>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(localEmpty_load_reg_535.read(), ap_const_lv1_0)) || 
                esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()))) {
        currentPriority_V = priorityIn_V.read();
    } else {
        currentPriority_V = currentPriority_V_preg.read();
    }
}

void runQueue::thread_exitcond3_fu_489_p2() {
    exitcond3_fu_489_p2 = (!j_1_reg2mem_1_reg_209.read().is_01() || !ap_const_lv14_2710.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg2mem_1_reg_209.read() == ap_const_lv14_2710);
}

void runQueue::thread_fullOut() {
    if (esl_seteq<1,5,5>(ap_ST_st18_fsm_17, ap_CS_fsm.read())) {
        fullOut = full.read();
    } else {
        fullOut = fullOut_preg.read();
    }
}

void runQueue::thread_grp_load_fu_380_p1() {
    grp_load_fu_380_p1 = localFull_fu_86.read();
}

void runQueue::thread_grp_load_fu_391_p1() {
    grp_load_fu_391_p1 = localEmpty_fu_90.read();
}

void runQueue::thread_grp_read_fu_121_p2() {
    grp_read_fu_121_p2 =  (sc_lv<1>) (empty.read());
}

void runQueue::thread_grp_read_fu_98_p2() {
    grp_read_fu_98_p2 =  (sc_lv<1>) (full.read());
}

void runQueue::thread_i_1_fu_425_p2() {
    i_1_fu_425_p2 = (!i_3_reg2mem_reg_265.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(i_3_reg2mem_reg_265.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void runQueue::thread_i_fu_501_p2() {
    i_fu_501_p2 = (!i_reg2mem_reg_351.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(i_reg2mem_reg_351.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void runQueue::thread_i_s_fu_419_p2() {
    i_s_fu_419_p2 = (!i_1_reg2mem_reg_241.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(i_1_reg2mem_reg_241.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void runQueue::thread_j_s_fu_495_p2() {
    j_s_fu_495_p2 = (!j_1_reg2mem_1_reg_209.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_bigint<14>(j_1_reg2mem_1_reg_209.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void runQueue::thread_last_2_fu_463_p1() {
    last_2_fu_463_p1 = esl_zext<32,4>(priorityIn_V.read());
}

void runQueue::thread_p_result_1_fu_483_p2() {
    p_result_1_fu_483_p2 = (rev_fu_477_p2.read() & p_result_3_reg2mem_reg_288.read());
}

void runQueue::thread_p_result_s_fu_457_p2() {
    p_result_s_fu_457_p2 = (rev1_fu_451_p2.read() & result_1_reg2mem_1_reg_254.read());
}

void runQueue::thread_priorityOut_V() {
    if ((esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) && 
         esl_seteq<1,5,5>(ap_ST_st20_fsm_19, ap_CS_fsm.read()))) {
        priorityOut_V = tmp_fu_507_p1.read();
    } else if (esl_seteq<1,5,5>(ap_ST_st11_fsm_10, ap_CS_fsm.read())) {
        priorityOut_V = tmp_1_fu_436_p1.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0))) {
        priorityOut_V = ap_const_lv4_5;
    } else if (((esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) && 
                 esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
                 !esl_seteq<1,1,1>(localFull_load_reg_524.read(), ap_const_lv1_0)) || 
                (esl_seteq<1,5,5>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)))) {
        priorityOut_V = ap_const_lv4_0;
    } else {
        priorityOut_V = priorityOut_V_preg.read();
    }
}

void runQueue::thread_random_priorities_address0() {
    random_priorities_address0 =  (sc_lv<8>) (tmp_s_fu_431_p1.read());
}

void runQueue::thread_random_priorities_ce0() {
    if (esl_seteq<1,5,5>(ap_ST_st10_fsm_9, ap_CS_fsm.read())) {
        random_priorities_ce0 = ap_const_logic_1;
    } else {
        random_priorities_ce0 = ap_const_logic_0;
    }
}

void runQueue::thread_result_1_s_fu_414_p2() {
    result_1_s_fu_414_p2 = (tmp_3_reg_539.read() & result_1_reg2mem_reg_231.read());
}

void runQueue::thread_rev1_fu_451_p2() {
    rev1_fu_451_p2 = (ult_fu_445_p2.read() ^ ap_const_lv1_1);
}

void runQueue::thread_rev_fu_477_p2() {
    rev_fu_477_p2 = (ult1_fu_472_p2.read() ^ ap_const_lv1_1);
}

void runQueue::thread_tmp_1_cast_fu_441_p1() {
    tmp_1_cast_fu_441_p1 = esl_zext<32,4>(priorityIn_V.read());
}

void runQueue::thread_tmp_1_fu_436_p1() {
    tmp_1_fu_436_p1 = random_priorities_q0.read().range(4-1, 0);
}

void runQueue::thread_tmp_2_fu_404_p1() {
    tmp_2_fu_404_p1 = esl_zext<32,4>(priorityIn_V.read());
}

void runQueue::thread_tmp_3_fu_408_p2() {
    tmp_3_fu_408_p2 = (!tmp_2_fu_404_p1.read().is_01() || !op2_assign_reg2mem_reg_220.read().is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_404_p1.read() == op2_assign_reg2mem_reg_220.read());
}

void runQueue::thread_tmp_fu_507_p1() {
    tmp_fu_507_p1 = i_reg2mem_reg_351.read().range(4-1, 0);
}

void runQueue::thread_tmp_s_fu_431_p1() {
    tmp_s_fu_431_p1 = esl_sext<64,32>(i_3_reg2mem_reg_265.read());
}

void runQueue::thread_ult1_fu_472_p2() {
    ult1_fu_472_p2 = (!priorityIn_V.read().is_01() || !priorityIn_V_read_4_reg_588.read().is_01())? sc_lv<1>(): (sc_biguint<4>(priorityIn_V.read()) < sc_biguint<4>(priorityIn_V_read_4_reg_588.read()));
}

void runQueue::thread_ult_fu_445_p2() {
    ult_fu_445_p2 = (!tmp_1_cast_fu_441_p1.read().is_01() || !reg_394.read().is_01())? sc_lv<1>(): (sc_biguint<32>(tmp_1_cast_fu_441_p1.read()) < sc_biguint<32>(reg_394.read()));
}

void runQueue::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            if (esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st17_fsm_16;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 6 : 
            if ((esl_seteq<1,1,1>(localEmpty_load_reg_535.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            }
            break;
        case 7 : 
            if (esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            } else {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 9 : 
            if ((!esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) || !esl_seteq<1,1,1>(ap_const_lv1_0, localFull_load_3_reg_558.read()))) {
                ap_NS_fsm = ap_ST_st12_fsm_11;
            } else {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            }
            break;
        case 10 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 11 : 
            if (esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st13_fsm_12;
            } else {
                ap_NS_fsm = ap_ST_st16_fsm_15;
            }
            break;
        case 12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 13 : 
            if (!esl_seteq<1,1,1>(grp_load_fu_391_p1.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st16_fsm_15;
            } else {
                ap_NS_fsm = ap_ST_st15_fsm_14;
            }
            break;
        case 14 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 15 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_489_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st17_fsm_16;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0) || esl_seteq<1,1,1>(localFull_load_reg_524.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st18_fsm_17;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 18 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 19 : 
            if (esl_seteq<1,1,1>(grp_load_fu_380_p1.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st18_fsm_17;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}
void runQueue::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"priorityOut_V\" :  \"" << priorityOut_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"priorityIn_V\" :  \"" << priorityIn_V.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cmdOut_V\" :  \"" << cmdOut_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"empty\" :  \"" << empty.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"full\" :  \"" << full.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fullOut\" :  \"" << fullOut.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

