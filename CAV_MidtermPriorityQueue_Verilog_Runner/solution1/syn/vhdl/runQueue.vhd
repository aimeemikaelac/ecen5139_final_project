-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.1
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity runQueue is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    priorityOut_V : OUT STD_LOGIC_VECTOR (3 downto 0);
    priorityIn_V : IN STD_LOGIC_VECTOR (3 downto 0);
    cmdOut_V : OUT STD_LOGIC_VECTOR (1 downto 0);
    empty : IN STD_LOGIC;
    full : IN STD_LOGIC;
    currentPriority_V : OUT STD_LOGIC_VECTOR (3 downto 0);
    fullOut : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of runQueue is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "runQueue,hls_ip_2014_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.258000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal random_priorities_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal random_priorities_ce0 : STD_LOGIC;
    signal random_priorities_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal last_1_fu_298_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal last_1_reg_403 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_274_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal localFull_load_reg_410 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_308_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal last_load_reg_434 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_fu_285_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal localEmpty_load_reg_439 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_1_s_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_s_fu_332_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal localFull_load_2_reg_457 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_338_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_464 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_349_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal localEmpty_load_2_reg_479 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_result_s_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_result_s_reg_483 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg2mem_reg_161 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg2mem_reg_172 : STD_LOGIC_VECTOR (3 downto 0);
    signal op2_assign_reg2mem_reg_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_1_reg2mem_reg_195 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_reg2mem_reg_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_1_reg2mem_1_reg_219 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_reg2mem_reg_231 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg2mem_reg_242 : STD_LOGIC_VECTOR (3 downto 0);
    signal result_3_reg2mem_phi_fu_257_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_3_reg2mem_reg_254 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_3_reg2mem_reg_231_temp: signed (32-1 downto 0);
    signal empty_assign_fu_78 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_read_read_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal full_assign_fu_82 : STD_LOGIC_VECTOR (0 downto 0);
    signal full_read_read_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal localFull_fu_86 : STD_LOGIC_VECTOR (0 downto 0);
    signal localEmpty_fu_90 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal cmdOut_V_preg : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal priorityOut_V_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal fullOut_preg : STD_LOGIC := '0';
    signal currentPriority_V_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal tmp_3_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_bdd_75 : BOOLEAN;
    signal ap_sig_bdd_60 : BOOLEAN;
    signal ap_sig_bdd_195 : BOOLEAN;

    component runQueue_random_priorities IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;



begin
    random_priorities_U : component runQueue_random_priorities
    generic map (
        DataWidth => 9,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => random_priorities_address0,
        ce0 => random_priorities_ce0,
        q0 => random_priorities_q0);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- cmdOut_V_preg assign process. --
    cmdOut_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                cmdOut_V_preg <= ap_const_lv2_0;
            else
                if ((((ap_ST_st14_fsm_13 = ap_CS_fsm) and (ap_const_lv1_0 = grp_load_fu_285_p1)) or ((ap_ST_st7_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = grp_load_fu_285_p1)) or ((ap_ST_st9_fsm_8 = ap_CS_fsm) and (ap_const_lv1_0 = localEmpty_load_reg_439) and (ap_const_lv1_0 = grp_load_fu_285_p1)) or ((ap_const_lv1_0 = grp_load_fu_285_p1) and (ap_ST_st16_fsm_15 = ap_CS_fsm) and (ap_const_lv1_0 = localEmpty_load_2_reg_479)))) then 
                    cmdOut_V_preg <= ap_const_lv2_2;
                elsif ((((ap_ST_st6_fsm_5 = ap_CS_fsm) and (not((localFull_load_reg_410 = ap_const_lv1_0)) or not((grp_load_fu_274_p1 = ap_const_lv1_0)))) or ((ap_ST_st12_fsm_11 = ap_CS_fsm) and (not((grp_load_fu_274_p1 = ap_const_lv1_0)) or not((ap_const_lv1_0 = localFull_load_2_reg_457)))) or ((ap_ST_st9_fsm_8 = ap_CS_fsm) and (not((ap_const_lv1_0 = grp_load_fu_285_p1)) or not((ap_const_lv1_0 = localEmpty_load_reg_439)))) or ((ap_ST_st16_fsm_15 = ap_CS_fsm) and (not((ap_const_lv1_0 = grp_load_fu_285_p1)) or not((ap_const_lv1_0 = localEmpty_load_2_reg_479)))))) then 
                    cmdOut_V_preg <= ap_const_lv2_0;
                elsif ((((ap_ST_st6_fsm_5 = ap_CS_fsm) and (localFull_load_reg_410 = ap_const_lv1_0) and (grp_load_fu_274_p1 = ap_const_lv1_0)) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or ((ap_ST_st3_fsm_2 = ap_CS_fsm) and (grp_load_fu_274_p1 = ap_const_lv1_0)) or ((grp_load_fu_274_p1 = ap_const_lv1_0) and (ap_ST_st10_fsm_9 = ap_CS_fsm)))) then 
                    cmdOut_V_preg <= ap_const_lv2_1;
                end if; 
            end if;
        end if;
    end process;


    -- currentPriority_V_preg assign process. --
    currentPriority_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                currentPriority_V_preg <= ap_const_lv4_0;
            else
                if (((ap_ST_st12_fsm_11 = ap_CS_fsm) and (ap_const_lv1_0 = localFull_load_2_reg_457))) then 
                    currentPriority_V_preg <= tmp_6_reg2mem_reg_242;
                elsif ((((ap_ST_st9_fsm_8 = ap_CS_fsm) and (ap_const_lv1_0 = localEmpty_load_reg_439)) or (ap_ST_st15_fsm_14 = ap_CS_fsm))) then 
                    currentPriority_V_preg <= priorityIn_V;
                elsif (((ap_ST_st6_fsm_5 = ap_CS_fsm) and (localFull_load_reg_410 = ap_const_lv1_0))) then 
                    currentPriority_V_preg <= tmp_reg2mem_reg_172;
                end if; 
            end if;
        end if;
    end process;


    -- fullOut_preg assign process. --
    fullOut_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                fullOut_preg <= ap_const_logic_0;
            else
                if ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then 
                    fullOut_preg <= full_assign_fu_82(0);
                end if; 
            end if;
        end if;
    end process;


    -- priorityOut_V_preg assign process. --
    priorityOut_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                priorityOut_V_preg <= ap_const_lv4_0;
            else
                if ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then 
                    priorityOut_V_preg <= tmp_1_fu_349_p1;
                elsif (((grp_load_fu_274_p1 = ap_const_lv1_0) and (ap_ST_st10_fsm_9 = ap_CS_fsm))) then 
                    priorityOut_V_preg <= ap_const_lv4_5;
                elsif (((ap_ST_st6_fsm_5 = ap_CS_fsm) and (localFull_load_reg_410 = ap_const_lv1_0) and (grp_load_fu_274_p1 = ap_const_lv1_0))) then 
                    priorityOut_V_preg <= tmp_fu_308_p1;
                elsif (((ap_ST_st3_fsm_2 = ap_CS_fsm) and (grp_load_fu_274_p1 = ap_const_lv1_0))) then 
                    priorityOut_V_preg <= ap_const_lv4_0;
                end if; 
            end if;
        end if;
    end process;


    -- i_1_reg2mem_reg_206 assign process. --
    i_1_reg2mem_reg_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = grp_load_fu_285_p1)) then
                if (ap_sig_bdd_75) then 
                    i_1_reg2mem_reg_206 <= i_s_fu_332_p2;
                elsif ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then 
                    i_1_reg2mem_reg_206 <= ap_const_lv32_1;
                end if;
            end if; 
        end if;
    end process;

    -- i_3_reg2mem_reg_231 assign process. --
    i_3_reg2mem_reg_231_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then 
                i_3_reg2mem_reg_231 <= i_1_reg_464;
            elsif (((grp_load_fu_274_p1 = ap_const_lv1_0) and (ap_ST_st10_fsm_9 = ap_CS_fsm))) then 
                i_3_reg2mem_reg_231 <= ap_const_lv32_1;
            end if; 
        end if;
    end process;

    -- i_reg2mem_reg_161 assign process. --
    i_reg2mem_reg_161_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((grp_load_fu_274_p1 = ap_const_lv1_0)) then
                if ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then 
                    i_reg2mem_reg_161 <= ap_const_lv32_1;
                elsif (ap_sig_bdd_60) then 
                    i_reg2mem_reg_161 <= i_fu_302_p2;
                end if;
            end if; 
        end if;
    end process;

    -- last_fu_94 assign process. --
    last_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = grp_load_fu_285_p1)) and (ap_ST_st16_fsm_15 = ap_CS_fsm) and (ap_const_lv1_0 = localEmpty_load_2_reg_479))) then 
                last_fu_94(0) <= last_1_reg_403(0);
                last_fu_94(1) <= last_1_reg_403(1);
                last_fu_94(2) <= last_1_reg_403(2);
                last_fu_94(3) <= last_1_reg_403(3);
            elsif (((ap_ST_st6_fsm_5 = ap_CS_fsm) and (not((localFull_load_reg_410 = ap_const_lv1_0)) or not((grp_load_fu_274_p1 = ap_const_lv1_0))))) then 
                last_fu_94(0) <= '0';
                last_fu_94(1) <= '0';
                last_fu_94(2) <= '0';
                last_fu_94(3) <= '0';
            end if; 
        end if;
    end process;

    -- op2_assign_reg2mem_reg_184 assign process. --
    op2_assign_reg2mem_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = grp_load_fu_285_p1)) then
                if (ap_sig_bdd_75) then 
                    op2_assign_reg2mem_reg_184 <= i_1_reg2mem_reg_206;
                elsif ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then 
                    op2_assign_reg2mem_reg_184 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    -- result_1_reg2mem_1_reg_219 assign process. --
    result_1_reg2mem_1_reg_219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((ap_const_lv1_0 = grp_load_fu_285_p1))) then
                if (ap_sig_bdd_75) then 
                    result_1_reg2mem_1_reg_219 <= result_1_s_fu_326_p2;
                elsif ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then 
                    result_1_reg2mem_1_reg_219 <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    -- result_1_reg2mem_reg_195 assign process. --
    result_1_reg2mem_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = grp_load_fu_285_p1)) then
                if (ap_sig_bdd_75) then 
                    result_1_reg2mem_reg_195 <= result_1_s_fu_326_p2;
                elsif ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then 
                    result_1_reg2mem_reg_195 <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    -- result_3_reg2mem_reg_254 assign process. --
    result_3_reg2mem_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((ap_const_lv1_0 = grp_load_fu_285_p1))) then
                if (ap_sig_bdd_195) then 
                    result_3_reg2mem_reg_254 <= p_result_s_reg_483;
                elsif ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then 
                    result_3_reg2mem_reg_254 <= result_1_reg2mem_1_reg_219;
                end if;
            end if; 
        end if;
    end process;

    -- tmp_6_reg2mem_reg_242 assign process. --
    tmp_6_reg2mem_reg_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then 
                tmp_6_reg2mem_reg_242 <= tmp_1_fu_349_p1;
            elsif (((grp_load_fu_274_p1 = ap_const_lv1_0) and (ap_ST_st10_fsm_9 = ap_CS_fsm))) then 
                tmp_6_reg2mem_reg_242 <= ap_const_lv4_5;
            end if; 
        end if;
    end process;

    -- tmp_reg2mem_reg_172 assign process. --
    tmp_reg2mem_reg_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((grp_load_fu_274_p1 = ap_const_lv1_0)) then
                if ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then 
                    tmp_reg2mem_reg_172 <= ap_const_lv4_0;
                elsif (ap_sig_bdd_60) then 
                    tmp_reg2mem_reg_172 <= tmp_fu_308_p1;
                end if;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then
                empty_assign_fu_78 <= empty_read_read_fu_104_p2;
                last_1_reg_403(0) <= last_1_fu_298_p1(0);
    last_1_reg_403(1) <= last_1_fu_298_p1(1);
    last_1_reg_403(2) <= last_1_fu_298_p1(2);
    last_1_reg_403(3) <= last_1_fu_298_p1(3);
                localFull_load_reg_410 <= localFull_fu_86;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then
                full_assign_fu_82 <= full_read_read_fu_98_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st12_fsm_11 = ap_CS_fsm) and (ap_const_lv1_0 = localFull_load_2_reg_457))) then
                i_1_reg_464 <= i_1_fu_338_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then
                last_load_reg_434(0) <= last_fu_94(0);
    last_load_reg_434(1) <= last_fu_94(1);
    last_load_reg_434(2) <= last_fu_94(2);
    last_load_reg_434(3) <= last_fu_94(3);
                localEmpty_load_reg_439 <= localEmpty_fu_90;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_ST_st6_fsm_5 = ap_CS_fsm) and (not((localFull_load_reg_410 = ap_const_lv1_0)) or not((grp_load_fu_274_p1 = ap_const_lv1_0)))) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or ((ap_ST_st12_fsm_11 = ap_CS_fsm) and (not((grp_load_fu_274_p1 = ap_const_lv1_0)) or not((ap_const_lv1_0 = localFull_load_2_reg_457)))) or (ap_ST_st15_fsm_14 = ap_CS_fsm))) then
                localEmpty_fu_90 <= empty_assign_fu_78;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then
                localEmpty_load_2_reg_479 <= localEmpty_fu_90;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or ((ap_ST_st9_fsm_8 = ap_CS_fsm) and (not((ap_const_lv1_0 = grp_load_fu_285_p1)) or not((ap_const_lv1_0 = localEmpty_load_reg_439)))) or (ap_ST_st11_fsm_10 = ap_CS_fsm))) then
                localFull_fu_86 <= full_assign_fu_82;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then
                localFull_load_2_reg_457 <= localFull_fu_86;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st14_fsm_13 = ap_CS_fsm) and (ap_const_lv1_0 = grp_load_fu_285_p1))) then
                p_result_s_reg_483 <= p_result_s_fu_364_p2;
            end if;
        end if;
    end process;
    last_1_reg_403(31 downto 4) <= "0000000000000000000000000000";
    last_load_reg_434(31 downto 4) <= "0000000000000000000000000000";
    last_fu_94(31 downto 4) <= "0000000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start , ap_CS_fsm , grp_load_fu_274_p1 , localFull_load_reg_410 , grp_load_fu_285_p1 , localEmpty_load_reg_439 , localFull_load_2_reg_457 , localEmpty_load_2_reg_479)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                if ((grp_load_fu_274_p1 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (((localFull_load_reg_410 = ap_const_lv1_0) and (grp_load_fu_274_p1 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st7_fsm_6 => 
                if ((ap_const_lv1_0 = grp_load_fu_285_p1)) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                if (((ap_const_lv1_0 = localEmpty_load_reg_439) and (ap_const_lv1_0 = grp_load_fu_285_p1))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st10_fsm_9 => 
                if ((grp_load_fu_274_p1 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                if ((not((grp_load_fu_274_p1 = ap_const_lv1_0)) or not((ap_const_lv1_0 = localFull_load_2_reg_457)))) then
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st14_fsm_13 => 
                if ((ap_const_lv1_0 = grp_load_fu_285_p1)) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                end if;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                if ((not((ap_const_lv1_0 = grp_load_fu_285_p1)) or not((ap_const_lv1_0 = localEmpty_load_2_reg_479)))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_CS_fsm, grp_load_fu_285_p1, localEmpty_load_2_reg_479)
    begin
        if (((ap_ST_st16_fsm_15 = ap_CS_fsm) and (not((ap_const_lv1_0 = grp_load_fu_285_p1)) or not((ap_const_lv1_0 = localEmpty_load_2_reg_479))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, grp_load_fu_285_p1, localEmpty_load_2_reg_479)
    begin
        if (((ap_ST_st16_fsm_15 = ap_CS_fsm) and (not((ap_const_lv1_0 = grp_load_fu_285_p1)) or not((ap_const_lv1_0 = localEmpty_load_2_reg_479))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= result_3_reg2mem_phi_fu_257_p4;

    -- ap_sig_bdd_195 assign process. --
    ap_sig_bdd_195_assign_proc : process(ap_CS_fsm, localEmpty_load_2_reg_479)
    begin
                ap_sig_bdd_195 <= ((ap_ST_st16_fsm_15 = ap_CS_fsm) and (ap_const_lv1_0 = localEmpty_load_2_reg_479));
    end process;


    -- ap_sig_bdd_60 assign process. --
    ap_sig_bdd_60_assign_proc : process(ap_CS_fsm, localFull_load_reg_410)
    begin
                ap_sig_bdd_60 <= ((ap_ST_st6_fsm_5 = ap_CS_fsm) and (localFull_load_reg_410 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_75 assign process. --
    ap_sig_bdd_75_assign_proc : process(ap_CS_fsm, localEmpty_load_reg_439)
    begin
                ap_sig_bdd_75 <= ((ap_ST_st9_fsm_8 = ap_CS_fsm) and (ap_const_lv1_0 = localEmpty_load_reg_439));
    end process;


    -- cmdOut_V assign process. --
    cmdOut_V_assign_proc : process(ap_CS_fsm, grp_load_fu_274_p1, localFull_load_reg_410, grp_load_fu_285_p1, localEmpty_load_reg_439, localFull_load_2_reg_457, localEmpty_load_2_reg_479, cmdOut_V_preg)
    begin
        if ((((ap_ST_st14_fsm_13 = ap_CS_fsm) and (ap_const_lv1_0 = grp_load_fu_285_p1)) or ((ap_ST_st7_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = grp_load_fu_285_p1)) or ((ap_ST_st9_fsm_8 = ap_CS_fsm) and (ap_const_lv1_0 = localEmpty_load_reg_439) and (ap_const_lv1_0 = grp_load_fu_285_p1)) or ((ap_const_lv1_0 = grp_load_fu_285_p1) and (ap_ST_st16_fsm_15 = ap_CS_fsm) and (ap_const_lv1_0 = localEmpty_load_2_reg_479)))) then 
            cmdOut_V <= ap_const_lv2_2;
        elsif ((((ap_ST_st6_fsm_5 = ap_CS_fsm) and (not((localFull_load_reg_410 = ap_const_lv1_0)) or not((grp_load_fu_274_p1 = ap_const_lv1_0)))) or ((ap_ST_st12_fsm_11 = ap_CS_fsm) and (not((grp_load_fu_274_p1 = ap_const_lv1_0)) or not((ap_const_lv1_0 = localFull_load_2_reg_457)))) or ((ap_ST_st9_fsm_8 = ap_CS_fsm) and (not((ap_const_lv1_0 = grp_load_fu_285_p1)) or not((ap_const_lv1_0 = localEmpty_load_reg_439)))) or ((ap_ST_st16_fsm_15 = ap_CS_fsm) and (not((ap_const_lv1_0 = grp_load_fu_285_p1)) or not((ap_const_lv1_0 = localEmpty_load_2_reg_479)))))) then 
            cmdOut_V <= ap_const_lv2_0;
        elsif ((((ap_ST_st6_fsm_5 = ap_CS_fsm) and (localFull_load_reg_410 = ap_const_lv1_0) and (grp_load_fu_274_p1 = ap_const_lv1_0)) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or ((ap_ST_st3_fsm_2 = ap_CS_fsm) and (grp_load_fu_274_p1 = ap_const_lv1_0)) or ((grp_load_fu_274_p1 = ap_const_lv1_0) and (ap_ST_st10_fsm_9 = ap_CS_fsm)))) then 
            cmdOut_V <= ap_const_lv2_1;
        else 
            cmdOut_V <= cmdOut_V_preg;
        end if; 
    end process;


    -- currentPriority_V assign process. --
    currentPriority_V_assign_proc : process(ap_CS_fsm, priorityIn_V, localFull_load_reg_410, localEmpty_load_reg_439, localFull_load_2_reg_457, tmp_reg2mem_reg_172, tmp_6_reg2mem_reg_242, currentPriority_V_preg)
    begin
        if (((ap_ST_st12_fsm_11 = ap_CS_fsm) and (ap_const_lv1_0 = localFull_load_2_reg_457))) then 
            currentPriority_V <= tmp_6_reg2mem_reg_242;
        elsif ((((ap_ST_st9_fsm_8 = ap_CS_fsm) and (ap_const_lv1_0 = localEmpty_load_reg_439)) or (ap_ST_st15_fsm_14 = ap_CS_fsm))) then 
            currentPriority_V <= priorityIn_V;
        elsif (((ap_ST_st6_fsm_5 = ap_CS_fsm) and (localFull_load_reg_410 = ap_const_lv1_0))) then 
            currentPriority_V <= tmp_reg2mem_reg_172;
        else 
            currentPriority_V <= currentPriority_V_preg;
        end if; 
    end process;

    empty_read_read_fu_104_p2 <= (0=>empty, others=>'-');

    -- fullOut assign process. --
    fullOut_assign_proc : process(ap_CS_fsm, full_assign_fu_82, fullOut_preg)
    begin
        if ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then 
            fullOut <= full_assign_fu_82(0);
        else 
            fullOut <= fullOut_preg;
        end if; 
    end process;

    full_read_read_fu_98_p2 <= (0=>full, others=>'-');
    grp_load_fu_274_p1 <= localFull_fu_86;
    grp_load_fu_285_p1 <= localEmpty_fu_90;
    i_1_fu_338_p2 <= std_logic_vector(unsigned(i_3_reg2mem_reg_231) + unsigned(ap_const_lv32_1));
    i_fu_302_p2 <= std_logic_vector(unsigned(i_reg2mem_reg_161) + unsigned(ap_const_lv32_1));
    i_s_fu_332_p2 <= std_logic_vector(unsigned(i_1_reg2mem_reg_206) + unsigned(ap_const_lv32_1));
    last_1_fu_298_p1 <= std_logic_vector(resize(unsigned(priorityIn_V),32));
    p_result_s_fu_364_p2 <= (rev_fu_358_p2 and result_1_reg2mem_1_reg_219);

    -- priorityOut_V assign process. --
    priorityOut_V_assign_proc : process(ap_CS_fsm, grp_load_fu_274_p1, localFull_load_reg_410, tmp_fu_308_p1, tmp_1_fu_349_p1, priorityOut_V_preg)
    begin
        if ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then 
            priorityOut_V <= tmp_1_fu_349_p1;
        elsif (((grp_load_fu_274_p1 = ap_const_lv1_0) and (ap_ST_st10_fsm_9 = ap_CS_fsm))) then 
            priorityOut_V <= ap_const_lv4_5;
        elsif (((ap_ST_st6_fsm_5 = ap_CS_fsm) and (localFull_load_reg_410 = ap_const_lv1_0) and (grp_load_fu_274_p1 = ap_const_lv1_0))) then 
            priorityOut_V <= tmp_fu_308_p1;
        elsif (((ap_ST_st3_fsm_2 = ap_CS_fsm) and (grp_load_fu_274_p1 = ap_const_lv1_0))) then 
            priorityOut_V <= ap_const_lv4_0;
        else 
            priorityOut_V <= priorityOut_V_preg;
        end if; 
    end process;

    random_priorities_address0 <= tmp_s_fu_344_p1(8 - 1 downto 0);

    -- random_priorities_ce0 assign process. --
    random_priorities_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st12_fsm_11 = ap_CS_fsm)) then 
            random_priorities_ce0 <= ap_const_logic_1;
        else 
            random_priorities_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    result_1_s_fu_326_p2 <= (tmp_3_fu_321_p2 and result_1_reg2mem_reg_195);

    -- result_3_reg2mem_phi_fu_257_p4 assign process. --
    result_3_reg2mem_phi_fu_257_p4_assign_proc : process(ap_CS_fsm, grp_load_fu_285_p1, localEmpty_load_2_reg_479, p_result_s_reg_483, result_3_reg2mem_reg_254)
    begin
        if ((not((ap_const_lv1_0 = grp_load_fu_285_p1)) and (ap_ST_st16_fsm_15 = ap_CS_fsm) and (ap_const_lv1_0 = localEmpty_load_2_reg_479))) then 
            result_3_reg2mem_phi_fu_257_p4 <= p_result_s_reg_483;
        else 
            result_3_reg2mem_phi_fu_257_p4 <= result_3_reg2mem_reg_254;
        end if; 
    end process;

    rev_fu_358_p2 <= (ult_fu_354_p2 xor ap_const_lv1_1);
    tmp_1_fu_349_p1 <= random_priorities_q0(4 - 1 downto 0);
    tmp_3_fu_321_p2 <= "1" when (last_1_reg_403 = op2_assign_reg2mem_reg_184) else "0";
    tmp_fu_308_p1 <= i_reg2mem_reg_161(4 - 1 downto 0);
    
    i_3_reg2mem_reg_231_temp <= signed(i_3_reg2mem_reg_231);
    tmp_s_fu_344_p1 <= std_logic_vector(resize(i_3_reg2mem_reg_231_temp,64));

    ult_fu_354_p2 <= "1" when (unsigned(last_1_reg_403) < unsigned(last_load_reg_434)) else "0";
end behav;
