// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="runQueue,hls_ip_2014_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.185000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module runQueue (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        priorityOut_V,
        priorityIn_V,
        cmdOut_V,
        empty,
        full,
        fullOut,
        iterations,
        iterations_ap_vld,
        finished,
        finished_ap_vld,
        currentIteration,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b0000;
parameter    ap_ST_st2_fsm_1 = 4'b1;
parameter    ap_ST_st3_fsm_2 = 4'b10;
parameter    ap_ST_st4_fsm_3 = 4'b11;
parameter    ap_ST_st5_fsm_4 = 4'b100;
parameter    ap_ST_st6_fsm_5 = 4'b101;
parameter    ap_ST_st7_fsm_6 = 4'b110;
parameter    ap_ST_st8_fsm_7 = 4'b111;
parameter    ap_ST_st9_fsm_8 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] priorityOut_V;
input  [3:0] priorityIn_V;
output  [1:0] cmdOut_V;
input   empty;
input   full;
output   fullOut;
input  [31:0] iterations;
input   iterations_ap_vld;
output   finished;
output   finished_ap_vld;
output  [31:0] currentIteration;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] priorityOut_V;
reg[1:0] cmdOut_V;
reg fullOut;
reg finished_ap_vld;
reg[31:0] currentIteration;
reg   [3:0] ap_CS_fsm = 4'b0000;
reg   [31:0] iterations_in_sig;
reg   [31:0] iterations_preg = 32'b00000000000000000000000000000000;
reg    iterations_ap_vld_in_sig;
reg    iterations_ap_vld_preg = 1'b0;
reg    ap_sig_bdd_52;
wire   [0:0] tmp_fu_253_p2;
reg   [0:0] tmp_reg_332;
wire   [31:0] i_fu_268_p2;
wire   [0:0] grp_load_fu_246_p1;
reg   [0:0] localEmpty_load_reg_355;
wire   [31:0] i_s_fu_294_p2;
reg   [0:0] result_reg2mem_0_load_reg_367;
wire   [31:0] j_s_fu_308_p2;
reg   [31:0] j_1_reg2mem_reg_159;
wire   [0:0] tmp6_fu_303_p2;
reg   [31:0] val_assign_reg2mem_reg_172;
wire   [0:0] grp_load_fu_238_p1;
reg   [31:0] i_reg2mem_reg_183;
reg   [31:0] op2_assign_reg2mem_reg_196;
reg   [31:0] i_1_reg2mem_reg_207;
reg   [0:0] result_reg2mem_1_reg_220;
reg   [0:0] localFull_fu_82;
wire   [0:0] grp_read_fu_116_p2;
reg   [0:0] localEmpty_fu_86;
wire   [0:0] grp_read_fu_138_p2;
reg   [0:0] result_reg2mem_0_fu_90;
wire   [0:0] result_1_s_fu_287_p2;
reg   [1:0] cmdOut_V_preg = 2'b00;
reg   [31:0] currentIteration_preg = 32'b00000000000000000000000000000000;
wire   [3:0] tmp_1_fu_263_p1;
reg   [3:0] priorityOut_V_preg = 4'b0000;
reg    fullOut_preg = 1'b0;
wire   [31:0] tmp_4_fu_277_p1;
wire   [0:0] tmp_5_fu_281_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_sig_bdd_70;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// cmdOut_V_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_cmdOut_V_preg
    if (ap_rst == 1'b1) begin
        cmdOut_V_preg <= ap_const_lv2_0;
    end else begin
        if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
            cmdOut_V_preg <= ap_const_lv2_2;
        end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
            cmdOut_V_preg <= ap_const_lv2_1;
        end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) | ((ap_ST_st8_fsm_7 == ap_CS_fsm) & ~(tmp_reg_332 == ap_const_lv1_0)) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(tmp_fu_253_p2 == ap_const_lv1_0)) | ((ap_ST_st8_fsm_7 == ap_CS_fsm) & ~(tmp_reg_332 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp6_fu_303_p2)) | (ap_ST_st5_fsm_4 == ap_CS_fsm))) begin
            cmdOut_V_preg <= ap_const_lv2_0;
        end
    end
end

/// currentIteration_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_currentIteration_preg
    if (ap_rst == 1'b1) begin
        currentIteration_preg <= ap_const_lv32_0;
    end else begin
        if (((ap_ST_st8_fsm_7 == ap_CS_fsm) & ~(tmp_reg_332 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp6_fu_303_p2))) begin
            currentIteration_preg <= j_1_reg2mem_reg_159;
        end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(tmp_fu_253_p2 == ap_const_lv1_0))) begin
            currentIteration_preg <= ap_const_lv32_0;
        end
    end
end

/// fullOut_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_fullOut_preg
    if (ap_rst == 1'b1) begin
        fullOut_preg <= ap_const_logic_0;
    end else begin
        if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
            fullOut_preg <= grp_read_fu_116_p2;
        end
    end
end

/// iterations_ap_vld_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_iterations_ap_vld_preg
    if (ap_rst == 1'b1) begin
        iterations_ap_vld_preg <= ap_const_logic_0;
    end else begin
        if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
            iterations_ap_vld_preg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == iterations_ap_vld) & ~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)))) begin
            iterations_ap_vld_preg <= iterations_ap_vld;
        end
    end
end

/// iterations_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_iterations_preg
    if (ap_rst == 1'b1) begin
        iterations_preg <= ap_const_lv32_0;
    end else begin
        if (((ap_const_logic_1 == iterations_ap_vld) & ~((ap_ST_st1_fsm_0 == ap_CS_fsm) & (ap_const_logic_0 == ap_start)))) begin
            iterations_preg <= iterations;
        end
    end
end

/// priorityOut_V_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_priorityOut_V_preg
    if (ap_rst == 1'b1) begin
        priorityOut_V_preg <= ap_const_lv4_0;
    end else begin
        if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
            priorityOut_V_preg <= tmp_1_fu_263_p1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((grp_load_fu_246_p1 == ap_const_lv1_0)) begin
        if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
            i_1_reg2mem_reg_207 <= ap_const_lv32_1;
        end else if (ap_sig_bdd_70) begin
            i_1_reg2mem_reg_207 <= i_s_fu_294_p2;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == grp_load_fu_238_p1)) begin
        if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
            i_reg2mem_reg_183 <= ap_const_lv32_1;
        end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
            i_reg2mem_reg_183 <= i_fu_268_p2;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st8_fsm_7 == ap_CS_fsm) & ~(tmp_reg_332 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp6_fu_303_p2))) begin
        j_1_reg2mem_reg_159 <= j_s_fu_308_p2;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(tmp_fu_253_p2 == ap_const_lv1_0))) begin
        j_1_reg2mem_reg_159 <= ap_const_lv32_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((grp_load_fu_246_p1 == ap_const_lv1_0)) begin
        if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
            op2_assign_reg2mem_reg_196 <= ap_const_lv32_0;
        end else if (ap_sig_bdd_70) begin
            op2_assign_reg2mem_reg_196 <= i_1_reg2mem_reg_207;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_st7_fsm_6 == ap_CS_fsm) & (localEmpty_load_reg_355 == ap_const_lv1_0) & (grp_load_fu_246_p1 == ap_const_lv1_0)) | ((ap_ST_st7_fsm_6 == ap_CS_fsm) & (localEmpty_load_reg_355 == ap_const_lv1_0) & ~(grp_load_fu_246_p1 == ap_const_lv1_0)))) begin
        result_reg2mem_0_fu_90 <= result_1_s_fu_287_p2;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(tmp_fu_253_p2 == ap_const_lv1_0))) begin
        result_reg2mem_0_fu_90 <= ap_const_lv1_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st8_fsm_7 == ap_CS_fsm) & ~(tmp_reg_332 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp6_fu_303_p2))) begin
        result_reg2mem_1_reg_220 <= result_reg2mem_0_load_reg_367;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (tmp_fu_253_p2 == ap_const_lv1_0))) begin
        result_reg2mem_1_reg_220 <= ap_const_lv1_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == grp_load_fu_238_p1)) begin
        if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
            val_assign_reg2mem_reg_172 <= ap_const_lv32_0;
        end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
            val_assign_reg2mem_reg_172 <= i_reg2mem_reg_183;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_st7_fsm_6 == ap_CS_fsm) & (localEmpty_load_reg_355 == ap_const_lv1_0)) | (ap_ST_st5_fsm_4 == ap_CS_fsm))) begin
        localEmpty_fu_86 <= grp_read_fu_138_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        localEmpty_load_reg_355 <= localEmpty_fu_86;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(tmp_fu_253_p2 == ap_const_lv1_0)) | ((ap_ST_st8_fsm_7 == ap_CS_fsm) & ~(tmp_reg_332 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp6_fu_303_p2)))) begin
        localFull_fu_82 <= grp_read_fu_116_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) & (~(localEmpty_load_reg_355 == ap_const_lv1_0) | ~(grp_load_fu_246_p1 == ap_const_lv1_0)))) begin
        result_reg2mem_0_load_reg_367 <= result_reg2mem_0_fu_90;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        tmp_reg_332 <= tmp_fu_253_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// cmdOut_V assign process. ///
always @ (ap_CS_fsm or tmp_fu_253_p2 or tmp_reg_332 or tmp6_fu_303_p2 or cmdOut_V_preg)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        cmdOut_V = ap_const_lv2_2;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        cmdOut_V = ap_const_lv2_1;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) | ((ap_ST_st8_fsm_7 == ap_CS_fsm) & ~(tmp_reg_332 == ap_const_lv1_0)) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(tmp_fu_253_p2 == ap_const_lv1_0)) | ((ap_ST_st8_fsm_7 == ap_CS_fsm) & ~(tmp_reg_332 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp6_fu_303_p2)) | (ap_ST_st5_fsm_4 == ap_CS_fsm))) begin
        cmdOut_V = ap_const_lv2_0;
    end else begin
        cmdOut_V = cmdOut_V_preg;
    end
end

/// currentIteration assign process. ///
always @ (ap_CS_fsm or tmp_fu_253_p2 or tmp_reg_332 or j_1_reg2mem_reg_159 or tmp6_fu_303_p2 or currentIteration_preg)
begin
    if (((ap_ST_st8_fsm_7 == ap_CS_fsm) & ~(tmp_reg_332 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp6_fu_303_p2))) begin
        currentIteration = j_1_reg2mem_reg_159;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(tmp_fu_253_p2 == ap_const_lv1_0))) begin
        currentIteration = ap_const_lv32_0;
    end else begin
        currentIteration = currentIteration_preg;
    end
end

/// finished_ap_vld assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        finished_ap_vld = ap_const_logic_1;
    end else begin
        finished_ap_vld = ap_const_logic_0;
    end
end

/// fullOut assign process. ///
always @ (ap_CS_fsm or full or fullOut_preg)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        fullOut = full;
    end else begin
        fullOut = fullOut_preg;
    end
end

/// iterations_ap_vld_in_sig assign process. ///
always @ (iterations_ap_vld or iterations_ap_vld_preg)
begin
    if ((ap_const_logic_1 == iterations_ap_vld)) begin
        iterations_ap_vld_in_sig = iterations_ap_vld;
    end else begin
        iterations_ap_vld_in_sig = iterations_ap_vld_preg;
    end
end

/// iterations_in_sig assign process. ///
always @ (iterations or iterations_preg or iterations_ap_vld)
begin
    if ((ap_const_logic_1 == iterations_ap_vld)) begin
        iterations_in_sig = iterations;
    end else begin
        iterations_in_sig = iterations_preg;
    end
end

/// priorityOut_V assign process. ///
always @ (ap_CS_fsm or tmp_1_fu_263_p1 or priorityOut_V_preg)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        priorityOut_V = tmp_1_fu_263_p1;
    end else begin
        priorityOut_V = priorityOut_V_preg;
    end
end
always @ (ap_CS_fsm or ap_sig_bdd_52 or tmp_fu_253_p2 or tmp_reg_332 or grp_load_fu_246_p1 or localEmpty_load_reg_355 or tmp6_fu_303_p2 or grp_load_fu_238_p1)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~ap_sig_bdd_52) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if (~(tmp_fu_253_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        ap_ST_st3_fsm_2 : 
            if (~(ap_const_lv1_0 == grp_load_fu_238_p1)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st4_fsm_3 : 
            if (~(ap_const_lv1_0 == grp_load_fu_238_p1)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st5_fsm_4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st7_fsm_6 : 
            if ((~(localEmpty_load_reg_355 == ap_const_lv1_0) | ~(grp_load_fu_246_p1 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        ap_ST_st8_fsm_7 : 
            if ((~(tmp_reg_332 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp6_fu_303_p2))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        ap_ST_st9_fsm_8 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign ap_return = result_reg2mem_1_reg_220;

/// ap_sig_bdd_52 assign process. ///
always @ (ap_start or iterations_ap_vld_in_sig)
begin
    ap_sig_bdd_52 = ((iterations_ap_vld_in_sig == ap_const_logic_0) | (ap_start == ap_const_logic_0));
end

/// ap_sig_bdd_70 assign process. ///
always @ (ap_CS_fsm or localEmpty_load_reg_355)
begin
    ap_sig_bdd_70 = ((ap_ST_st7_fsm_6 == ap_CS_fsm) & (localEmpty_load_reg_355 == ap_const_lv1_0));
end
assign finished = ap_const_lv1_1;
assign grp_load_fu_238_p1 = localFull_fu_82;
assign grp_load_fu_246_p1 = localEmpty_fu_86;
assign grp_read_fu_116_p2 = full;
assign grp_read_fu_138_p2 = empty;
assign i_fu_268_p2 = (i_reg2mem_reg_183 + ap_const_lv32_1);
assign i_s_fu_294_p2 = (i_1_reg2mem_reg_207 + ap_const_lv32_1);
assign j_s_fu_308_p2 = (j_1_reg2mem_reg_159 + ap_const_lv32_1);
assign result_1_s_fu_287_p2 = (tmp_5_fu_281_p2 & result_reg2mem_0_fu_90);
assign tmp6_fu_303_p2 = ($signed(j_1_reg2mem_reg_159) < $signed(iterations_in_sig)? 1'b1: 1'b0);
assign tmp_1_fu_263_p1 = val_assign_reg2mem_reg_172[3:0];
assign tmp_4_fu_277_p1 = $unsigned(priorityIn_V);
assign tmp_5_fu_281_p2 = (tmp_4_fu_277_p1 == op2_assign_reg2mem_reg_196? 1'b1: 1'b0);
assign tmp_fu_253_p2 = ($signed(iterations_in_sig) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);


endmodule //runQueue

