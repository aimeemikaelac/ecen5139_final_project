// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="runQueue,hls_ip_2014_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.555000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module runQueue (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        priorityOut_V,
        priorityIn_V,
        cmdOut_V,
        empty,
        full,
        fullOut,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 5'b00000;
parameter    ap_ST_st2_fsm_1 = 5'b1;
parameter    ap_ST_st3_fsm_2 = 5'b10;
parameter    ap_ST_st4_fsm_3 = 5'b11;
parameter    ap_ST_st5_fsm_4 = 5'b100;
parameter    ap_ST_st6_fsm_5 = 5'b101;
parameter    ap_ST_st7_fsm_6 = 5'b110;
parameter    ap_ST_st8_fsm_7 = 5'b111;
parameter    ap_ST_st9_fsm_8 = 5'b1000;
parameter    ap_ST_st10_fsm_9 = 5'b1001;
parameter    ap_ST_st11_fsm_10 = 5'b1010;
parameter    ap_ST_st12_fsm_11 = 5'b1011;
parameter    ap_ST_st13_fsm_12 = 5'b1100;
parameter    ap_ST_st14_fsm_13 = 5'b1101;
parameter    ap_ST_st15_fsm_14 = 5'b1110;
parameter    ap_ST_st16_fsm_15 = 5'b1111;
parameter    ap_ST_st17_fsm_16 = 5'b10000;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_DATA_WIDTH = 32;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv4_5 = 4'b101;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_WSTRB_WIDTH = (C_DATA_WIDTH / ap_const_int64_8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] priorityOut_V;
input  [3:0] priorityIn_V;
output  [1:0] cmdOut_V;
input   empty;
input   full;
output   fullOut;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] priorityOut_V;
reg[1:0] cmdOut_V;
reg fullOut;
reg   [4:0] ap_CS_fsm = 5'b00000;
reg   [3:0] currentPriority_V;
wire   [7:0] random_priorities_address0;
reg    random_priorities_ce0;
wire   [8:0] random_priorities_q0;
wire   [0:0] grp_load_fu_277_p1;
reg   [0:0] localFull_load_reg_403;
wire   [31:0] i_fu_288_p2;
wire   [3:0] tmp_fu_294_p1;
reg   [31:0] last_load_reg_427;
wire   [0:0] grp_load_fu_285_p1;
reg   [0:0] localEmpty_load_reg_432;
wire   [0:0] tmp_3_fu_311_p2;
reg   [0:0] tmp_3_reg_436;
wire   [0:0] result_1_s_fu_317_p2;
wire   [31:0] i_s_fu_322_p2;
reg   [0:0] localFull_load_2_reg_455;
wire   [31:0] i_1_fu_328_p2;
reg   [31:0] i_1_reg_462;
wire   [3:0] tmp_1_fu_339_p1;
wire   [0:0] p_result_s_fu_359_p2;
reg   [3:0] priorityIn_V_read_4_reg_485;
wire   [0:0] p_result_1_fu_385_p2;
reg   [31:0] i_reg2mem_reg_157;
reg   [3:0] tmp_reg2mem_reg_168;
reg   [31:0] op2_assign_reg2mem_reg_180;
reg   [0:0] result_1_reg2mem_reg_191;
reg   [31:0] i_1_reg2mem_reg_202;
reg   [0:0] result_1_reg2mem_1_reg_215;
reg   [31:0] i_3_reg2mem_reg_227;
reg   [3:0] tmp_6_reg2mem_reg_238;
reg   [0:0] p_result_3_reg2mem_reg_250;
reg   [0:0] result_3_reg2mem_reg_260;
wire   [63:0] tmp_s_fu_334_p1;
reg   [0:0] localFull_fu_80;
wire   [0:0] grp_read_fu_92_p2;
reg   [0:0] localEmpty_fu_84;
wire   [0:0] grp_read_fu_130_p2;
reg   [31:0] last_fu_88;
wire   [31:0] last_1_fu_365_p1;
reg   [1:0] cmdOut_V_preg = 2'b00;
reg   [3:0] priorityOut_V_preg = 4'b0000;
reg    fullOut_preg = 1'b0;
reg   [3:0] currentPriority_V_preg = 4'b0000;
wire   [31:0] tmp_2_fu_307_p1;
wire   [31:0] tmp_1_cast_fu_344_p1;
wire   [0:0] ult_fu_348_p2;
wire   [0:0] rev1_fu_353_p2;
wire   [0:0] ult1_fu_374_p2;
wire   [0:0] rev_fu_379_p2;
reg   [4:0] ap_NS_fsm;
reg    ap_sig_bdd_109;
reg    ap_sig_bdd_91;


runQueue_random_priorities #(
    .DataWidth( 9 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
random_priorities_U(
    .clk( ap_clk ),
    .reset( ap_rst_n ),
    .address0( random_priorities_address0 ),
    .ce0( random_priorities_ce0 ),
    .q0( random_priorities_q0 )
);

runQueue_AXILiteS_s_axi #(
    .C_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
runQueue_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESETN( ap_rst_n ),
    .currentPriority_V( currentPriority_V )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n == 1'b0) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// cmdOut_V_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_cmdOut_V_preg
    if (ap_rst_n == 1'b0) begin
        cmdOut_V_preg <= ap_const_lv2_0;
    end else begin
        if ((((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == grp_load_fu_285_p1)) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | ((ap_ST_st6_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == grp_load_fu_285_p1)) | ((ap_ST_st8_fsm_7 == ap_CS_fsm) & (ap_const_lv1_0 == localEmpty_load_reg_432) & (ap_const_lv1_0 == grp_load_fu_285_p1)))) begin
            cmdOut_V_preg <= ap_const_lv2_2;
        end else if ((((ap_ST_st8_fsm_7 == ap_CS_fsm) & (~(ap_const_lv1_0 == grp_load_fu_285_p1) | ~(ap_const_lv1_0 == localEmpty_load_reg_432))) | ((ap_ST_st5_fsm_4 == ap_CS_fsm) & (~(localFull_load_reg_403 == ap_const_lv1_0) | ~(grp_load_fu_277_p1 == ap_const_lv1_0))) | ((ap_ST_st11_fsm_10 == ap_CS_fsm) & (~(grp_load_fu_277_p1 == ap_const_lv1_0) | ~(ap_const_lv1_0 == localFull_load_2_reg_455))) | (ap_ST_st17_fsm_16 == ap_CS_fsm))) begin
            cmdOut_V_preg <= ap_const_lv2_0;
        end else if ((((ap_ST_st5_fsm_4 == ap_CS_fsm) & (localFull_load_reg_403 == ap_const_lv1_0) & (grp_load_fu_277_p1 == ap_const_lv1_0)) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & (grp_load_fu_277_p1 == ap_const_lv1_0)) | ((grp_load_fu_277_p1 == ap_const_lv1_0) & (ap_ST_st9_fsm_8 == ap_CS_fsm)))) begin
            cmdOut_V_preg <= ap_const_lv2_1;
        end
    end
end

/// currentPriority_V_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_currentPriority_V_preg
    if (ap_rst_n == 1'b0) begin
        currentPriority_V_preg <= ap_const_lv4_0;
    end else begin
        if (((ap_ST_st11_fsm_10 == ap_CS_fsm) & (ap_const_lv1_0 == localFull_load_2_reg_455))) begin
            currentPriority_V_preg <= tmp_6_reg2mem_reg_238;
        end else if ((((ap_ST_st8_fsm_7 == ap_CS_fsm) & (ap_const_lv1_0 == localEmpty_load_reg_432)) | (ap_ST_st14_fsm_13 == ap_CS_fsm))) begin
            currentPriority_V_preg <= priorityIn_V;
        end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (localFull_load_reg_403 == ap_const_lv1_0))) begin
            currentPriority_V_preg <= tmp_reg2mem_reg_168;
        end
    end
end

/// fullOut_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_fullOut_preg
    if (ap_rst_n == 1'b0) begin
        fullOut_preg <= ap_const_logic_0;
    end else begin
        if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
            fullOut_preg <= grp_read_fu_92_p2;
        end
    end
end

/// priorityOut_V_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_priorityOut_V_preg
    if (ap_rst_n == 1'b0) begin
        priorityOut_V_preg <= ap_const_lv4_0;
    end else begin
        if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
            priorityOut_V_preg <= tmp_1_fu_339_p1;
        end else if (((grp_load_fu_277_p1 == ap_const_lv1_0) & (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
            priorityOut_V_preg <= ap_const_lv4_5;
        end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (localFull_load_reg_403 == ap_const_lv1_0) & (grp_load_fu_277_p1 == ap_const_lv1_0))) begin
            priorityOut_V_preg <= tmp_fu_294_p1;
        end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (grp_load_fu_277_p1 == ap_const_lv1_0))) begin
            priorityOut_V_preg <= ap_const_lv4_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == grp_load_fu_285_p1)) begin
        if (ap_sig_bdd_109) begin
            i_1_reg2mem_reg_202 <= i_s_fu_322_p2;
        end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
            i_1_reg2mem_reg_202 <= ap_const_lv32_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        i_3_reg2mem_reg_227 <= i_1_reg_462;
    end else if (((grp_load_fu_277_p1 == ap_const_lv1_0) & (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        i_3_reg2mem_reg_227 <= ap_const_lv32_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((grp_load_fu_277_p1 == ap_const_lv1_0)) begin
        if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
            i_reg2mem_reg_157 <= ap_const_lv32_1;
        end else if (ap_sig_bdd_91) begin
            i_reg2mem_reg_157 <= i_fu_288_p2;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st15_fsm_14 == ap_CS_fsm) & ~(ap_const_lv1_0 == grp_load_fu_285_p1))) begin
        last_fu_88[0] <= last_1_fu_365_p1[0];
        last_fu_88[1] <= last_1_fu_365_p1[1];
        last_fu_88[2] <= last_1_fu_365_p1[2];
        last_fu_88[3] <= last_1_fu_365_p1[3];
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (~(localFull_load_reg_403 == ap_const_lv1_0) | ~(grp_load_fu_277_p1 == ap_const_lv1_0)))) begin
        last_fu_88[0] <= 1'b0;
        last_fu_88[1] <= 1'b0;
        last_fu_88[2] <= 1'b0;
        last_fu_88[3] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == grp_load_fu_285_p1)) begin
        if (ap_sig_bdd_109) begin
            op2_assign_reg2mem_reg_180 <= i_1_reg2mem_reg_202;
        end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
            op2_assign_reg2mem_reg_180 <= ap_const_lv32_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st16_fsm_15 == ap_CS_fsm)) begin
        p_result_3_reg2mem_reg_250 <= p_result_1_fu_385_p2;
    end else if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == grp_load_fu_285_p1))) begin
        p_result_3_reg2mem_reg_250 <= p_result_s_fu_359_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (~(ap_const_lv1_0 == grp_load_fu_285_p1)) begin
        if (ap_sig_bdd_109) begin
            result_1_reg2mem_1_reg_215 <= result_1_s_fu_317_p2;
        end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
            result_1_reg2mem_1_reg_215 <= ap_const_lv1_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_lv1_0 == grp_load_fu_285_p1)) begin
        if (ap_sig_bdd_109) begin
            result_1_reg2mem_reg_191 <= result_1_s_fu_317_p2;
        end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
            result_1_reg2mem_reg_191 <= ap_const_lv1_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (~(ap_const_lv1_0 == grp_load_fu_285_p1)) begin
        if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
            result_3_reg2mem_reg_260 <= p_result_3_reg2mem_reg_250;
        end else if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
            result_3_reg2mem_reg_260 <= result_1_reg2mem_1_reg_215;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        tmp_6_reg2mem_reg_238 <= tmp_1_fu_339_p1;
    end else if (((grp_load_fu_277_p1 == ap_const_lv1_0) & (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        tmp_6_reg2mem_reg_238 <= ap_const_lv4_5;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((grp_load_fu_277_p1 == ap_const_lv1_0)) begin
        if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
            tmp_reg2mem_reg_168 <= ap_const_lv4_0;
        end else if (ap_sig_bdd_91) begin
            tmp_reg2mem_reg_168 <= tmp_fu_294_p1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st11_fsm_10 == ap_CS_fsm) & (ap_const_lv1_0 == localFull_load_2_reg_455))) begin
        i_1_reg_462 <= i_1_fu_328_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        last_load_reg_427[0] <= last_fu_88[0];
last_load_reg_427[1] <= last_fu_88[1];
last_load_reg_427[2] <= last_fu_88[2];
last_load_reg_427[3] <= last_fu_88[3];
        localEmpty_load_reg_432 <= localEmpty_fu_84;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) | ((ap_ST_st5_fsm_4 == ap_CS_fsm) & (~(localFull_load_reg_403 == ap_const_lv1_0) | ~(grp_load_fu_277_p1 == ap_const_lv1_0))) | ((ap_ST_st11_fsm_10 == ap_CS_fsm) & (~(grp_load_fu_277_p1 == ap_const_lv1_0) | ~(ap_const_lv1_0 == localFull_load_2_reg_455))) | (ap_ST_st14_fsm_13 == ap_CS_fsm))) begin
        localEmpty_fu_84 <= grp_read_fu_130_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | (ap_ST_st4_fsm_3 == ap_CS_fsm) | ((ap_ST_st8_fsm_7 == ap_CS_fsm) & (~(ap_const_lv1_0 == grp_load_fu_285_p1) | ~(ap_const_lv1_0 == localEmpty_load_reg_432))) | (ap_ST_st10_fsm_9 == ap_CS_fsm))) begin
        localFull_fu_80 <= grp_read_fu_92_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        localFull_load_2_reg_455 <= localFull_fu_80;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        localFull_load_reg_403 <= localFull_fu_80;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st15_fsm_14 == ap_CS_fsm)) begin
        priorityIn_V_read_4_reg_485 <= priorityIn_V;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        tmp_3_reg_436 <= tmp_3_fu_311_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// cmdOut_V assign process. ///
always @ (ap_CS_fsm or grp_load_fu_277_p1 or localFull_load_reg_403 or grp_load_fu_285_p1 or localEmpty_load_reg_432 or localFull_load_2_reg_455 or cmdOut_V_preg)
begin
    if ((((ap_ST_st13_fsm_12 == ap_CS_fsm) & (ap_const_lv1_0 == grp_load_fu_285_p1)) | (ap_ST_st16_fsm_15 == ap_CS_fsm) | ((ap_ST_st6_fsm_5 == ap_CS_fsm) & (ap_const_lv1_0 == grp_load_fu_285_p1)) | ((ap_ST_st8_fsm_7 == ap_CS_fsm) & (ap_const_lv1_0 == localEmpty_load_reg_432) & (ap_const_lv1_0 == grp_load_fu_285_p1)))) begin
        cmdOut_V = ap_const_lv2_2;
    end else if ((((ap_ST_st8_fsm_7 == ap_CS_fsm) & (~(ap_const_lv1_0 == grp_load_fu_285_p1) | ~(ap_const_lv1_0 == localEmpty_load_reg_432))) | ((ap_ST_st5_fsm_4 == ap_CS_fsm) & (~(localFull_load_reg_403 == ap_const_lv1_0) | ~(grp_load_fu_277_p1 == ap_const_lv1_0))) | ((ap_ST_st11_fsm_10 == ap_CS_fsm) & (~(grp_load_fu_277_p1 == ap_const_lv1_0) | ~(ap_const_lv1_0 == localFull_load_2_reg_455))) | (ap_ST_st17_fsm_16 == ap_CS_fsm))) begin
        cmdOut_V = ap_const_lv2_0;
    end else if ((((ap_ST_st5_fsm_4 == ap_CS_fsm) & (localFull_load_reg_403 == ap_const_lv1_0) & (grp_load_fu_277_p1 == ap_const_lv1_0)) | (ap_ST_st12_fsm_11 == ap_CS_fsm) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & (grp_load_fu_277_p1 == ap_const_lv1_0)) | ((grp_load_fu_277_p1 == ap_const_lv1_0) & (ap_ST_st9_fsm_8 == ap_CS_fsm)))) begin
        cmdOut_V = ap_const_lv2_1;
    end else begin
        cmdOut_V = cmdOut_V_preg;
    end
end

/// currentPriority_V assign process. ///
always @ (ap_CS_fsm or priorityIn_V or localFull_load_reg_403 or localEmpty_load_reg_432 or localFull_load_2_reg_455 or tmp_reg2mem_reg_168 or tmp_6_reg2mem_reg_238 or currentPriority_V_preg)
begin
    if (((ap_ST_st11_fsm_10 == ap_CS_fsm) & (ap_const_lv1_0 == localFull_load_2_reg_455))) begin
        currentPriority_V = tmp_6_reg2mem_reg_238;
    end else if ((((ap_ST_st8_fsm_7 == ap_CS_fsm) & (ap_const_lv1_0 == localEmpty_load_reg_432)) | (ap_ST_st14_fsm_13 == ap_CS_fsm))) begin
        currentPriority_V = priorityIn_V;
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (localFull_load_reg_403 == ap_const_lv1_0))) begin
        currentPriority_V = tmp_reg2mem_reg_168;
    end else begin
        currentPriority_V = currentPriority_V_preg;
    end
end

/// fullOut assign process. ///
always @ (ap_CS_fsm or full or fullOut_preg)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        fullOut = full;
    end else begin
        fullOut = fullOut_preg;
    end
end

/// priorityOut_V assign process. ///
always @ (ap_CS_fsm or grp_load_fu_277_p1 or localFull_load_reg_403 or tmp_fu_294_p1 or tmp_1_fu_339_p1 or priorityOut_V_preg)
begin
    if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        priorityOut_V = tmp_1_fu_339_p1;
    end else if (((grp_load_fu_277_p1 == ap_const_lv1_0) & (ap_ST_st9_fsm_8 == ap_CS_fsm))) begin
        priorityOut_V = ap_const_lv4_5;
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (localFull_load_reg_403 == ap_const_lv1_0) & (grp_load_fu_277_p1 == ap_const_lv1_0))) begin
        priorityOut_V = tmp_fu_294_p1;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (grp_load_fu_277_p1 == ap_const_lv1_0))) begin
        priorityOut_V = ap_const_lv4_0;
    end else begin
        priorityOut_V = priorityOut_V_preg;
    end
end

/// random_priorities_ce0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        random_priorities_ce0 = ap_const_logic_1;
    end else begin
        random_priorities_ce0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or grp_load_fu_277_p1 or localFull_load_reg_403 or grp_load_fu_285_p1 or localEmpty_load_reg_432 or localFull_load_2_reg_455)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if ((grp_load_fu_277_p1 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        ap_ST_st3_fsm_2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
        ap_ST_st4_fsm_3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        ap_ST_st5_fsm_4 : 
            if (((localFull_load_reg_403 == ap_const_lv1_0) & (grp_load_fu_277_p1 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        ap_ST_st6_fsm_5 : 
            if ((ap_const_lv1_0 == grp_load_fu_285_p1)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        ap_ST_st7_fsm_6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
        ap_ST_st8_fsm_7 : 
            if (((ap_const_lv1_0 == localEmpty_load_reg_432) & (ap_const_lv1_0 == grp_load_fu_285_p1))) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        ap_ST_st9_fsm_8 : 
            if ((grp_load_fu_277_p1 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        ap_ST_st10_fsm_9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
        ap_ST_st11_fsm_10 : 
            if ((~(grp_load_fu_277_p1 == ap_const_lv1_0) | ~(ap_const_lv1_0 == localFull_load_2_reg_455))) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        ap_ST_st12_fsm_11 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
        ap_ST_st13_fsm_12 : 
            if ((ap_const_lv1_0 == grp_load_fu_285_p1)) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end
        ap_ST_st14_fsm_13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
        ap_ST_st15_fsm_14 : 
            if (~(ap_const_lv1_0 == grp_load_fu_285_p1)) begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        ap_ST_st16_fsm_15 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
        ap_ST_st17_fsm_16 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign ap_return = result_3_reg2mem_reg_260;

/// ap_sig_bdd_109 assign process. ///
always @ (ap_CS_fsm or localEmpty_load_reg_432)
begin
    ap_sig_bdd_109 = ((ap_ST_st8_fsm_7 == ap_CS_fsm) & (ap_const_lv1_0 == localEmpty_load_reg_432));
end

/// ap_sig_bdd_91 assign process. ///
always @ (ap_CS_fsm or localFull_load_reg_403)
begin
    ap_sig_bdd_91 = ((ap_ST_st5_fsm_4 == ap_CS_fsm) & (localFull_load_reg_403 == ap_const_lv1_0));
end
assign grp_load_fu_277_p1 = localFull_fu_80;
assign grp_load_fu_285_p1 = localEmpty_fu_84;
assign grp_read_fu_130_p2 = empty;
assign grp_read_fu_92_p2 = full;
assign i_1_fu_328_p2 = (i_3_reg2mem_reg_227 + ap_const_lv32_1);
assign i_fu_288_p2 = (i_reg2mem_reg_157 + ap_const_lv32_1);
assign i_s_fu_322_p2 = (i_1_reg2mem_reg_202 + ap_const_lv32_1);
assign last_1_fu_365_p1 = $unsigned(priorityIn_V);
assign p_result_1_fu_385_p2 = (rev_fu_379_p2 & p_result_3_reg2mem_reg_250);
assign p_result_s_fu_359_p2 = (rev1_fu_353_p2 & result_1_reg2mem_1_reg_215);
assign random_priorities_address0 = tmp_s_fu_334_p1;
assign result_1_s_fu_317_p2 = (tmp_3_reg_436 & result_1_reg2mem_reg_191);
assign rev1_fu_353_p2 = (ult_fu_348_p2 ^ ap_const_lv1_1);
assign rev_fu_379_p2 = (ult1_fu_374_p2 ^ ap_const_lv1_1);
assign tmp_1_cast_fu_344_p1 = $unsigned(priorityIn_V);
assign tmp_1_fu_339_p1 = random_priorities_q0[3:0];
assign tmp_2_fu_307_p1 = $unsigned(priorityIn_V);
assign tmp_3_fu_311_p2 = (tmp_2_fu_307_p1 == op2_assign_reg2mem_reg_180? 1'b1: 1'b0);
assign tmp_fu_294_p1 = i_reg2mem_reg_157[3:0];
assign tmp_s_fu_334_p1 = $signed(i_3_reg2mem_reg_227);
assign ult1_fu_374_p2 = (priorityIn_V < priorityIn_V_read_4_reg_485? 1'b1: 1'b0);
assign ult_fu_348_p2 = (tmp_1_cast_fu_344_p1 < last_load_reg_427? 1'b1: 1'b0);
always @ (posedge ap_clk)
begin
    last_load_reg_427[31:4] <= 28'b0000000000000000000000000000;
    last_fu_88[31:4] <= 28'b0000000000000000000000000000;
end



endmodule //runQueue

