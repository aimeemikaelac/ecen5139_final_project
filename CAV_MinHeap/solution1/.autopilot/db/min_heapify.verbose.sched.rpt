

================================================================
== Vivado HLS Report for 'min_heapify'
================================================================
* Date:           Tue Dec  1 22:55:27 2015

* Version:        2014.1 (build date: Fri Apr 04 13:20:25 PM 2014)
* Project:        CAV_MinHeap
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.64|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|         5|          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 8
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / (!tmp_s)
	8  / (tmp_s)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / (!tmp_6)
	8  / (tmp_6)
7 --> 
	3  / true
8 --> 
* FSM state operations: 

 <State 1>: 3.25ns
ST_1: i_read [1/1] 0.86ns
:1  %i_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %i)

ST_1: tmp [1/1] 0.00ns
:2  %tmp = sext i32 %i_read to i64

ST_1: a_priority_addr [1/1] 0.00ns
:3  %a_priority_addr = getelementptr [201 x i32]* %a_priority, i64 0, i64 %tmp

ST_1: temp_priority [2/2] 2.39ns
:4  %temp_priority = load i32* %a_priority_addr, align 4

ST_1: a_data_addr [1/1] 0.00ns
:5  %a_data_addr = getelementptr [201 x i32]* %a_data, i64 0, i64 %tmp

ST_1: temp_data [2/2] 2.39ns
:6  %temp_data = load i32* %a_data_addr, align 4


 <State 2>: 2.39ns
ST_2: n_read [1/1] 0.86ns
:0  %n_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %n)

ST_2: temp_priority [1/2] 2.39ns
:4  %temp_priority = load i32* %a_priority_addr, align 4

ST_2: temp_data [1/2] 2.39ns
:6  %temp_data = load i32* %a_data_addr, align 4

ST_2: stg_18 [1/1] 1.57ns
:7  br label %.backedge


 <State 3>: 4.09ns
ST_3: j_0_in [1/1] 0.00ns
.backedge:0  %j_0_in = phi i32 [ %i_read, %0 ], [ %j_1, %.backedge.backedge ]

ST_3: tmp_11 [1/1] 0.00ns
.backedge:1  %tmp_11 = trunc i32 %j_0_in to i31

ST_3: j [1/1] 0.00ns
.backedge:2  %j = shl i32 %j_0_in, 1

ST_3: tmp_s [1/1] 2.52ns
.backedge:3  %tmp_s = icmp sgt i32 %j, %n_read

ST_3: stg_23 [1/1] 1.57ns
.backedge:4  br i1 %tmp_s, label %.loopexit, label %_ifconv

ST_3: tmp_1 [1/1] 2.52ns
_ifconv:0  %tmp_1 = icmp slt i32 %j, %n_read

ST_3: j_2 [1/1] 0.00ns
_ifconv:1  %j_2 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_11, i1 true)

ST_3: tmp_2 [1/1] 0.00ns
_ifconv:2  %tmp_2 = sext i32 %j_2 to i64

ST_3: a_priority_addr_1 [1/1] 0.00ns
_ifconv:3  %a_priority_addr_1 = getelementptr [201 x i32]* %a_priority, i64 0, i64 %tmp_2

ST_3: a_priority_load [2/2] 2.39ns
_ifconv:4  %a_priority_load = load i32* %a_priority_addr_1, align 4

ST_3: tmp_3 [1/1] 0.00ns
_ifconv:5  %tmp_3 = sext i32 %j to i64

ST_3: a_priority_addr_2 [1/1] 0.00ns
_ifconv:6  %a_priority_addr_2 = getelementptr [201 x i32]* %a_priority, i64 0, i64 %tmp_3

ST_3: a_priority_load_1 [2/2] 2.39ns
_ifconv:7  %a_priority_load_1 = load i32* %a_priority_addr_2, align 4


 <State 4>: 7.65ns
ST_4: a_priority_load [1/2] 2.39ns
_ifconv:4  %a_priority_load = load i32* %a_priority_addr_1, align 4

ST_4: a_priority_load_1 [1/2] 2.39ns
_ifconv:7  %a_priority_load_1 = load i32* %a_priority_addr_2, align 4

ST_4: tmp_4 [1/1] 2.52ns
_ifconv:8  %tmp_4 = icmp slt i32 %a_priority_load, %a_priority_load_1

ST_4: p_j [1/1] 1.37ns
_ifconv:9  %p_j = select i1 %tmp_4, i32 %j_2, i32 %j

ST_4: j_1 [1/1] 1.37ns
_ifconv:10  %j_1 = select i1 %tmp_1, i32 %p_j, i32 %j


 <State 5>: 2.39ns
ST_5: tmp_5 [1/1] 0.00ns
_ifconv:11  %tmp_5 = sext i32 %j_1 to i64

ST_5: a_priority_addr_3 [1/1] 0.00ns
_ifconv:12  %a_priority_addr_3 = getelementptr [201 x i32]* %a_priority, i64 0, i64 %tmp_5

ST_5: a_priority_load_2 [2/2] 2.39ns
_ifconv:13  %a_priority_load_2 = load i32* %a_priority_addr_3, align 4


 <State 6>: 6.48ns
ST_6: a_priority_load_2 [1/2] 2.39ns
_ifconv:13  %a_priority_load_2 = load i32* %a_priority_addr_3, align 4

ST_6: tmp_6 [1/1] 2.52ns
_ifconv:14  %tmp_6 = icmp slt i32 %temp_priority, %a_priority_load_2

ST_6: stg_42 [1/1] 1.57ns
_ifconv:15  br i1 %tmp_6, label %.loopexit, label %.backedge.backedge

ST_6: a_data_addr_3 [1/1] 0.00ns
.backedge.backedge:12  %a_data_addr_3 = getelementptr [201 x i32]* %a_data, i64 0, i64 %tmp_5

ST_6: a_data_load [2/2] 2.39ns
.backedge.backedge:13  %a_data_load = load i32* %a_data_addr_3, align 4


 <State 7>: 8.64ns
ST_7: tmp_18 [1/1] 0.00ns
.backedge.backedge:0  %tmp_18 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %j_1, i32 31)

ST_7: p_neg [1/1] 2.44ns
.backedge.backedge:1  %p_neg = sub i32 0, %j_1

ST_7: p_lshr [1/1] 0.00ns
.backedge.backedge:2  %p_lshr = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %p_neg, i32 1, i32 31)

ST_7: tmp_14 [1/1] 0.00ns
.backedge.backedge:3  %tmp_14 = zext i31 %p_lshr to i32

ST_7: p_neg_t [1/1] 2.44ns
.backedge.backedge:4  %p_neg_t = sub i32 0, %tmp_14

ST_7: p_lshr_f [1/1] 0.00ns
.backedge.backedge:5  %p_lshr_f = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %j_1, i32 1, i32 31)

ST_7: tmp_15 [1/1] 0.00ns
.backedge.backedge:6  %tmp_15 = zext i31 %p_lshr_f to i32

ST_7: tmp_9 [1/1] 1.37ns
.backedge.backedge:7  %tmp_9 = select i1 %tmp_18, i32 %p_neg_t, i32 %tmp_15

ST_7: tmp_10 [1/1] 0.00ns
.backedge.backedge:8  %tmp_10 = sext i32 %tmp_9 to i64

ST_7: a_priority_addr_5 [1/1] 0.00ns
.backedge.backedge:9  %a_priority_addr_5 = getelementptr [201 x i32]* %a_priority, i64 0, i64 %tmp_10

ST_7: stg_55 [1/1] 2.39ns
.backedge.backedge:10  store i32 %a_priority_load_2, i32* %a_priority_addr_5, align 4

ST_7: a_data_addr_2 [1/1] 0.00ns
.backedge.backedge:11  %a_data_addr_2 = getelementptr [201 x i32]* %a_data, i64 0, i64 %tmp_10

ST_7: a_data_load [1/2] 2.39ns
.backedge.backedge:13  %a_data_load = load i32* %a_data_addr_3, align 4

ST_7: stg_58 [1/1] 2.39ns
.backedge.backedge:14  store i32 %a_data_load, i32* %a_data_addr_2, align 4

ST_7: stg_59 [1/1] 0.00ns
.backedge.backedge:15  br label %.backedge


 <State 8>: 8.64ns
ST_8: j_3 [1/1] 0.00ns
.loopexit:0  %j_3 = phi i32 [ %j, %.backedge ], [ %j_1, %_ifconv ]

ST_8: tmp_17 [1/1] 0.00ns
.loopexit:1  %tmp_17 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %j_3, i32 31)

ST_8: p_neg1 [1/1] 2.44ns
.loopexit:2  %p_neg1 = sub i32 0, %j_3

ST_8: p_lshr1 [1/1] 0.00ns
.loopexit:3  %p_lshr1 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %p_neg1, i32 1, i32 31)

ST_8: tmp_12 [1/1] 0.00ns
.loopexit:4  %tmp_12 = zext i31 %p_lshr1 to i32

ST_8: p_neg_t1 [1/1] 2.44ns
.loopexit:5  %p_neg_t1 = sub i32 0, %tmp_12

ST_8: p_lshr_f1 [1/1] 0.00ns
.loopexit:6  %p_lshr_f1 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %j_3, i32 1, i32 31)

ST_8: tmp_13 [1/1] 0.00ns
.loopexit:7  %tmp_13 = zext i31 %p_lshr_f1 to i32

ST_8: tmp_7 [1/1] 1.37ns
.loopexit:8  %tmp_7 = select i1 %tmp_17, i32 %p_neg_t1, i32 %tmp_13

ST_8: tmp_8 [1/1] 0.00ns
.loopexit:9  %tmp_8 = sext i32 %tmp_7 to i64

ST_8: a_priority_addr_4 [1/1] 0.00ns
.loopexit:10  %a_priority_addr_4 = getelementptr [201 x i32]* %a_priority, i64 0, i64 %tmp_8

ST_8: stg_71 [1/1] 2.39ns
.loopexit:11  store i32 %temp_priority, i32* %a_priority_addr_4, align 4

ST_8: a_data_addr_1 [1/1] 0.00ns
.loopexit:12  %a_data_addr_1 = getelementptr [201 x i32]* %a_data, i64 0, i64 %tmp_8

ST_8: stg_73 [1/1] 2.39ns
.loopexit:13  store i32 %temp_data, i32* %a_data_addr_1, align 4

ST_8: stg_74 [1/1] 0.00ns
.loopexit:14  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
