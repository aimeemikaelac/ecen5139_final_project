// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module queue (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        isPush,
        inData_priority,
        inData_data,
        ap_return_0,
        ap_return_1
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b000;
parameter    ap_ST_st2_fsm_1 = 3'b1;
parameter    ap_ST_st3_fsm_2 = 3'b10;
parameter    ap_ST_st4_fsm_3 = 3'b11;
parameter    ap_ST_st5_fsm_4 = 3'b100;
parameter    ap_ST_st6_fsm_5 = 3'b101;
parameter    ap_ST_st7_fsm_6 = 3'b110;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_7FFFFFFF = 32'b1111111111111111111111111111111;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_C8 = 32'b11001000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv31_7FFFFFFF = 31'b1111111111111111111111111111111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   isPush;
input  [8:0] inData_priority;
input  [7:0] inData_data;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg   [2:0] ap_CS_fsm = 3'b000;
reg   [31:0] size = 32'b00000000000000000000000000000000;
reg   [7:0] queueDataHeap_priority_address0;
reg    queueDataHeap_priority_ce0;
reg    queueDataHeap_priority_we0;
reg   [31:0] queueDataHeap_priority_d0;
wire   [31:0] queueDataHeap_priority_q0;
reg   [7:0] queueDataHeap_priority_address1;
reg    queueDataHeap_priority_ce1;
reg    queueDataHeap_priority_we1;
reg   [31:0] queueDataHeap_priority_d1;
wire   [31:0] queueDataHeap_priority_q1;
reg   [7:0] queueDataHeap_data_address0;
reg    queueDataHeap_data_ce0;
reg    queueDataHeap_data_we0;
reg   [31:0] queueDataHeap_data_d0;
wire   [31:0] queueDataHeap_data_q0;
reg   [7:0] queueDataHeap_data_address1;
reg    queueDataHeap_data_ce1;
reg    queueDataHeap_data_we1;
wire   [31:0] queueDataHeap_data_d1;
wire   [31:0] queueDataHeap_data_q1;
wire   [31:0] inData_data_cast_fu_181_p1;
reg   [31:0] inData_data_cast_reg_406;
wire   [31:0] inData_priority_cast_fu_186_p1;
reg   [31:0] inData_priority_cast_reg_411;
reg   [31:0] size_load_reg_416;
wire   [0:0] isPush_read_read_fu_58_p2;
wire   [0:0] tmp_s_fu_195_p2;
wire   [31:0] n_assign_fu_213_p2;
reg   [31:0] n_assign_reg_438;
wire   [0:0] tmp_fu_207_p2;
wire   [31:0] i_fu_273_p3;
reg   [31:0] queueDataHeap_priority_load_reg_449;
reg   [31:0] queueDataHeap_data_load_reg_454;
wire   [31:0] n_assign_1_fu_281_p2;
reg   [31:0] n_assign_1_reg_459;
wire   [31:0] i_9_fu_333_p3;
wire   [31:0] i_11_cast_fu_357_p1;
reg   [31:0] i_11_cast_reg_473;
wire   [0:0] tmp_i_i1_fu_341_p2;
wire   [31:0] i_10_cast_fu_382_p1;
reg   [31:0] i_10_cast_reg_481;
wire   [0:0] tmp_i_i_fu_366_p2;
wire    grp_min_heapify_fu_169_ap_start;
wire    grp_min_heapify_fu_169_ap_done;
wire    grp_min_heapify_fu_169_ap_idle;
wire    grp_min_heapify_fu_169_ap_ready;
wire   [7:0] grp_min_heapify_fu_169_a_priority_address0;
wire    grp_min_heapify_fu_169_a_priority_ce0;
wire    grp_min_heapify_fu_169_a_priority_we0;
wire   [31:0] grp_min_heapify_fu_169_a_priority_d0;
wire   [31:0] grp_min_heapify_fu_169_a_priority_q0;
wire   [7:0] grp_min_heapify_fu_169_a_priority_address1;
wire    grp_min_heapify_fu_169_a_priority_ce1;
wire    grp_min_heapify_fu_169_a_priority_we1;
wire   [31:0] grp_min_heapify_fu_169_a_priority_d1;
wire   [31:0] grp_min_heapify_fu_169_a_priority_q1;
wire   [7:0] grp_min_heapify_fu_169_a_data_address0;
wire    grp_min_heapify_fu_169_a_data_ce0;
wire    grp_min_heapify_fu_169_a_data_we0;
wire   [31:0] grp_min_heapify_fu_169_a_data_d0;
wire   [31:0] grp_min_heapify_fu_169_a_data_q0;
reg   [31:0] grp_min_heapify_fu_169_i;
reg   [31:0] grp_min_heapify_fu_169_n;
reg   [31:0] i9_i_i1_reg_116;
reg   [31:0] i9_i_i_reg_126;
reg   [31:0] outData_priority_2_reg_136;
reg   [31:0] outData_data_2_reg_152;
reg    grp_min_heapify_fu_169_ap_start_ap_start_reg = 1'b0;
wire   [63:0] tmp_i1_fu_201_p1;
wire   [63:0] tmp_i_fu_219_p1;
wire   [30:0] p_neg_i_i_cast_fu_233_p4;
wire   [30:0] p_lshr_i_i_fu_243_p2;
wire   [31:0] p_lshr_i_i_cast_fu_249_p1;
wire   [30:0] p_lshr_f_i_i_fu_259_p4;
wire   [0:0] tmp_19_fu_225_p3;
wire   [31:0] p_neg_t_i_i_fu_253_p2;
wire   [31:0] tmp_16_fu_269_p1;
wire   [31:0] p_neg_i_i7_fu_294_p2;
wire   [30:0] p_lshr_i_i8_fu_299_p4;
wire   [31:0] tmp_17_fu_309_p1;
wire   [30:0] p_lshr_f_i_i1_fu_319_p4;
wire   [0:0] tmp_20_fu_286_p3;
wire   [31:0] p_neg_t_i_i9_fu_313_p2;
wire   [31:0] tmp_18_fu_329_p1;
wire   [30:0] tmp_22_fu_347_p1;
wire   [30:0] i_11_fu_351_p2;
wire   [30:0] tmp_21_fu_372_p1;
wire   [30:0] i_10_fu_376_p2;
reg   [31:0] ap_return_0_preg = 32'b00000000000000000000000000000000;
reg   [31:0] ap_return_1_preg = 32'b00000000000000000000000000000000;
reg   [2:0] ap_NS_fsm;


queue_queueDataHeap_priority #(
    .DataWidth( 32 ),
    .AddressRange( 201 ),
    .AddressWidth( 8 ))
queueDataHeap_priority_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( queueDataHeap_priority_address0 ),
    .ce0( queueDataHeap_priority_ce0 ),
    .we0( queueDataHeap_priority_we0 ),
    .d0( queueDataHeap_priority_d0 ),
    .q0( queueDataHeap_priority_q0 ),
    .address1( queueDataHeap_priority_address1 ),
    .ce1( queueDataHeap_priority_ce1 ),
    .we1( queueDataHeap_priority_we1 ),
    .d1( queueDataHeap_priority_d1 ),
    .q1( queueDataHeap_priority_q1 )
);

queue_queueDataHeap_priority #(
    .DataWidth( 32 ),
    .AddressRange( 201 ),
    .AddressWidth( 8 ))
queueDataHeap_data_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( queueDataHeap_data_address0 ),
    .ce0( queueDataHeap_data_ce0 ),
    .we0( queueDataHeap_data_we0 ),
    .d0( queueDataHeap_data_d0 ),
    .q0( queueDataHeap_data_q0 ),
    .address1( queueDataHeap_data_address1 ),
    .ce1( queueDataHeap_data_ce1 ),
    .we1( queueDataHeap_data_we1 ),
    .d1( queueDataHeap_data_d1 ),
    .q1( queueDataHeap_data_q1 )
);

min_heapify grp_min_heapify_fu_169(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_min_heapify_fu_169_ap_start ),
    .ap_done( grp_min_heapify_fu_169_ap_done ),
    .ap_idle( grp_min_heapify_fu_169_ap_idle ),
    .ap_ready( grp_min_heapify_fu_169_ap_ready ),
    .a_priority_address0( grp_min_heapify_fu_169_a_priority_address0 ),
    .a_priority_ce0( grp_min_heapify_fu_169_a_priority_ce0 ),
    .a_priority_we0( grp_min_heapify_fu_169_a_priority_we0 ),
    .a_priority_d0( grp_min_heapify_fu_169_a_priority_d0 ),
    .a_priority_q0( grp_min_heapify_fu_169_a_priority_q0 ),
    .a_priority_address1( grp_min_heapify_fu_169_a_priority_address1 ),
    .a_priority_ce1( grp_min_heapify_fu_169_a_priority_ce1 ),
    .a_priority_we1( grp_min_heapify_fu_169_a_priority_we1 ),
    .a_priority_d1( grp_min_heapify_fu_169_a_priority_d1 ),
    .a_priority_q1( grp_min_heapify_fu_169_a_priority_q1 ),
    .a_data_address0( grp_min_heapify_fu_169_a_data_address0 ),
    .a_data_ce0( grp_min_heapify_fu_169_a_data_ce0 ),
    .a_data_we0( grp_min_heapify_fu_169_a_data_we0 ),
    .a_data_d0( grp_min_heapify_fu_169_a_data_d0 ),
    .a_data_q0( grp_min_heapify_fu_169_a_data_q0 ),
    .i( grp_min_heapify_fu_169_i ),
    .n( grp_min_heapify_fu_169_n )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_return_0_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_0_preg
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= ap_const_lv32_0;
    end else begin
        if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
            ap_return_0_preg <= outData_priority_2_reg_136;
        end
    end
end

/// ap_return_1_preg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_return_1_preg
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= ap_const_lv32_0;
    end else begin
        if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
            ap_return_1_preg <= outData_data_2_reg_152;
        end
    end
end

/// grp_min_heapify_fu_169_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_min_heapify_fu_169_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_min_heapify_fu_169_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_i_i1_fu_341_p2)) | ((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_i_i_fu_366_p2)))) begin
            grp_min_heapify_fu_169_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_min_heapify_fu_169_ap_ready)) begin
            grp_min_heapify_fu_169_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_min_heapify_fu_169_ap_done))) begin
        i9_i_i1_reg_116 <= i_11_cast_reg_473;
    end else if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        i9_i_i1_reg_116 <= i_9_fu_333_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_const_logic_0 == grp_min_heapify_fu_169_ap_done) & (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        i9_i_i_reg_126 <= i_10_cast_reg_481;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_207_p2))) begin
        i9_i_i_reg_126 <= i_fu_273_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_207_p2)) | ((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (isPush_read_read_fu_58_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_s_fu_195_p2)))) begin
        outData_data_2_reg_152 <= ap_const_lv32_FFFFFFFF;
    end else if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_i_i1_fu_341_p2))) begin
        outData_data_2_reg_152 <= queueDataHeap_data_load_reg_454;
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_i_i_fu_366_p2))) begin
        outData_data_2_reg_152 <= inData_data_cast_reg_406;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_207_p2)) | ((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (isPush_read_read_fu_58_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_s_fu_195_p2)))) begin
        outData_priority_2_reg_136 <= ap_const_lv32_7FFFFFFF;
    end else if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_i_i1_fu_341_p2))) begin
        outData_priority_2_reg_136 <= queueDataHeap_priority_load_reg_449;
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_i_i_fu_366_p2))) begin
        outData_priority_2_reg_136 <= inData_priority_cast_reg_411;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_i_i_fu_366_p2))) begin
        size <= n_assign_reg_438;
    end else if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_i_i1_fu_341_p2))) begin
        size <= n_assign_1_reg_459;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_i_i_fu_366_p2))) begin
        i_10_cast_reg_481[0] <= i_10_cast_fu_382_p1[0];
i_10_cast_reg_481[1] <= i_10_cast_fu_382_p1[1];
i_10_cast_reg_481[2] <= i_10_cast_fu_382_p1[2];
i_10_cast_reg_481[3] <= i_10_cast_fu_382_p1[3];
i_10_cast_reg_481[4] <= i_10_cast_fu_382_p1[4];
i_10_cast_reg_481[5] <= i_10_cast_fu_382_p1[5];
i_10_cast_reg_481[6] <= i_10_cast_fu_382_p1[6];
i_10_cast_reg_481[7] <= i_10_cast_fu_382_p1[7];
i_10_cast_reg_481[8] <= i_10_cast_fu_382_p1[8];
i_10_cast_reg_481[9] <= i_10_cast_fu_382_p1[9];
i_10_cast_reg_481[10] <= i_10_cast_fu_382_p1[10];
i_10_cast_reg_481[11] <= i_10_cast_fu_382_p1[11];
i_10_cast_reg_481[12] <= i_10_cast_fu_382_p1[12];
i_10_cast_reg_481[13] <= i_10_cast_fu_382_p1[13];
i_10_cast_reg_481[14] <= i_10_cast_fu_382_p1[14];
i_10_cast_reg_481[15] <= i_10_cast_fu_382_p1[15];
i_10_cast_reg_481[16] <= i_10_cast_fu_382_p1[16];
i_10_cast_reg_481[17] <= i_10_cast_fu_382_p1[17];
i_10_cast_reg_481[18] <= i_10_cast_fu_382_p1[18];
i_10_cast_reg_481[19] <= i_10_cast_fu_382_p1[19];
i_10_cast_reg_481[20] <= i_10_cast_fu_382_p1[20];
i_10_cast_reg_481[21] <= i_10_cast_fu_382_p1[21];
i_10_cast_reg_481[22] <= i_10_cast_fu_382_p1[22];
i_10_cast_reg_481[23] <= i_10_cast_fu_382_p1[23];
i_10_cast_reg_481[24] <= i_10_cast_fu_382_p1[24];
i_10_cast_reg_481[25] <= i_10_cast_fu_382_p1[25];
i_10_cast_reg_481[26] <= i_10_cast_fu_382_p1[26];
i_10_cast_reg_481[27] <= i_10_cast_fu_382_p1[27];
i_10_cast_reg_481[28] <= i_10_cast_fu_382_p1[28];
i_10_cast_reg_481[29] <= i_10_cast_fu_382_p1[29];
i_10_cast_reg_481[30] <= i_10_cast_fu_382_p1[30];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_i_i1_fu_341_p2))) begin
        i_11_cast_reg_473[0] <= i_11_cast_fu_357_p1[0];
i_11_cast_reg_473[1] <= i_11_cast_fu_357_p1[1];
i_11_cast_reg_473[2] <= i_11_cast_fu_357_p1[2];
i_11_cast_reg_473[3] <= i_11_cast_fu_357_p1[3];
i_11_cast_reg_473[4] <= i_11_cast_fu_357_p1[4];
i_11_cast_reg_473[5] <= i_11_cast_fu_357_p1[5];
i_11_cast_reg_473[6] <= i_11_cast_fu_357_p1[6];
i_11_cast_reg_473[7] <= i_11_cast_fu_357_p1[7];
i_11_cast_reg_473[8] <= i_11_cast_fu_357_p1[8];
i_11_cast_reg_473[9] <= i_11_cast_fu_357_p1[9];
i_11_cast_reg_473[10] <= i_11_cast_fu_357_p1[10];
i_11_cast_reg_473[11] <= i_11_cast_fu_357_p1[11];
i_11_cast_reg_473[12] <= i_11_cast_fu_357_p1[12];
i_11_cast_reg_473[13] <= i_11_cast_fu_357_p1[13];
i_11_cast_reg_473[14] <= i_11_cast_fu_357_p1[14];
i_11_cast_reg_473[15] <= i_11_cast_fu_357_p1[15];
i_11_cast_reg_473[16] <= i_11_cast_fu_357_p1[16];
i_11_cast_reg_473[17] <= i_11_cast_fu_357_p1[17];
i_11_cast_reg_473[18] <= i_11_cast_fu_357_p1[18];
i_11_cast_reg_473[19] <= i_11_cast_fu_357_p1[19];
i_11_cast_reg_473[20] <= i_11_cast_fu_357_p1[20];
i_11_cast_reg_473[21] <= i_11_cast_fu_357_p1[21];
i_11_cast_reg_473[22] <= i_11_cast_fu_357_p1[22];
i_11_cast_reg_473[23] <= i_11_cast_fu_357_p1[23];
i_11_cast_reg_473[24] <= i_11_cast_fu_357_p1[24];
i_11_cast_reg_473[25] <= i_11_cast_fu_357_p1[25];
i_11_cast_reg_473[26] <= i_11_cast_fu_357_p1[26];
i_11_cast_reg_473[27] <= i_11_cast_fu_357_p1[27];
i_11_cast_reg_473[28] <= i_11_cast_fu_357_p1[28];
i_11_cast_reg_473[29] <= i_11_cast_fu_357_p1[29];
i_11_cast_reg_473[30] <= i_11_cast_fu_357_p1[30];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0))) begin
        inData_data_cast_reg_406[0] <= inData_data_cast_fu_181_p1[0];
inData_data_cast_reg_406[1] <= inData_data_cast_fu_181_p1[1];
inData_data_cast_reg_406[2] <= inData_data_cast_fu_181_p1[2];
inData_data_cast_reg_406[3] <= inData_data_cast_fu_181_p1[3];
inData_data_cast_reg_406[4] <= inData_data_cast_fu_181_p1[4];
inData_data_cast_reg_406[5] <= inData_data_cast_fu_181_p1[5];
inData_data_cast_reg_406[6] <= inData_data_cast_fu_181_p1[6];
inData_data_cast_reg_406[7] <= inData_data_cast_fu_181_p1[7];
        inData_priority_cast_reg_411[0] <= inData_priority_cast_fu_186_p1[0];
inData_priority_cast_reg_411[1] <= inData_priority_cast_fu_186_p1[1];
inData_priority_cast_reg_411[2] <= inData_priority_cast_fu_186_p1[2];
inData_priority_cast_reg_411[3] <= inData_priority_cast_fu_186_p1[3];
inData_priority_cast_reg_411[4] <= inData_priority_cast_fu_186_p1[4];
inData_priority_cast_reg_411[5] <= inData_priority_cast_fu_186_p1[5];
inData_priority_cast_reg_411[6] <= inData_priority_cast_fu_186_p1[6];
inData_priority_cast_reg_411[7] <= inData_priority_cast_fu_186_p1[7];
inData_priority_cast_reg_411[8] <= inData_priority_cast_fu_186_p1[8];
        size_load_reg_416 <= size;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        n_assign_1_reg_459 <= n_assign_1_fu_281_p2;
        queueDataHeap_data_load_reg_454 <= queueDataHeap_data_q0;
        queueDataHeap_priority_load_reg_449 <= queueDataHeap_priority_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_207_p2))) begin
        n_assign_reg_438 <= n_assign_fu_213_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | (ap_ST_st7_fsm_6 == ap_CS_fsm))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_return_0 assign process. ///
always @ (ap_CS_fsm or outData_priority_2_reg_136 or ap_return_0_preg)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        ap_return_0 = outData_priority_2_reg_136;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

/// ap_return_1 assign process. ///
always @ (ap_CS_fsm or outData_data_2_reg_152 or ap_return_1_preg)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        ap_return_1 = outData_data_2_reg_152;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

/// grp_min_heapify_fu_169_i assign process. ///
always @ (ap_CS_fsm or i9_i_i1_reg_116 or i9_i_i_reg_126)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        grp_min_heapify_fu_169_i = i9_i_i_reg_126;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        grp_min_heapify_fu_169_i = i9_i_i1_reg_116;
    end else begin
        grp_min_heapify_fu_169_i = 'bx;
    end
end

/// grp_min_heapify_fu_169_n assign process. ///
always @ (ap_CS_fsm or n_assign_reg_438 or n_assign_1_reg_459)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        grp_min_heapify_fu_169_n = n_assign_reg_438;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        grp_min_heapify_fu_169_n = n_assign_1_reg_459;
    end else begin
        grp_min_heapify_fu_169_n = 'bx;
    end
end

/// queueDataHeap_data_address0 assign process. ///
always @ (ap_CS_fsm or isPush_read_read_fu_58_p2 or tmp_s_fu_195_p2 or tmp_fu_207_p2 or grp_min_heapify_fu_169_a_data_address0 or tmp_i_fu_219_p1)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_207_p2))) begin
        queueDataHeap_data_address0 = tmp_i_fu_219_p1;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & (isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_s_fu_195_p2))) begin
        queueDataHeap_data_address0 = ap_const_lv8_1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        queueDataHeap_data_address0 = grp_min_heapify_fu_169_a_data_address0;
    end else begin
        queueDataHeap_data_address0 = 'bx;
    end
end

/// queueDataHeap_data_address1 assign process. ///
always @ (ap_CS_fsm or tmp_i1_fu_201_p1)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        queueDataHeap_data_address1 = ap_const_lv8_1;
    end else if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        queueDataHeap_data_address1 = tmp_i1_fu_201_p1;
    end else begin
        queueDataHeap_data_address1 = 'bx;
    end
end

/// queueDataHeap_data_ce0 assign process. ///
always @ (ap_start or ap_CS_fsm or isPush_read_read_fu_58_p2 or tmp_s_fu_195_p2 or tmp_fu_207_p2 or grp_min_heapify_fu_169_a_data_ce0)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_s_fu_195_p2)) | ((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_207_p2)))) begin
        queueDataHeap_data_ce0 = ap_const_logic_1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        queueDataHeap_data_ce0 = grp_min_heapify_fu_169_a_data_ce0;
    end else begin
        queueDataHeap_data_ce0 = ap_const_logic_0;
    end
end

/// queueDataHeap_data_ce1 assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        queueDataHeap_data_ce1 = ap_const_logic_1;
    end else begin
        queueDataHeap_data_ce1 = ap_const_logic_0;
    end
end

/// queueDataHeap_data_d0 assign process. ///
always @ (ap_CS_fsm or inData_data_cast_fu_181_p1 or isPush_read_read_fu_58_p2 or tmp_fu_207_p2 or grp_min_heapify_fu_169_a_data_d0)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_207_p2))) begin
        queueDataHeap_data_d0 = inData_data_cast_fu_181_p1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        queueDataHeap_data_d0 = grp_min_heapify_fu_169_a_data_d0;
    end else begin
        queueDataHeap_data_d0 = 'bx;
    end
end

/// queueDataHeap_data_we0 assign process. ///
always @ (ap_start or ap_CS_fsm or isPush_read_read_fu_58_p2 or tmp_fu_207_p2 or grp_min_heapify_fu_169_a_data_we0)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_207_p2))) begin
        queueDataHeap_data_we0 = ap_const_logic_1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        queueDataHeap_data_we0 = grp_min_heapify_fu_169_a_data_we0;
    end else begin
        queueDataHeap_data_we0 = ap_const_logic_0;
    end
end

/// queueDataHeap_data_we1 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        queueDataHeap_data_we1 = ap_const_logic_1;
    end else begin
        queueDataHeap_data_we1 = ap_const_logic_0;
    end
end

/// queueDataHeap_priority_address0 assign process. ///
always @ (ap_CS_fsm or isPush_read_read_fu_58_p2 or tmp_s_fu_195_p2 or tmp_fu_207_p2 or grp_min_heapify_fu_169_a_priority_address0 or tmp_i_fu_219_p1)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_207_p2))) begin
        queueDataHeap_priority_address0 = tmp_i_fu_219_p1;
    end else if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & (isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_s_fu_195_p2))) begin
        queueDataHeap_priority_address0 = ap_const_lv8_1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        queueDataHeap_priority_address0 = grp_min_heapify_fu_169_a_priority_address0;
    end else begin
        queueDataHeap_priority_address0 = 'bx;
    end
end

/// queueDataHeap_priority_address1 assign process. ///
always @ (ap_CS_fsm or grp_min_heapify_fu_169_a_priority_address1 or tmp_i1_fu_201_p1)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        queueDataHeap_priority_address1 = ap_const_lv8_1;
    end else if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        queueDataHeap_priority_address1 = tmp_i1_fu_201_p1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        queueDataHeap_priority_address1 = grp_min_heapify_fu_169_a_priority_address1;
    end else begin
        queueDataHeap_priority_address1 = 'bx;
    end
end

/// queueDataHeap_priority_ce0 assign process. ///
always @ (ap_start or ap_CS_fsm or isPush_read_read_fu_58_p2 or tmp_s_fu_195_p2 or tmp_fu_207_p2 or grp_min_heapify_fu_169_a_priority_ce0)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & (isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_s_fu_195_p2)) | ((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_207_p2)))) begin
        queueDataHeap_priority_ce0 = ap_const_logic_1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        queueDataHeap_priority_ce0 = grp_min_heapify_fu_169_a_priority_ce0;
    end else begin
        queueDataHeap_priority_ce0 = ap_const_logic_0;
    end
end

/// queueDataHeap_priority_ce1 assign process. ///
always @ (ap_start or ap_CS_fsm or grp_min_heapify_fu_169_a_priority_ce1)
begin
    if ((((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0)) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        queueDataHeap_priority_ce1 = ap_const_logic_1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        queueDataHeap_priority_ce1 = grp_min_heapify_fu_169_a_priority_ce1;
    end else begin
        queueDataHeap_priority_ce1 = ap_const_logic_0;
    end
end

/// queueDataHeap_priority_d0 assign process. ///
always @ (ap_CS_fsm or inData_priority_cast_fu_186_p1 or isPush_read_read_fu_58_p2 or tmp_fu_207_p2 or grp_min_heapify_fu_169_a_priority_d0)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_207_p2))) begin
        queueDataHeap_priority_d0 = inData_priority_cast_fu_186_p1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        queueDataHeap_priority_d0 = grp_min_heapify_fu_169_a_priority_d0;
    end else begin
        queueDataHeap_priority_d0 = 'bx;
    end
end

/// queueDataHeap_priority_d1 assign process. ///
always @ (ap_CS_fsm or queueDataHeap_priority_q1 or grp_min_heapify_fu_169_a_priority_d1)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        queueDataHeap_priority_d1 = queueDataHeap_priority_q1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        queueDataHeap_priority_d1 = grp_min_heapify_fu_169_a_priority_d1;
    end else begin
        queueDataHeap_priority_d1 = 'bx;
    end
end

/// queueDataHeap_priority_we0 assign process. ///
always @ (ap_start or ap_CS_fsm or isPush_read_read_fu_58_p2 or tmp_fu_207_p2 or grp_min_heapify_fu_169_a_priority_we0)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~(ap_start == ap_const_logic_0) & ~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_207_p2))) begin
        queueDataHeap_priority_we0 = ap_const_logic_1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        queueDataHeap_priority_we0 = grp_min_heapify_fu_169_a_priority_we0;
    end else begin
        queueDataHeap_priority_we0 = ap_const_logic_0;
    end
end

/// queueDataHeap_priority_we1 assign process. ///
always @ (ap_CS_fsm or grp_min_heapify_fu_169_a_priority_we1)
begin
    if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
        queueDataHeap_priority_we1 = ap_const_logic_1;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st6_fsm_5 == ap_CS_fsm))) begin
        queueDataHeap_priority_we1 = grp_min_heapify_fu_169_a_priority_we1;
    end else begin
        queueDataHeap_priority_we1 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or isPush_read_read_fu_58_p2 or tmp_s_fu_195_p2 or tmp_fu_207_p2 or tmp_i_i1_fu_341_p2 or tmp_i_i_fu_366_p2 or grp_min_heapify_fu_169_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if ((~(ap_start == ap_const_logic_0) & ~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_fu_207_p2))) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else if ((~(ap_start == ap_const_logic_0) & ((~(isPush_read_read_fu_58_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_fu_207_p2)) | ((isPush_read_read_fu_58_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_s_fu_195_p2))))) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else if ((~(ap_start == ap_const_logic_0) & (isPush_read_read_fu_58_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_s_fu_195_p2))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
        ap_ST_st3_fsm_2 : 
            if ((ap_const_lv1_0 == tmp_i_i1_fu_341_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st4_fsm_3 : 
            if (~(ap_const_logic_0 == grp_min_heapify_fu_169_ap_done)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st5_fsm_4 : 
            if ((ap_const_lv1_0 == tmp_i_i_fu_366_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        ap_ST_st6_fsm_5 : 
            if (~(ap_const_logic_0 == grp_min_heapify_fu_169_ap_done)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        ap_ST_st7_fsm_6 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign grp_min_heapify_fu_169_a_data_q0 = queueDataHeap_data_q0;
assign grp_min_heapify_fu_169_a_priority_q0 = queueDataHeap_priority_q0;
assign grp_min_heapify_fu_169_a_priority_q1 = queueDataHeap_priority_q1;
assign grp_min_heapify_fu_169_ap_start = grp_min_heapify_fu_169_ap_start_ap_start_reg;
assign i_10_cast_fu_382_p1 = $unsigned(i_10_fu_376_p2);
assign i_10_fu_376_p2 = (tmp_21_fu_372_p1 + ap_const_lv31_7FFFFFFF);
assign i_11_cast_fu_357_p1 = $unsigned(i_11_fu_351_p2);
assign i_11_fu_351_p2 = (tmp_22_fu_347_p1 + ap_const_lv31_7FFFFFFF);
assign i_9_fu_333_p3 = ((tmp_20_fu_286_p3)? p_neg_t_i_i9_fu_313_p2: tmp_18_fu_329_p1);
assign i_fu_273_p3 = ((tmp_19_fu_225_p3)? p_neg_t_i_i_fu_253_p2: tmp_16_fu_269_p1);
assign inData_data_cast_fu_181_p1 = $unsigned(inData_data);
assign inData_priority_cast_fu_186_p1 = $unsigned(inData_priority);
assign isPush_read_read_fu_58_p2 = isPush;
assign n_assign_1_fu_281_p2 = (size_load_reg_416 + ap_const_lv32_FFFFFFFF);
assign n_assign_fu_213_p2 = (size + ap_const_lv32_1);
assign p_lshr_f_i_i1_fu_319_p4 = {{n_assign_1_fu_281_p2[ap_const_lv32_1F : ap_const_lv32_1]}};
assign p_lshr_f_i_i_fu_259_p4 = {{n_assign_fu_213_p2[ap_const_lv32_1F : ap_const_lv32_1]}};
assign p_lshr_i_i8_fu_299_p4 = {{p_neg_i_i7_fu_294_p2[ap_const_lv32_1F : ap_const_lv32_1]}};
assign p_lshr_i_i_cast_fu_249_p1 = $unsigned(p_lshr_i_i_fu_243_p2);
assign p_lshr_i_i_fu_243_p2 = (p_neg_i_i_cast_fu_233_p4 ^ ap_const_lv31_7FFFFFFF);
assign p_neg_i_i7_fu_294_p2 = (ap_const_lv32_1 - size_load_reg_416);
assign p_neg_i_i_cast_fu_233_p4 = {{size[ap_const_lv32_1F : ap_const_lv32_1]}};
assign p_neg_t_i_i9_fu_313_p2 = (ap_const_lv32_0 - tmp_17_fu_309_p1);
assign p_neg_t_i_i_fu_253_p2 = (ap_const_lv32_0 - p_lshr_i_i_cast_fu_249_p1);
assign queueDataHeap_data_d1 = queueDataHeap_data_q1;
assign tmp_16_fu_269_p1 = $unsigned(p_lshr_f_i_i_fu_259_p4);
assign tmp_17_fu_309_p1 = $unsigned(p_lshr_i_i8_fu_299_p4);
assign tmp_18_fu_329_p1 = $unsigned(p_lshr_f_i_i1_fu_319_p4);
assign tmp_19_fu_225_p3 = n_assign_fu_213_p2[ap_const_lv32_1F];
assign tmp_20_fu_286_p3 = n_assign_1_fu_281_p2[ap_const_lv32_1F];
assign tmp_21_fu_372_p1 = i9_i_i_reg_126[30:0];
assign tmp_22_fu_347_p1 = i9_i_i1_reg_116[30:0];
assign tmp_fu_207_p2 = (size == ap_const_lv32_C8? 1'b1: 1'b0);
assign tmp_i1_fu_201_p1 = $signed(size);
assign tmp_i_fu_219_p1 = $signed(n_assign_fu_213_p2);
assign tmp_i_i1_fu_341_p2 = ($signed(i9_i_i1_reg_116) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_i_i_fu_366_p2 = ($signed(i9_i_i_reg_126) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);
assign tmp_s_fu_195_p2 = (size == ap_const_lv32_0? 1'b1: 1'b0);
always @ (posedge ap_clk)
begin
    inData_data_cast_reg_406[31:8] <= 24'b000000000000000000000000;
    inData_priority_cast_reg_411[31:9] <= 23'b00000000000000000000000;
    i_11_cast_reg_473[31] <= 1'b0;
    i_10_cast_reg_481[31] <= 1'b0;
end



endmodule //queue

