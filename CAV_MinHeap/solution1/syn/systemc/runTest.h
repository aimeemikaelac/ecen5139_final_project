// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _runTest_HH_
#define _runTest_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "queue.h"
#include "runTest_random_priorities.h"
#include "runTest_dequeuedItems.h"

namespace ap_rtl {

struct runTest : public sc_module {
    // Port declarations 7
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    runTest(sc_module_name name);
    SC_HAS_PROCESS(runTest);

    ~runTest();

    sc_trace_file* mVcdFile;

    runTest_random_priorities* random_priorities_U;
    runTest_dequeuedItems* dequeuedItems_U;
    queue* grp_queue_fu_170;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_lv<8> > random_priorities_address0;
    sc_signal< sc_logic > random_priorities_ce0;
    sc_signal< sc_lv<9> > random_priorities_q0;
    sc_signal< sc_lv<8> > i_fu_202_p2;
    sc_signal< sc_lv<8> > i_reg_369;
    sc_signal< sc_lv<8> > current_data_fu_208_p2;
    sc_signal< sc_lv<8> > current_data_reg_374;
    sc_signal< sc_lv<1> > exitcond4_fu_196_p2;
    sc_signal< sc_lv<9> > current_priority_cast6_cast_fu_215_p1;
    sc_signal< sc_lv<9> > current_priority_cast6_cast_reg_379;
    sc_signal< sc_lv<32> > i_1_cast5_fu_220_p1;
    sc_signal< sc_lv<32> > i_1_cast5_reg_384;
    sc_signal< sc_lv<8> > i_6_fu_230_p2;
    sc_signal< sc_lv<8> > i_6_reg_392;
    sc_signal< sc_lv<1> > result_s_fu_263_p2;
    sc_signal< sc_logic > grp_queue_fu_170_ap_done;
    sc_signal< sc_lv<8> > i_5_fu_275_p2;
    sc_signal< sc_lv<8> > i_5_reg_405;
    sc_signal< sc_lv<1> > exitcond2_fu_269_p2;
    sc_signal< sc_lv<8> > current_data_1_fu_286_p2;
    sc_signal< sc_lv<8> > current_data_1_reg_415;
    sc_signal< sc_lv<9> > current_priority_1_reg_420;
    sc_signal< sc_lv<8> > i_7_fu_299_p2;
    sc_signal< sc_lv<8> > i_8_fu_316_p2;
    sc_signal< sc_lv<8> > i_8_reg_436;
    sc_signal< sc_lv<32> > out_priority_2_reg_441;
    sc_signal< sc_lv<32> > out_data_1_reg_446;
    sc_signal< sc_lv<1> > slt_fu_322_p2;
    sc_signal< sc_lv<1> > slt_reg_452;
    sc_signal< sc_lv<8> > dequeuedItems_addr_1_reg_457;
    sc_signal< sc_lv<1> > tmp_7_fu_355_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_462;
    sc_signal< sc_lv<1> > result_4_fu_361_p2;
    sc_signal< sc_lv<8> > dequeuedItems_address0;
    sc_signal< sc_logic > dequeuedItems_ce0;
    sc_signal< sc_logic > dequeuedItems_we0;
    sc_signal< sc_lv<32> > dequeuedItems_d0;
    sc_signal< sc_lv<32> > dequeuedItems_q0;
    sc_signal< sc_logic > grp_queue_fu_170_ap_start;
    sc_signal< sc_logic > grp_queue_fu_170_ap_idle;
    sc_signal< sc_logic > grp_queue_fu_170_ap_ready;
    sc_signal< sc_logic > grp_queue_fu_170_isPush;
    sc_signal< sc_lv<9> > grp_queue_fu_170_inData_priority;
    sc_signal< sc_lv<8> > grp_queue_fu_170_inData_data;
    sc_signal< sc_lv<32> > grp_queue_fu_170_ap_return_0;
    sc_signal< sc_lv<32> > grp_queue_fu_170_ap_return_1;
    sc_signal< sc_lv<8> > current_priority_reg_77;
    sc_signal< sc_lv<1> > result_reg_88;
    sc_signal< sc_lv<8> > i_1_reg_100;
    sc_signal< sc_lv<8> > i_2_reg_112;
    sc_signal< sc_lv<1> > exitcond3_fu_224_p2;
    sc_signal< sc_lv<8> > i_3_reg_124;
    sc_signal< sc_lv<1> > exitcond1_fu_293_p2;
    sc_signal< sc_lv<32> > last_reg_135;
    sc_signal< sc_lv<1> > result_2_reg_147;
    sc_signal< sc_lv<8> > i_4_reg_158;
    sc_signal< sc_logic > grp_queue_fu_170_ap_start_ap_start_reg;
    sc_signal< sc_lv<1> > exitcond_fu_310_p2;
    sc_signal< sc_lv<64> > tmp_6_fu_281_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_305_p1;
    sc_signal< sc_lv<64> > tmp_1_fu_328_p1;
    sc_signal< sc_lv<8> > tmp_3_fu_241_p2;
    sc_signal< sc_lv<32> > tmp_3_cast_fu_247_p1;
    sc_signal< sc_lv<1> > tmp_4_fu_251_p2;
    sc_signal< sc_lv<1> > tmp_fu_236_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_257_p2;
    sc_signal< sc_lv<1> > notlhs_fu_338_p2;
    sc_signal< sc_lv<1> > notrhs_fu_343_p2;
    sc_signal< sc_lv<1> > tmp2_fu_349_p2;
    sc_signal< sc_lv<1> > rev1_fu_333_p2;
    sc_signal< sc_lv<1> > ap_return_preg;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_st3_fsm_2;
    static const sc_lv<4> ap_ST_st4_fsm_3;
    static const sc_lv<4> ap_ST_st5_fsm_4;
    static const sc_lv<4> ap_ST_st6_fsm_5;
    static const sc_lv<4> ap_ST_st7_fsm_6;
    static const sc_lv<4> ap_ST_st8_fsm_7;
    static const sc_lv<4> ap_ST_st9_fsm_8;
    static const sc_lv<4> ap_ST_st10_fsm_9;
    static const sc_lv<4> ap_ST_st11_fsm_10;
    static const sc_lv<4> ap_ST_st12_fsm_11;
    static const sc_lv<4> ap_ST_st13_fsm_12;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<8> ap_const_lv8_C8;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_C7;
    static const sc_lv<32> ap_const_lv32_C8;
    static const sc_lv<32> ap_const_lv32_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_current_data_1_fu_286_p2();
    void thread_current_data_fu_208_p2();
    void thread_current_priority_cast6_cast_fu_215_p1();
    void thread_dequeuedItems_address0();
    void thread_dequeuedItems_ce0();
    void thread_dequeuedItems_d0();
    void thread_dequeuedItems_we0();
    void thread_exitcond1_fu_293_p2();
    void thread_exitcond2_fu_269_p2();
    void thread_exitcond3_fu_224_p2();
    void thread_exitcond4_fu_196_p2();
    void thread_exitcond_fu_310_p2();
    void thread_grp_queue_fu_170_ap_start();
    void thread_grp_queue_fu_170_inData_data();
    void thread_grp_queue_fu_170_inData_priority();
    void thread_grp_queue_fu_170_isPush();
    void thread_i_1_cast5_fu_220_p1();
    void thread_i_5_fu_275_p2();
    void thread_i_6_fu_230_p2();
    void thread_i_7_fu_299_p2();
    void thread_i_8_fu_316_p2();
    void thread_i_fu_202_p2();
    void thread_notlhs_fu_338_p2();
    void thread_notrhs_fu_343_p2();
    void thread_random_priorities_address0();
    void thread_random_priorities_ce0();
    void thread_result_4_fu_361_p2();
    void thread_result_s_fu_263_p2();
    void thread_rev1_fu_333_p2();
    void thread_slt_fu_322_p2();
    void thread_tmp2_fu_349_p2();
    void thread_tmp_1_fu_328_p1();
    void thread_tmp_2_fu_257_p2();
    void thread_tmp_3_cast_fu_247_p1();
    void thread_tmp_3_fu_241_p2();
    void thread_tmp_4_fu_251_p2();
    void thread_tmp_6_fu_281_p1();
    void thread_tmp_7_fu_355_p2();
    void thread_tmp_9_fu_305_p1();
    void thread_tmp_fu_236_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
