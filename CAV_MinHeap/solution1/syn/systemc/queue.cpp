// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "queue.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic queue::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic queue::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> queue::ap_ST_st1_fsm_0 = "000";
const sc_lv<3> queue::ap_ST_st2_fsm_1 = "1";
const sc_lv<3> queue::ap_ST_st3_fsm_2 = "10";
const sc_lv<3> queue::ap_ST_st4_fsm_3 = "11";
const sc_lv<3> queue::ap_ST_st5_fsm_4 = "100";
const sc_lv<3> queue::ap_ST_st6_fsm_5 = "101";
const sc_lv<3> queue::ap_ST_st7_fsm_6 = "110";
const sc_lv<32> queue::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> queue::ap_const_lv1_0 = "0";
const sc_lv<32> queue::ap_const_lv32_7FFFFFFF = "1111111111111111111111111111111";
const sc_lv<32> queue::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<8> queue::ap_const_lv8_1 = "1";
const sc_lv<32> queue::ap_const_lv32_C8 = "11001000";
const sc_lv<32> queue::ap_const_lv32_1 = "1";
const sc_lv<32> queue::ap_const_lv32_1F = "11111";
const sc_lv<31> queue::ap_const_lv31_7FFFFFFF = "1111111111111111111111111111111";

queue::queue(sc_module_name name) : sc_module(name), mVcdFile(0) {
    queueDataHeap_priority_U = new queue_queueDataHeap_priority("queueDataHeap_priority_U");
    queueDataHeap_priority_U->clk(ap_clk);
    queueDataHeap_priority_U->reset(ap_rst);
    queueDataHeap_priority_U->address0(queueDataHeap_priority_address0);
    queueDataHeap_priority_U->ce0(queueDataHeap_priority_ce0);
    queueDataHeap_priority_U->we0(queueDataHeap_priority_we0);
    queueDataHeap_priority_U->d0(queueDataHeap_priority_d0);
    queueDataHeap_priority_U->q0(queueDataHeap_priority_q0);
    queueDataHeap_priority_U->address1(queueDataHeap_priority_address1);
    queueDataHeap_priority_U->ce1(queueDataHeap_priority_ce1);
    queueDataHeap_priority_U->we1(queueDataHeap_priority_we1);
    queueDataHeap_priority_U->d1(queueDataHeap_priority_d1);
    queueDataHeap_priority_U->q1(queueDataHeap_priority_q1);
    queueDataHeap_data_U = new queue_queueDataHeap_priority("queueDataHeap_data_U");
    queueDataHeap_data_U->clk(ap_clk);
    queueDataHeap_data_U->reset(ap_rst);
    queueDataHeap_data_U->address0(queueDataHeap_data_address0);
    queueDataHeap_data_U->ce0(queueDataHeap_data_ce0);
    queueDataHeap_data_U->we0(queueDataHeap_data_we0);
    queueDataHeap_data_U->d0(queueDataHeap_data_d0);
    queueDataHeap_data_U->q0(queueDataHeap_data_q0);
    queueDataHeap_data_U->address1(queueDataHeap_data_address1);
    queueDataHeap_data_U->ce1(queueDataHeap_data_ce1);
    queueDataHeap_data_U->we1(queueDataHeap_data_we1);
    queueDataHeap_data_U->d1(queueDataHeap_data_d1);
    queueDataHeap_data_U->q1(queueDataHeap_data_q1);
    grp_min_heapify_fu_169 = new min_heapify("grp_min_heapify_fu_169");
    grp_min_heapify_fu_169->ap_clk(ap_clk);
    grp_min_heapify_fu_169->ap_rst(ap_rst);
    grp_min_heapify_fu_169->ap_start(grp_min_heapify_fu_169_ap_start);
    grp_min_heapify_fu_169->ap_done(grp_min_heapify_fu_169_ap_done);
    grp_min_heapify_fu_169->ap_idle(grp_min_heapify_fu_169_ap_idle);
    grp_min_heapify_fu_169->ap_ready(grp_min_heapify_fu_169_ap_ready);
    grp_min_heapify_fu_169->a_priority_address0(grp_min_heapify_fu_169_a_priority_address0);
    grp_min_heapify_fu_169->a_priority_ce0(grp_min_heapify_fu_169_a_priority_ce0);
    grp_min_heapify_fu_169->a_priority_we0(grp_min_heapify_fu_169_a_priority_we0);
    grp_min_heapify_fu_169->a_priority_d0(grp_min_heapify_fu_169_a_priority_d0);
    grp_min_heapify_fu_169->a_priority_q0(grp_min_heapify_fu_169_a_priority_q0);
    grp_min_heapify_fu_169->a_priority_address1(grp_min_heapify_fu_169_a_priority_address1);
    grp_min_heapify_fu_169->a_priority_ce1(grp_min_heapify_fu_169_a_priority_ce1);
    grp_min_heapify_fu_169->a_priority_we1(grp_min_heapify_fu_169_a_priority_we1);
    grp_min_heapify_fu_169->a_priority_d1(grp_min_heapify_fu_169_a_priority_d1);
    grp_min_heapify_fu_169->a_priority_q1(grp_min_heapify_fu_169_a_priority_q1);
    grp_min_heapify_fu_169->a_data_address0(grp_min_heapify_fu_169_a_data_address0);
    grp_min_heapify_fu_169->a_data_ce0(grp_min_heapify_fu_169_a_data_ce0);
    grp_min_heapify_fu_169->a_data_we0(grp_min_heapify_fu_169_a_data_we0);
    grp_min_heapify_fu_169->a_data_d0(grp_min_heapify_fu_169_a_data_d0);
    grp_min_heapify_fu_169->a_data_q0(grp_min_heapify_fu_169_a_data_q0);
    grp_min_heapify_fu_169->i(grp_min_heapify_fu_169_i);
    grp_min_heapify_fu_169->n(grp_min_heapify_fu_169_n);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( outData_priority_2_reg_136 );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( outData_data_2_reg_152 );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_grp_min_heapify_fu_169_a_data_q0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( queueDataHeap_data_q0 );

    SC_METHOD(thread_grp_min_heapify_fu_169_a_priority_q0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( queueDataHeap_priority_q0 );

    SC_METHOD(thread_grp_min_heapify_fu_169_a_priority_q1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( queueDataHeap_priority_q1 );

    SC_METHOD(thread_grp_min_heapify_fu_169_ap_start);
    sensitive << ( grp_min_heapify_fu_169_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_min_heapify_fu_169_i);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i9_i_i1_reg_116 );
    sensitive << ( i9_i_i_reg_126 );

    SC_METHOD(thread_grp_min_heapify_fu_169_n);
    sensitive << ( ap_CS_fsm );
    sensitive << ( n_assign_reg_438 );
    sensitive << ( n_assign_1_reg_459 );

    SC_METHOD(thread_i_10_cast_fu_382_p1);
    sensitive << ( i_10_fu_376_p2 );

    SC_METHOD(thread_i_10_fu_376_p2);
    sensitive << ( tmp_21_fu_372_p1 );

    SC_METHOD(thread_i_11_cast_fu_357_p1);
    sensitive << ( i_11_fu_351_p2 );

    SC_METHOD(thread_i_11_fu_351_p2);
    sensitive << ( tmp_22_fu_347_p1 );

    SC_METHOD(thread_i_9_fu_333_p3);
    sensitive << ( tmp_20_fu_286_p3 );
    sensitive << ( p_neg_t_i_i9_fu_313_p2 );
    sensitive << ( tmp_18_fu_329_p1 );

    SC_METHOD(thread_i_fu_273_p3);
    sensitive << ( tmp_19_fu_225_p3 );
    sensitive << ( p_neg_t_i_i_fu_253_p2 );
    sensitive << ( tmp_16_fu_269_p1 );

    SC_METHOD(thread_inData_data_cast_fu_181_p1);
    sensitive << ( inData_data );

    SC_METHOD(thread_inData_priority_cast_fu_186_p1);
    sensitive << ( inData_priority );

    SC_METHOD(thread_isPush_read_read_fu_58_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( isPush );

    SC_METHOD(thread_n_assign_1_fu_281_p2);
    sensitive << ( size_load_reg_416 );

    SC_METHOD(thread_n_assign_fu_213_p2);
    sensitive << ( size );

    SC_METHOD(thread_p_lshr_f_i_i1_fu_319_p4);
    sensitive << ( n_assign_1_fu_281_p2 );

    SC_METHOD(thread_p_lshr_f_i_i_fu_259_p4);
    sensitive << ( n_assign_fu_213_p2 );

    SC_METHOD(thread_p_lshr_i_i8_fu_299_p4);
    sensitive << ( p_neg_i_i7_fu_294_p2 );

    SC_METHOD(thread_p_lshr_i_i_cast_fu_249_p1);
    sensitive << ( p_lshr_i_i_fu_243_p2 );

    SC_METHOD(thread_p_lshr_i_i_fu_243_p2);
    sensitive << ( p_neg_i_i_cast_fu_233_p4 );

    SC_METHOD(thread_p_neg_i_i7_fu_294_p2);
    sensitive << ( size_load_reg_416 );

    SC_METHOD(thread_p_neg_i_i_cast_fu_233_p4);
    sensitive << ( size );

    SC_METHOD(thread_p_neg_t_i_i9_fu_313_p2);
    sensitive << ( tmp_17_fu_309_p1 );

    SC_METHOD(thread_p_neg_t_i_i_fu_253_p2);
    sensitive << ( p_lshr_i_i_cast_fu_249_p1 );

    SC_METHOD(thread_queueDataHeap_data_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( isPush_read_read_fu_58_p2 );
    sensitive << ( tmp_s_fu_195_p2 );
    sensitive << ( tmp_fu_207_p2 );
    sensitive << ( grp_min_heapify_fu_169_a_data_address0 );
    sensitive << ( tmp_i_fu_219_p1 );

    SC_METHOD(thread_queueDataHeap_data_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_i1_fu_201_p1 );

    SC_METHOD(thread_queueDataHeap_data_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( isPush_read_read_fu_58_p2 );
    sensitive << ( tmp_s_fu_195_p2 );
    sensitive << ( tmp_fu_207_p2 );
    sensitive << ( grp_min_heapify_fu_169_a_data_ce0 );

    SC_METHOD(thread_queueDataHeap_data_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_queueDataHeap_data_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( inData_data_cast_fu_181_p1 );
    sensitive << ( isPush_read_read_fu_58_p2 );
    sensitive << ( tmp_fu_207_p2 );
    sensitive << ( grp_min_heapify_fu_169_a_data_d0 );

    SC_METHOD(thread_queueDataHeap_data_d1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( queueDataHeap_data_q1 );

    SC_METHOD(thread_queueDataHeap_data_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( isPush_read_read_fu_58_p2 );
    sensitive << ( tmp_fu_207_p2 );
    sensitive << ( grp_min_heapify_fu_169_a_data_we0 );

    SC_METHOD(thread_queueDataHeap_data_we1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_queueDataHeap_priority_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( isPush_read_read_fu_58_p2 );
    sensitive << ( tmp_s_fu_195_p2 );
    sensitive << ( tmp_fu_207_p2 );
    sensitive << ( grp_min_heapify_fu_169_a_priority_address0 );
    sensitive << ( tmp_i_fu_219_p1 );

    SC_METHOD(thread_queueDataHeap_priority_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_min_heapify_fu_169_a_priority_address1 );
    sensitive << ( tmp_i1_fu_201_p1 );

    SC_METHOD(thread_queueDataHeap_priority_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( isPush_read_read_fu_58_p2 );
    sensitive << ( tmp_s_fu_195_p2 );
    sensitive << ( tmp_fu_207_p2 );
    sensitive << ( grp_min_heapify_fu_169_a_priority_ce0 );

    SC_METHOD(thread_queueDataHeap_priority_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_min_heapify_fu_169_a_priority_ce1 );

    SC_METHOD(thread_queueDataHeap_priority_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( inData_priority_cast_fu_186_p1 );
    sensitive << ( isPush_read_read_fu_58_p2 );
    sensitive << ( tmp_fu_207_p2 );
    sensitive << ( grp_min_heapify_fu_169_a_priority_d0 );

    SC_METHOD(thread_queueDataHeap_priority_d1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( queueDataHeap_priority_q1 );
    sensitive << ( grp_min_heapify_fu_169_a_priority_d1 );

    SC_METHOD(thread_queueDataHeap_priority_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( isPush_read_read_fu_58_p2 );
    sensitive << ( tmp_fu_207_p2 );
    sensitive << ( grp_min_heapify_fu_169_a_priority_we0 );

    SC_METHOD(thread_queueDataHeap_priority_we1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_min_heapify_fu_169_a_priority_we1 );

    SC_METHOD(thread_tmp_16_fu_269_p1);
    sensitive << ( p_lshr_f_i_i_fu_259_p4 );

    SC_METHOD(thread_tmp_17_fu_309_p1);
    sensitive << ( p_lshr_i_i8_fu_299_p4 );

    SC_METHOD(thread_tmp_18_fu_329_p1);
    sensitive << ( p_lshr_f_i_i1_fu_319_p4 );

    SC_METHOD(thread_tmp_19_fu_225_p3);
    sensitive << ( n_assign_fu_213_p2 );

    SC_METHOD(thread_tmp_20_fu_286_p3);
    sensitive << ( n_assign_1_fu_281_p2 );

    SC_METHOD(thread_tmp_21_fu_372_p1);
    sensitive << ( i9_i_i_reg_126 );

    SC_METHOD(thread_tmp_22_fu_347_p1);
    sensitive << ( i9_i_i1_reg_116 );

    SC_METHOD(thread_tmp_fu_207_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( size );
    sensitive << ( isPush_read_read_fu_58_p2 );

    SC_METHOD(thread_tmp_i1_fu_201_p1);
    sensitive << ( size );

    SC_METHOD(thread_tmp_i_fu_219_p1);
    sensitive << ( n_assign_fu_213_p2 );

    SC_METHOD(thread_tmp_i_i1_fu_341_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i9_i_i1_reg_116 );

    SC_METHOD(thread_tmp_i_i_fu_366_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( i9_i_i_reg_126 );

    SC_METHOD(thread_tmp_s_fu_195_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( size );
    sensitive << ( isPush_read_read_fu_58_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( isPush_read_read_fu_58_p2 );
    sensitive << ( tmp_s_fu_195_p2 );
    sensitive << ( tmp_fu_207_p2 );
    sensitive << ( tmp_i_i1_fu_341_p2 );
    sensitive << ( tmp_i_i_fu_366_p2 );
    sensitive << ( grp_min_heapify_fu_169_ap_done );

    ap_CS_fsm = "000";
    size = "00000000000000000000000000000000";
    grp_min_heapify_fu_169_ap_start_ap_start_reg = SC_LOGIC_0;
    ap_return_0_preg = "00000000000000000000000000000000";
    ap_return_1_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "queue_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, isPush, "(port)isPush");
    sc_trace(mVcdFile, inData_priority, "(port)inData_priority");
    sc_trace(mVcdFile, inData_data, "(port)inData_data");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, size, "size");
    sc_trace(mVcdFile, queueDataHeap_priority_address0, "queueDataHeap_priority_address0");
    sc_trace(mVcdFile, queueDataHeap_priority_ce0, "queueDataHeap_priority_ce0");
    sc_trace(mVcdFile, queueDataHeap_priority_we0, "queueDataHeap_priority_we0");
    sc_trace(mVcdFile, queueDataHeap_priority_d0, "queueDataHeap_priority_d0");
    sc_trace(mVcdFile, queueDataHeap_priority_q0, "queueDataHeap_priority_q0");
    sc_trace(mVcdFile, queueDataHeap_priority_address1, "queueDataHeap_priority_address1");
    sc_trace(mVcdFile, queueDataHeap_priority_ce1, "queueDataHeap_priority_ce1");
    sc_trace(mVcdFile, queueDataHeap_priority_we1, "queueDataHeap_priority_we1");
    sc_trace(mVcdFile, queueDataHeap_priority_d1, "queueDataHeap_priority_d1");
    sc_trace(mVcdFile, queueDataHeap_priority_q1, "queueDataHeap_priority_q1");
    sc_trace(mVcdFile, queueDataHeap_data_address0, "queueDataHeap_data_address0");
    sc_trace(mVcdFile, queueDataHeap_data_ce0, "queueDataHeap_data_ce0");
    sc_trace(mVcdFile, queueDataHeap_data_we0, "queueDataHeap_data_we0");
    sc_trace(mVcdFile, queueDataHeap_data_d0, "queueDataHeap_data_d0");
    sc_trace(mVcdFile, queueDataHeap_data_q0, "queueDataHeap_data_q0");
    sc_trace(mVcdFile, queueDataHeap_data_address1, "queueDataHeap_data_address1");
    sc_trace(mVcdFile, queueDataHeap_data_ce1, "queueDataHeap_data_ce1");
    sc_trace(mVcdFile, queueDataHeap_data_we1, "queueDataHeap_data_we1");
    sc_trace(mVcdFile, queueDataHeap_data_d1, "queueDataHeap_data_d1");
    sc_trace(mVcdFile, queueDataHeap_data_q1, "queueDataHeap_data_q1");
    sc_trace(mVcdFile, inData_data_cast_fu_181_p1, "inData_data_cast_fu_181_p1");
    sc_trace(mVcdFile, inData_data_cast_reg_406, "inData_data_cast_reg_406");
    sc_trace(mVcdFile, inData_priority_cast_fu_186_p1, "inData_priority_cast_fu_186_p1");
    sc_trace(mVcdFile, inData_priority_cast_reg_411, "inData_priority_cast_reg_411");
    sc_trace(mVcdFile, size_load_reg_416, "size_load_reg_416");
    sc_trace(mVcdFile, isPush_read_read_fu_58_p2, "isPush_read_read_fu_58_p2");
    sc_trace(mVcdFile, tmp_s_fu_195_p2, "tmp_s_fu_195_p2");
    sc_trace(mVcdFile, n_assign_fu_213_p2, "n_assign_fu_213_p2");
    sc_trace(mVcdFile, n_assign_reg_438, "n_assign_reg_438");
    sc_trace(mVcdFile, tmp_fu_207_p2, "tmp_fu_207_p2");
    sc_trace(mVcdFile, i_fu_273_p3, "i_fu_273_p3");
    sc_trace(mVcdFile, queueDataHeap_priority_load_reg_449, "queueDataHeap_priority_load_reg_449");
    sc_trace(mVcdFile, queueDataHeap_data_load_reg_454, "queueDataHeap_data_load_reg_454");
    sc_trace(mVcdFile, n_assign_1_fu_281_p2, "n_assign_1_fu_281_p2");
    sc_trace(mVcdFile, n_assign_1_reg_459, "n_assign_1_reg_459");
    sc_trace(mVcdFile, i_9_fu_333_p3, "i_9_fu_333_p3");
    sc_trace(mVcdFile, i_11_cast_fu_357_p1, "i_11_cast_fu_357_p1");
    sc_trace(mVcdFile, i_11_cast_reg_473, "i_11_cast_reg_473");
    sc_trace(mVcdFile, tmp_i_i1_fu_341_p2, "tmp_i_i1_fu_341_p2");
    sc_trace(mVcdFile, i_10_cast_fu_382_p1, "i_10_cast_fu_382_p1");
    sc_trace(mVcdFile, i_10_cast_reg_481, "i_10_cast_reg_481");
    sc_trace(mVcdFile, tmp_i_i_fu_366_p2, "tmp_i_i_fu_366_p2");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_ap_start, "grp_min_heapify_fu_169_ap_start");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_ap_done, "grp_min_heapify_fu_169_ap_done");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_ap_idle, "grp_min_heapify_fu_169_ap_idle");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_ap_ready, "grp_min_heapify_fu_169_ap_ready");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_priority_address0, "grp_min_heapify_fu_169_a_priority_address0");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_priority_ce0, "grp_min_heapify_fu_169_a_priority_ce0");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_priority_we0, "grp_min_heapify_fu_169_a_priority_we0");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_priority_d0, "grp_min_heapify_fu_169_a_priority_d0");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_priority_q0, "grp_min_heapify_fu_169_a_priority_q0");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_priority_address1, "grp_min_heapify_fu_169_a_priority_address1");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_priority_ce1, "grp_min_heapify_fu_169_a_priority_ce1");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_priority_we1, "grp_min_heapify_fu_169_a_priority_we1");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_priority_d1, "grp_min_heapify_fu_169_a_priority_d1");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_priority_q1, "grp_min_heapify_fu_169_a_priority_q1");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_data_address0, "grp_min_heapify_fu_169_a_data_address0");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_data_ce0, "grp_min_heapify_fu_169_a_data_ce0");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_data_we0, "grp_min_heapify_fu_169_a_data_we0");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_data_d0, "grp_min_heapify_fu_169_a_data_d0");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_a_data_q0, "grp_min_heapify_fu_169_a_data_q0");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_i, "grp_min_heapify_fu_169_i");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_n, "grp_min_heapify_fu_169_n");
    sc_trace(mVcdFile, i9_i_i1_reg_116, "i9_i_i1_reg_116");
    sc_trace(mVcdFile, i9_i_i_reg_126, "i9_i_i_reg_126");
    sc_trace(mVcdFile, outData_priority_2_reg_136, "outData_priority_2_reg_136");
    sc_trace(mVcdFile, outData_data_2_reg_152, "outData_data_2_reg_152");
    sc_trace(mVcdFile, grp_min_heapify_fu_169_ap_start_ap_start_reg, "grp_min_heapify_fu_169_ap_start_ap_start_reg");
    sc_trace(mVcdFile, tmp_i1_fu_201_p1, "tmp_i1_fu_201_p1");
    sc_trace(mVcdFile, tmp_i_fu_219_p1, "tmp_i_fu_219_p1");
    sc_trace(mVcdFile, p_neg_i_i_cast_fu_233_p4, "p_neg_i_i_cast_fu_233_p4");
    sc_trace(mVcdFile, p_lshr_i_i_fu_243_p2, "p_lshr_i_i_fu_243_p2");
    sc_trace(mVcdFile, p_lshr_i_i_cast_fu_249_p1, "p_lshr_i_i_cast_fu_249_p1");
    sc_trace(mVcdFile, p_lshr_f_i_i_fu_259_p4, "p_lshr_f_i_i_fu_259_p4");
    sc_trace(mVcdFile, tmp_19_fu_225_p3, "tmp_19_fu_225_p3");
    sc_trace(mVcdFile, p_neg_t_i_i_fu_253_p2, "p_neg_t_i_i_fu_253_p2");
    sc_trace(mVcdFile, tmp_16_fu_269_p1, "tmp_16_fu_269_p1");
    sc_trace(mVcdFile, p_neg_i_i7_fu_294_p2, "p_neg_i_i7_fu_294_p2");
    sc_trace(mVcdFile, p_lshr_i_i8_fu_299_p4, "p_lshr_i_i8_fu_299_p4");
    sc_trace(mVcdFile, tmp_17_fu_309_p1, "tmp_17_fu_309_p1");
    sc_trace(mVcdFile, p_lshr_f_i_i1_fu_319_p4, "p_lshr_f_i_i1_fu_319_p4");
    sc_trace(mVcdFile, tmp_20_fu_286_p3, "tmp_20_fu_286_p3");
    sc_trace(mVcdFile, p_neg_t_i_i9_fu_313_p2, "p_neg_t_i_i9_fu_313_p2");
    sc_trace(mVcdFile, tmp_18_fu_329_p1, "tmp_18_fu_329_p1");
    sc_trace(mVcdFile, tmp_22_fu_347_p1, "tmp_22_fu_347_p1");
    sc_trace(mVcdFile, i_11_fu_351_p2, "i_11_fu_351_p2");
    sc_trace(mVcdFile, tmp_21_fu_372_p1, "tmp_21_fu_372_p1");
    sc_trace(mVcdFile, i_10_fu_376_p2, "i_10_fu_376_p2");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

queue::~queue() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete queueDataHeap_priority_U;
    delete queueDataHeap_data_U;
    delete grp_min_heapify_fu_169;
}

void queue::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,3,3>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
            ap_return_0_preg = outData_priority_2_reg_136.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,3,3>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
            ap_return_1_preg = outData_data_2_reg_152.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_min_heapify_fu_169_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
              !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_i1_fu_341_p2.read())) || 
             (esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
              !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_i_fu_366_p2.read())))) {
            grp_min_heapify_fu_169_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_min_heapify_fu_169_ap_ready.read())) {
            grp_min_heapify_fu_169_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_min_heapify_fu_169_ap_done.read()))) {
        i9_i_i1_reg_116 = i_11_cast_reg_473.read();
    } else if (esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        i9_i_i1_reg_116 = i_9_fu_333_p3.read();
    }
    if ((!esl_seteq<1,1,1>(ap_const_logic_0, grp_min_heapify_fu_169_ap_done.read()) && 
         esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()))) {
        i9_i_i_reg_126 = i_10_cast_reg_481.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
                !esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read()))) {
        i9_i_i_reg_126 = i_fu_273_p3.read();
    }
    if (((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          !esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read())) || 
         (esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_195_p2.read())))) {
        outData_data_2_reg_152 = ap_const_lv32_FFFFFFFF;
    } else if ((esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_i1_fu_341_p2.read()))) {
        outData_data_2_reg_152 = queueDataHeap_data_load_reg_454.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_i_fu_366_p2.read()))) {
        outData_data_2_reg_152 = inData_data_cast_reg_406.read();
    }
    if (((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          !esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read())) || 
         (esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_195_p2.read())))) {
        outData_priority_2_reg_136 = ap_const_lv32_7FFFFFFF;
    } else if ((esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_i1_fu_341_p2.read()))) {
        outData_priority_2_reg_136 = queueDataHeap_priority_load_reg_449.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_i_fu_366_p2.read()))) {
        outData_priority_2_reg_136 = inData_priority_cast_reg_411.read();
    }
    if ((esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_i_fu_366_p2.read()))) {
        size = n_assign_reg_438.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_i1_fu_341_p2.read()))) {
        size = n_assign_1_reg_459.read();
    }
    if ((esl_seteq<1,3,3>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_i_fu_366_p2.read()))) {
        i_10_cast_reg_481 = i_10_cast_fu_382_p1.read();
    }
    if ((esl_seteq<1,3,3>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_i1_fu_341_p2.read()))) {
        i_11_cast_reg_473 = i_11_cast_fu_357_p1.read();
    }
    if ((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        inData_data_cast_reg_406 = inData_data_cast_fu_181_p1.read();
        inData_priority_cast_reg_411 = inData_priority_cast_fu_186_p1.read();
        size_load_reg_416 = size.read();
    }
    if (esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        n_assign_1_reg_459 = n_assign_1_fu_281_p2.read();
        queueDataHeap_data_load_reg_454 = queueDataHeap_data_q0.read();
        queueDataHeap_priority_load_reg_449 = queueDataHeap_priority_q0.read();
    }
    if ((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read()))) {
        n_assign_reg_438 = n_assign_fu_213_p2.read();
    }
}

void queue::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) || 
         esl_seteq<1,3,3>(ap_ST_st7_fsm_6, ap_CS_fsm.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void queue::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void queue::thread_ap_ready() {
    if (esl_seteq<1,3,3>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void queue::thread_ap_return_0() {
    if (esl_seteq<1,3,3>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        ap_return_0 = outData_priority_2_reg_136.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void queue::thread_ap_return_1() {
    if (esl_seteq<1,3,3>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        ap_return_1 = outData_data_2_reg_152.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void queue::thread_grp_min_heapify_fu_169_a_data_q0() {
    grp_min_heapify_fu_169_a_data_q0 = queueDataHeap_data_q0.read();
}

void queue::thread_grp_min_heapify_fu_169_a_priority_q0() {
    grp_min_heapify_fu_169_a_priority_q0 = queueDataHeap_priority_q0.read();
}

void queue::thread_grp_min_heapify_fu_169_a_priority_q1() {
    grp_min_heapify_fu_169_a_priority_q1 = queueDataHeap_priority_q1.read();
}

void queue::thread_grp_min_heapify_fu_169_ap_start() {
    grp_min_heapify_fu_169_ap_start = grp_min_heapify_fu_169_ap_start_ap_start_reg.read();
}

void queue::thread_grp_min_heapify_fu_169_i() {
    if (esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read())) {
        grp_min_heapify_fu_169_i = i9_i_i_reg_126.read();
    } else if (esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        grp_min_heapify_fu_169_i = i9_i_i1_reg_116.read();
    } else {
        grp_min_heapify_fu_169_i =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void queue::thread_grp_min_heapify_fu_169_n() {
    if (esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read())) {
        grp_min_heapify_fu_169_n = n_assign_reg_438.read();
    } else if (esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        grp_min_heapify_fu_169_n = n_assign_1_reg_459.read();
    } else {
        grp_min_heapify_fu_169_n =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void queue::thread_i_10_cast_fu_382_p1() {
    i_10_cast_fu_382_p1 = esl_zext<32,31>(i_10_fu_376_p2.read());
}

void queue::thread_i_10_fu_376_p2() {
    i_10_fu_376_p2 = (!tmp_21_fu_372_p1.read().is_01() || !ap_const_lv31_7FFFFFFF.is_01())? sc_lv<31>(): (sc_bigint<31>(tmp_21_fu_372_p1.read()) + sc_biguint<31>(ap_const_lv31_7FFFFFFF));
}

void queue::thread_i_11_cast_fu_357_p1() {
    i_11_cast_fu_357_p1 = esl_zext<32,31>(i_11_fu_351_p2.read());
}

void queue::thread_i_11_fu_351_p2() {
    i_11_fu_351_p2 = (!tmp_22_fu_347_p1.read().is_01() || !ap_const_lv31_7FFFFFFF.is_01())? sc_lv<31>(): (sc_bigint<31>(tmp_22_fu_347_p1.read()) + sc_biguint<31>(ap_const_lv31_7FFFFFFF));
}

void queue::thread_i_9_fu_333_p3() {
    i_9_fu_333_p3 = (!tmp_20_fu_286_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_20_fu_286_p3.read()[0].to_bool())? p_neg_t_i_i9_fu_313_p2.read(): tmp_18_fu_329_p1.read());
}

void queue::thread_i_fu_273_p3() {
    i_fu_273_p3 = (!tmp_19_fu_225_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_19_fu_225_p3.read()[0].to_bool())? p_neg_t_i_i_fu_253_p2.read(): tmp_16_fu_269_p1.read());
}

void queue::thread_inData_data_cast_fu_181_p1() {
    inData_data_cast_fu_181_p1 = esl_zext<32,8>(inData_data.read());
}

void queue::thread_inData_priority_cast_fu_186_p1() {
    inData_priority_cast_fu_186_p1 = esl_zext<32,9>(inData_priority.read());
}

void queue::thread_isPush_read_read_fu_58_p2() {
    isPush_read_read_fu_58_p2 =  (sc_lv<1>) (isPush.read());
}

void queue::thread_n_assign_1_fu_281_p2() {
    n_assign_1_fu_281_p2 = (!size_load_reg_416.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_bigint<32>(size_load_reg_416.read()) + sc_biguint<32>(ap_const_lv32_FFFFFFFF));
}

void queue::thread_n_assign_fu_213_p2() {
    n_assign_fu_213_p2 = (!size.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(size.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void queue::thread_p_lshr_f_i_i1_fu_319_p4() {
    p_lshr_f_i_i1_fu_319_p4 = n_assign_1_fu_281_p2.read().range(31, 1);
}

void queue::thread_p_lshr_f_i_i_fu_259_p4() {
    p_lshr_f_i_i_fu_259_p4 = n_assign_fu_213_p2.read().range(31, 1);
}

void queue::thread_p_lshr_i_i8_fu_299_p4() {
    p_lshr_i_i8_fu_299_p4 = p_neg_i_i7_fu_294_p2.read().range(31, 1);
}

void queue::thread_p_lshr_i_i_cast_fu_249_p1() {
    p_lshr_i_i_cast_fu_249_p1 = esl_zext<32,31>(p_lshr_i_i_fu_243_p2.read());
}

void queue::thread_p_lshr_i_i_fu_243_p2() {
    p_lshr_i_i_fu_243_p2 = (p_neg_i_i_cast_fu_233_p4.read() ^ ap_const_lv31_7FFFFFFF);
}

void queue::thread_p_neg_i_i7_fu_294_p2() {
    p_neg_i_i7_fu_294_p2 = (!ap_const_lv32_1.is_01() || !size_load_reg_416.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_1) - sc_biguint<32>(size_load_reg_416.read()));
}

void queue::thread_p_neg_i_i_cast_fu_233_p4() {
    p_neg_i_i_cast_fu_233_p4 = size.read().range(31, 1);
}

void queue::thread_p_neg_t_i_i9_fu_313_p2() {
    p_neg_t_i_i9_fu_313_p2 = (!ap_const_lv32_0.is_01() || !tmp_17_fu_309_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_0) - sc_biguint<32>(tmp_17_fu_309_p1.read()));
}

void queue::thread_p_neg_t_i_i_fu_253_p2() {
    p_neg_t_i_i_fu_253_p2 = (!ap_const_lv32_0.is_01() || !p_lshr_i_i_cast_fu_249_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_0) - sc_biguint<32>(p_lshr_i_i_cast_fu_249_p1.read()));
}

void queue::thread_queueDataHeap_data_address0() {
    if ((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read()))) {
        queueDataHeap_data_address0 =  (sc_lv<8>) (tmp_i_fu_219_p1.read());
    } else if ((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_195_p2.read()))) {
        queueDataHeap_data_address0 = ap_const_lv8_1;
    } else if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()))) {
        queueDataHeap_data_address0 = grp_min_heapify_fu_169_a_data_address0.read();
    } else {
        queueDataHeap_data_address0 = "XXXXXXXX";
    }
}

void queue::thread_queueDataHeap_data_address1() {
    if (esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        queueDataHeap_data_address1 = ap_const_lv8_1;
    } else if (esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) {
        queueDataHeap_data_address1 =  (sc_lv<8>) (tmp_i1_fu_201_p1.read());
    } else {
        queueDataHeap_data_address1 = "XXXXXXXX";
    }
}

void queue::thread_queueDataHeap_data_ce0() {
    if (((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_195_p2.read())) || 
         (esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          !esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read())))) {
        queueDataHeap_data_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()))) {
        queueDataHeap_data_ce0 = grp_min_heapify_fu_169_a_data_ce0.read();
    } else {
        queueDataHeap_data_ce0 = ap_const_logic_0;
    }
}

void queue::thread_queueDataHeap_data_ce1() {
    if (((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
         esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read()))) {
        queueDataHeap_data_ce1 = ap_const_logic_1;
    } else {
        queueDataHeap_data_ce1 = ap_const_logic_0;
    }
}

void queue::thread_queueDataHeap_data_d0() {
    if ((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read()))) {
        queueDataHeap_data_d0 = inData_data_cast_fu_181_p1.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()))) {
        queueDataHeap_data_d0 = grp_min_heapify_fu_169_a_data_d0.read();
    } else {
        queueDataHeap_data_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void queue::thread_queueDataHeap_data_d1() {
    queueDataHeap_data_d1 = queueDataHeap_data_q1.read();
}

void queue::thread_queueDataHeap_data_we0() {
    if (((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          !esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read())))) {
        queueDataHeap_data_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()))) {
        queueDataHeap_data_we0 = grp_min_heapify_fu_169_a_data_we0.read();
    } else {
        queueDataHeap_data_we0 = ap_const_logic_0;
    }
}

void queue::thread_queueDataHeap_data_we1() {
    if ((esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read()))) {
        queueDataHeap_data_we1 = ap_const_logic_1;
    } else {
        queueDataHeap_data_we1 = ap_const_logic_0;
    }
}

void queue::thread_queueDataHeap_priority_address0() {
    if ((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read()))) {
        queueDataHeap_priority_address0 =  (sc_lv<8>) (tmp_i_fu_219_p1.read());
    } else if ((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_195_p2.read()))) {
        queueDataHeap_priority_address0 = ap_const_lv8_1;
    } else if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()))) {
        queueDataHeap_priority_address0 = grp_min_heapify_fu_169_a_priority_address0.read();
    } else {
        queueDataHeap_priority_address0 = "XXXXXXXX";
    }
}

void queue::thread_queueDataHeap_priority_address1() {
    if (esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        queueDataHeap_priority_address1 = ap_const_lv8_1;
    } else if (esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) {
        queueDataHeap_priority_address1 =  (sc_lv<8>) (tmp_i1_fu_201_p1.read());
    } else if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()))) {
        queueDataHeap_priority_address1 = grp_min_heapify_fu_169_a_priority_address1.read();
    } else {
        queueDataHeap_priority_address1 = "XXXXXXXX";
    }
}

void queue::thread_queueDataHeap_priority_ce0() {
    if (((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_195_p2.read())) || 
         (esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          !esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read())))) {
        queueDataHeap_priority_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()))) {
        queueDataHeap_priority_ce0 = grp_min_heapify_fu_169_a_priority_ce0.read();
    } else {
        queueDataHeap_priority_ce0 = ap_const_logic_0;
    }
}

void queue::thread_queueDataHeap_priority_ce1() {
    if (((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
         esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read()))) {
        queueDataHeap_priority_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()))) {
        queueDataHeap_priority_ce1 = grp_min_heapify_fu_169_a_priority_ce1.read();
    } else {
        queueDataHeap_priority_ce1 = ap_const_logic_0;
    }
}

void queue::thread_queueDataHeap_priority_d0() {
    if ((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read()))) {
        queueDataHeap_priority_d0 = inData_priority_cast_fu_186_p1.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()))) {
        queueDataHeap_priority_d0 = grp_min_heapify_fu_169_a_priority_d0.read();
    } else {
        queueDataHeap_priority_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void queue::thread_queueDataHeap_priority_d1() {
    if (esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        queueDataHeap_priority_d1 = queueDataHeap_priority_q1.read();
    } else if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()))) {
        queueDataHeap_priority_d1 = grp_min_heapify_fu_169_a_priority_d1.read();
    } else {
        queueDataHeap_priority_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void queue::thread_queueDataHeap_priority_we0() {
    if (((esl_seteq<1,3,3>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
          !esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read())))) {
        queueDataHeap_priority_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()))) {
        queueDataHeap_priority_we0 = grp_min_heapify_fu_169_a_priority_we0.read();
    } else {
        queueDataHeap_priority_we0 = ap_const_logic_0;
    }
}

void queue::thread_queueDataHeap_priority_we1() {
    if ((esl_seteq<1,3,3>(ap_ST_st2_fsm_1, ap_CS_fsm.read()))) {
        queueDataHeap_priority_we1 = ap_const_logic_1;
    } else if ((esl_seteq<1,3,3>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || 
                esl_seteq<1,3,3>(ap_ST_st6_fsm_5, ap_CS_fsm.read()))) {
        queueDataHeap_priority_we1 = grp_min_heapify_fu_169_a_priority_we1.read();
    } else {
        queueDataHeap_priority_we1 = ap_const_logic_0;
    }
}

void queue::thread_tmp_16_fu_269_p1() {
    tmp_16_fu_269_p1 = esl_zext<32,31>(p_lshr_f_i_i_fu_259_p4.read());
}

void queue::thread_tmp_17_fu_309_p1() {
    tmp_17_fu_309_p1 = esl_zext<32,31>(p_lshr_i_i8_fu_299_p4.read());
}

void queue::thread_tmp_18_fu_329_p1() {
    tmp_18_fu_329_p1 = esl_zext<32,31>(p_lshr_f_i_i1_fu_319_p4.read());
}

void queue::thread_tmp_19_fu_225_p3() {
    tmp_19_fu_225_p3 = n_assign_fu_213_p2.read().range(31, 31);
}

void queue::thread_tmp_20_fu_286_p3() {
    tmp_20_fu_286_p3 = n_assign_1_fu_281_p2.read().range(31, 31);
}

void queue::thread_tmp_21_fu_372_p1() {
    tmp_21_fu_372_p1 = i9_i_i_reg_126.read().range(31-1, 0);
}

void queue::thread_tmp_22_fu_347_p1() {
    tmp_22_fu_347_p1 = i9_i_i1_reg_116.read().range(31-1, 0);
}

void queue::thread_tmp_fu_207_p2() {
    tmp_fu_207_p2 = (!size.read().is_01() || !ap_const_lv32_C8.is_01())? sc_lv<1>(): sc_lv<1>(size.read() == ap_const_lv32_C8);
}

void queue::thread_tmp_i1_fu_201_p1() {
    tmp_i1_fu_201_p1 = esl_sext<64,32>(size.read());
}

void queue::thread_tmp_i_fu_219_p1() {
    tmp_i_fu_219_p1 = esl_sext<64,32>(n_assign_fu_213_p2.read());
}

void queue::thread_tmp_i_i1_fu_341_p2() {
    tmp_i_i1_fu_341_p2 = (!i9_i_i1_reg_116.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(i9_i_i1_reg_116.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void queue::thread_tmp_i_i_fu_366_p2() {
    tmp_i_i_fu_366_p2 = (!i9_i_i_reg_126.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(i9_i_i_reg_126.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void queue::thread_tmp_s_fu_195_p2() {
    tmp_s_fu_195_p2 = (!size.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(size.read() == ap_const_lv32_0);
}

void queue::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read()))) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && ((!esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_207_p2.read())) || 
  (esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && 
   !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_195_p2.read()))))) {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(isPush_read_read_fu_58_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_195_p2.read()))) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_i1_fu_341_p2.read())) {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 3 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_min_heapify_fu_169_ap_done.read())) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_i_fu_366_p2.read())) {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 5 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_min_heapify_fu_169_ap_done.read())) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 6 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<3>) ("XXX");
            break;
    }
}
}

